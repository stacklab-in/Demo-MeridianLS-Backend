{"version":3,"file":"static/js/962.df141ff8.chunk.js","mappings":"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","sources":["sections/three/view.js","pages/dashboard/three.js"],"sourcesContent":["// @mui\nimport { useState, useEffect } from 'react';\n// components\nimport { useSettingsContext } from 'src/components/settings';\nimport { Button, Modal, Divider, Grid, MenuItem, Box, Container, Typography, Menu, TextField, FormControl, InputLabel, Select } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { decryptToken, formatDate, amountInWords } from 'src/utils/common';\nimport axios, { endpoints } from 'src/utils/axios';\nimport { constants } from 'src/utils/constant';\nimport { enqueueSnackbar } from 'notistack';\nimport DataTable from 'react-data-table-component';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { DateTimePicker } from '@mui/x-date-pickers';\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\n// ----------------------------------------------------------------------\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: \"600px\",\n  bgcolor: 'background.paper',\n  borderRadius: \"10px\",\n  boxShadow: 24,\n  height: 'auto',\n  p: 2,\n};\ndayjs.extend(utc);\n\nexport default function ShipmentTrackingStatusUpdate() {\n  const settings = useSettingsContext();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [updateCurrentStatus, setUpdateCurrentStatus] = useState(false);\n\n  const fetchData = async () => {\n    try {\n      const decryptedToken = localStorage.getItem(constants.keyUserToken);\n      const accessToken = decryptToken(decryptedToken);\n      const response = await axios.post(endpoints.shipment.list, {}, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      });\n      if (response) {\n        console.log({ response });\n        setIsLoading(false);\n        setData(response.data.data);\n      }\n    } catch (err) {\n      console.log({ err });\n      enqueueSnackbar('Failed to fetch jobcards!', { variant: 'error' });\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchData();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n\n  const columns = [\n    {\n      name: '#',\n      selector: (row, index) => index + 1,\n      sortable: true,\n      width: '70px',\n    },\n    {\n      name: 'Tracking No.',\n      selector: (row) => row.trackingNo,\n      sortable: true,\n    },\n    {\n      name: 'Status',\n      selector: (row) => row.statuses[row.statuses.length - 1].value,\n      sortable: true,\n      center: 'true',\n    },\n    {\n      name: 'Created On',\n      selector: (row) => formatDate(row.createdAt),\n      sortable: true,\n    },\n    {\n      name: 'Actions',\n      center: 'true',\n      width: '400px',\n      cell: (row) => (\n        <div style={{ display: 'flex', flexDirection: 'row', gap: '10px' }}>\n          <Button color=\"info\" variant=\"outlined\" onClick={() => handleOpenModal(row)} >\n            Update Status\n          </Button>\n          <Button color=\"info\" variant=\"outlined\" onClick={() => {\n            handleOpenModal(row);\n            setUpdateCurrentStatus(true);\n            setTrackingDetails((prev) => ({\n              ...prev,\n              location: '',\n              dateTime: null,\n              msg: '',\n              exceptionalMsg: ''\n            }))\n          }\n          } >\n            Update Current Status\n          </Button>\n        </div>\n      ),\n    },\n  ];\n\n\n  const [openModal, setOpenModal] = useState(false);\n  const [trackingDetails, setTrackingDetails] = useState({\n    id: '',\n    value: '',\n    location: '',\n    dateTime: null,\n    msg: '',\n    exceptionalMsg: ''\n  });\n\n  const [status, setStatus] = useState({\n    preShipmentDoc: false,\n    pickedUp: false,\n    inTransitOrigin: false,\n    clearanceAtOriginPort: false,\n    inTransitOverseas: false,\n    clearanceAtDestinationPort: false,\n    inTransitDestination: false,\n    delivered: false\n  });\n\n\n  const handleOpenModal = (row) => {\n    setOpenModal(true);\n\n\n    const statusObject = row.statuses[row.statuses.length - 1];\n\n\n    if (statusObject.value === 'PreShipmentDoc') {\n      setStatus((prev) => ({\n        ...prev,\n        preShipmentDoc: true,\n        pickedUp: false,\n        inTransitOrigin: true,\n        clearanceAtOriginPort: true,\n        inTransitOverseas: true,\n        clearanceAtDestinationPort: true,\n        inTransitDestination: true,\n        delivered: true\n\n      }))\n    } else if (statusObject.value === 'PickedUp') {\n      setStatus((prev) => ({\n        ...prev,\n        preShipmentDoc: true,\n        pickedUp: true,\n        inTransitOrigin: false,\n        clearanceAtOriginPort: true,\n        inTransitOverseas: true,\n        clearanceAtDestinationPort: true,\n        inTransitDestination: true,\n        delivered: true\n      }))\n    } else if (statusObject.value === 'InTransitOrigin') {\n      setStatus((prev) => ({\n        ...prev,\n        preShipmentDoc: true,\n        pickedUp: true,\n        inTransitOrigin: true,\n        clearanceAtOriginPort: false,\n        inTransitOverseas: true,\n        clearanceAtDestinationPort: true,\n        inTransitDestination: true,\n        delivered: true\n      }))\n    } else if (statusObject.value === 'ClearanceatOriginPort') {\n      setStatus((prev) => ({\n        ...prev,\n        preShipmentDoc: true,\n        pickedUp: true,\n        inTransitOrigin: true,\n        clearanceAtOriginPort: true,\n        inTransitOverseas: false,\n        clearanceAtDestinationPort: true,\n        inTransitDestination: true,\n        delivered: true\n      }))\n    } else if (statusObject.value === 'InTransitOverseas') {\n      setStatus((prev) => ({\n        ...prev,\n        preShipmentDoc: true,\n        pickedUp: true,\n        inTransitOrigin: true,\n        clearanceAtOriginPort: true,\n        inTransitOverseas: true,\n        clearanceAtDestinationPort: false,\n        inTransitDestination: true,\n        delivered: true\n      }))\n    } else if (statusObject.value === 'ClearanceatDestinationPort') {\n      setStatus((prev) => ({\n        ...prev,\n        preShipmentDoc: true,\n        pickedUp: true,\n        inTransitOrigin: true,\n        clearanceAtOriginPort: true,\n        inTransitOverseas: true,\n        clearanceAtDestinationPort: true,\n        inTransitDestination: false,\n        delivered: true\n      }))\n    } else if (statusObject.value === 'InTransitDestination') {\n      setStatus((prev) => ({\n        ...prev,\n        preShipmentDoc: true,\n        pickedUp: true,\n        inTransitOrigin: true,\n        clearanceAtOriginPort: true,\n        inTransitOverseas: true,\n        clearanceAtDestinationPort: true,\n        inTransitDestination: true,\n        delivered: false\n      }))\n    } else if (statusObject.value === 'Delivered') {\n      setStatus((prev) => ({\n        ...prev,\n        preShipmentDoc: true,\n        pickedUp: true,\n        inTransitOrigin: true,\n        clearanceAtOriginPort: true,\n        inTransitOverseas: true,\n        clearanceAtDestinationPort: true,\n        inTransitDestination: true,\n        delivered: true\n      }))\n    }\n\n    setTrackingDetails({\n      value: statusObject.value,\n      location: statusObject.location,\n      // dateTime: dayjs.utc(statusObject.dateTime).local(),\n      dateTime: dayjs(statusObject.dateTime),\n      msg: statusObject.msg,\n      exceptionalMsg: statusObject.exceptionalMsg,\n      id: row._id\n    })\n\n  };\n\n  const handleCloseModal = () => {\n    setOpenModal(false);\n  };\n\n  const handleUpdateTrackingDetails = () => {\n\n    console.log({ trackingDetails });\n    const decryptedToken = localStorage.getItem(constants.keyUserToken);\n    const accessToken = decryptToken(decryptedToken);\n    axios.post(endpoints.shipment.update, trackingDetails,\n      {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      })\n      .then((res) => {\n        enqueueSnackbar('Shipment updated successfully!', { variant: 'success' });\n        fetchData();\n        handleCloseModal();\n        setTrackingDetails({\n          value: '',\n          location: '',\n          dateTime: null,\n          msg: '',\n          exceptionalMsg: '',\n          id: ''\n        })\n      }).catch((err) => {\n        enqueueSnackbar(err.error || err.msg, { variant: 'error' });\n      })\n  };\n\n  const handleUpdateCurrentStatus = () => {\n    const decryptedToken = localStorage.getItem(constants.keyUserToken);\n    const accessToken = decryptToken(decryptedToken);\n    axios.post(endpoints.shipment.updateCurrentStatus, trackingDetails,\n      {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      })\n      .then((res) => {\n        console.log(res)\n        enqueueSnackbar('Current Shipment updated successfully!', { variant: 'success' });\n        fetchData();\n        handleCloseModal();\n        setUpdateCurrentStatus(false);\n        setTrackingDetails({\n          value: '',\n          location: '',\n          dateTime: null,\n          msg: '',\n          exceptionalMsg: '',\n          id: ''\n        })\n      }).catch((err) => {\n        enqueueSnackbar(err.error || err.msg, { variant: 'error' });\n      })\n  };\n\n  return (\n    <Container maxWidth={settings.themeStretch ? false : 'xl'}>\n      <Typography variant=\"h4\"> Shipment Tracking </Typography>\n      <div style={{ marginTop: \"20px\" }}>\n        <DataTable\n          columns={columns}\n          data={data}\n          pagination\n          progressPending={isLoading}\n        />\n      </div>\n\n\n      {/* Make a modal and make  */}\n      <Modal open={openModal} >\n        <Box sx={style}>\n\n          <Grid container spacing={1} >\n            <Grid item xs={12}>\n              <Typography variant=\"h5\" gutterBottom>\n                {updateCurrentStatus ? 'Update Current Tracking Details' : 'Update Tracking Details'}\n              </Typography>\n            </Grid>\n\n            {/* Add form fields for tracking details */}\n            <Grid item xs={6}>\n              <FormControl fullWidth required>\n                <InputLabel id=\"shipment-status-select\">Select Status</InputLabel>\n                <Select\n                  disabled={updateCurrentStatus}\n                  labelId=\"shipment-status-select\"\n                  id=\"demo-simple-select\"\n                  value={trackingDetails.value}\n                  label=\"Select Status\"\n                  onChange={(e) => {\n                    setTrackingDetails((prev) => ({ ...prev, value: e.target.value }))\n                  }}\n                >\n                  <MenuItem disabled={status.preShipmentDoc} value='PreShipmentDoc'>Pre Shipment Doc</MenuItem>\n                  <MenuItem disabled={status.pickedUp} value='PickedUp'>Picked Up</MenuItem>\n                  <MenuItem disabled={status.inTransitOrigin} value='InTransitOrigin'>In Transit to Origin</MenuItem>\n                  <MenuItem disabled={status.clearanceAtOriginPort} value='ClearanceatOriginPort'>Clearance at Origin Port</MenuItem>\n                  <MenuItem disabled={status.inTransitOverseas} value='InTransitOverseas'>In Transit to Overseas</MenuItem>\n                  <MenuItem disabled={status.clearanceAtDestinationPort} value='ClearanceatDestinationPort'>Clearance at Destination Port</MenuItem>\n                  <MenuItem disabled={status.inTransitDestination} value='InTransitDestination'>In Transit Destination</MenuItem>\n                  <MenuItem disabled={status.delivered} value='Delivered'>Delivered</MenuItem>\n\n                </Select>\n              </FormControl>\n            </Grid>\n\n            <Grid item xs={6}>\n              <LocalizationProvider dateAdapter={AdapterDayjs} >\n                <DateTimePicker\n                  label=\"Date and Time\"\n                  value={trackingDetails.dateTime}\n                  onChange={(newValue) => {\n                    console.log(newValue);\n                    setTrackingDetails({ ...trackingDetails, dateTime: newValue });\n                  }}\n                  format=\"DD/MM/YYYY hh:mm A\"\n                  slotProps={{ textField: { fullWidth: true, required: true } }}\n                />\n              </LocalizationProvider>\n            </Grid>\n\n\n            <Grid item xs={12}>\n              <TextField\n                multiline\n                rows={3}\n                label=\"Location\"\n                placeholder='Enter Location'\n                value={trackingDetails.location}\n                onChange={(e) => setTrackingDetails({ ...trackingDetails, location: e.target.value })}\n                fullWidth\n                required\n              />\n            </Grid>\n\n            <Grid item xs={6}>\n              <TextField\n                multiline\n                rows={2}\n                label=\"Message\"\n                placeholder='Enter Message'\n                value={trackingDetails.msg}\n                onChange={(e) => setTrackingDetails({ ...trackingDetails, msg: e.target.value })}\n                fullWidth\n                required\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                multiline\n                rows={2}\n                label=\"Exceptional Message\"\n                placeholder='Enter Exceptional Message'\n                value={trackingDetails.exceptionalMsg}\n                onChange={(e) => setTrackingDetails({ ...trackingDetails, exceptionalMsg: e.target.value })}\n                fullWidth\n              />\n            </Grid>\n\n            <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'flex-end', gap: '10px' }}>\n              <Button onClick={updateCurrentStatus ? handleUpdateCurrentStatus : handleUpdateTrackingDetails}\n                disabled={trackingDetails.value === '' ||\n                  trackingDetails.dateTime === null ||\n                  trackingDetails.location === '' ||\n                  trackingDetails.msg === ''\n                }\n                variant=\"contained\" color=\"primary\">\n                {updateCurrentStatus ? 'Update Current Status' : 'Update Status'}\n              </Button>\n              <Button onClick={() => {\n                handleCloseModal();\n                setTrackingDetails({\n                  value: '',\n                  location: '',\n                  dateTime: null,\n                  msg: '',\n                  exceptionalMsg: '',\n                  id: ''\n                });\n\n                if (updateCurrentStatus) {\n                  setUpdateCurrentStatus(false);\n                }\n              }} variant='contained' color='error' sx={{ mr: 1 }}>\n                Cancel\n              </Button>\n            </Grid>\n          </Grid>\n\n\n        </Box>\n      </Modal >\n\n    </Container >\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport ThreeView from 'src/sections/three/view';\n\n// ----------------------------------------------------------------------\n\nexport default function Page() {\n  return (\n    <>\n      <Helmet>\n        <title>Shipment Tracking</title>\n      </Helmet>\n\n      <ThreeView />\n    </>\n  );\n}\n"],"names":["style","position","top","left","transform","width","bgcolor","borderRadius","boxShadow","height","p","ShipmentTrackingStatusUpdate","settings","useSettingsContext","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","data","setData","_useState5","_useState6","updateCurrentStatus","setUpdateCurrentStatus","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","decryptedToken","accessToken","response","wrap","_context","prev","next","localStorage","getItem","constants","decryptToken","axios","endpoints","headers","Authorization","concat","sent","console","log","t0","err","enqueueSnackbar","variant","stop","apply","arguments","useEffect","columns","name","selector","row","index","sortable","trackingNo","statuses","length","value","center","formatDate","createdAt","cell","_jsxs","display","flexDirection","gap","children","_jsx","Button","color","onClick","handleOpenModal","setTrackingDetails","_objectSpread","location","dateTime","msg","exceptionalMsg","_useState7","_useState8","openModal","setOpenModal","_useState9","id","_useState10","trackingDetails","_useState11","preShipmentDoc","pickedUp","inTransitOrigin","clearanceAtOriginPort","inTransitOverseas","clearanceAtDestinationPort","inTransitDestination","delivered","_useState12","status","setStatus","statusObject","dayjs","_id","handleCloseModal","Container","maxWidth","themeStretch","Typography","marginTop","DataTable","pagination","progressPending","Modal","open","Box","sx","Grid","container","spacing","item","xs","gutterBottom","FormControl","fullWidth","required","InputLabel","Select","disabled","labelId","label","onChange","e","target","MenuItem","LocalizationProvider","dateAdapter","AdapterDayjs","DateTimePicker","newValue","format","slotProps","textField","TextField","multiline","rows","placeholder","justifyContent","then","res","catch","error","mr","Page","_Fragment","Helmet","ThreeView","utc"],"sourceRoot":""}