{"version":3,"file":"static/js/571.8e5ffc1f.chunk.js","mappings":"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","sources":["sections/one/view.js","pages/dashboard/one.js"],"sourcesContent":["// @mui\nimport React, { useState, useEffect, useRef } from 'react';\n// components\nimport { useSettingsContext } from 'src/components/settings';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, FormControl, Typography, Box, Container, Grid, IconButton, InputLabel, MenuItem, Modal, Paper, Select, TextField, Menu, Dialog, DialogTitle, DialogContent, DialogActions, Divider, List, ListItem, ListItemText } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport DataTable from 'react-data-table-component';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { amountInWords, decryptToken, formattedDateForComp } from 'src/utils/common';\nimport axios, { endpoints } from 'src/utils/axios';\nimport { constants } from 'src/utils/constant';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport Label from 'src/components/label';\nimport { useSnackbar } from 'src/components/snackbar';\nimport EditIcon from '@mui/icons-material/Edit';\nimport SaveIcon from '@mui/icons-material/Save';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport html2canvas from 'html2canvas';\nimport JsPDF from 'jspdf';\nimport { useReactToPrint } from 'react-to-print';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\n// ----------------------------------------------------------------------\nconst formatDate = (dateValue) => {\n  const formattedDate = new Date(dateValue).toLocaleDateString('en-GB'); // 'en-GB' is the locale for dd/mm/yyyy\n  return formattedDate\n};\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: \"85%\",\n  bgcolor: 'background.paper',\n  borderRadius: \"10px\",\n  boxShadow: 24,\n  height: \"auto\",\n  p: 2,\n};\n\nconst styleForQuotation = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: \"80%\",\n  bgcolor: 'background.paper',\n  borderRadius: \"10px\",\n  boxShadow: 24,\n  height: \"100%\",\n  p: 4,\n};\n\nconst inquiryFormState = {\n  commodity: '',\n  hsCode: '',\n  shipmentTerm: '',\n  mode: '',\n  typeOfPacking: '',\n  numberOfPackages: '',\n  dimensions: [\n    // { qty: '', length: '', breadth: '', height: '' }\n  ],\n  netWeight: '',\n  grossWeight: '',\n  pickUpAddress: '',\n  pickUpAddressCode: '',\n  deliveryAddress: '',\n  deliveryAddressCode: '',\n  portOfLoading: '',\n  portOfDischarge: ''\n};\n\nconst quotationState = {\n  number: '',\n  clientCode: '',\n  incoTerm: '',\n  cargoType: '',\n  pol: '',\n  grossWeight: '',\n  pod: '',\n  cbm: '',\n  overheads: [\n    // {\n    //   name: 'Ocean Freight',\n    //   rate: 20,\n    //   exRate: 84,\n    //   qty: 3.67,\n    //   totalAmount: 6165.60\n    // },\n    // {\n    //   name: 'Destination THC',\n    //   rate: 1350,\n    //   exRate: 1,\n    //   qty: 3.67,\n    //   totalAmount: 4954.50\n    // },\n    // {\n    //   name: 'D/O Fees',\n    //   rate: 3800,\n    //   exRate: 1,\n    //   qty: 1,\n    //   totalAmount: 3800\n    // },\n    // {\n    //   name: 'Warehouse',\n    //   rate: 15000,\n    //   exRate: 1,\n    //   qty: 1,\n    //   totalAmount: 15000\n    // },\n    // {\n    //   name: 'Agency Charges',\n    //   rate: 5000,\n    //   exRate: 1,\n    //   qty: 1,\n    //   totalAmount: 5000\n    // },\n    // {\n    //   name: 'Loading Unloading ',\n    //   rate: 1000,\n    //   exRate: 1,\n    //   qty: 1,\n    //   totalAmount: 1000\n    // },\n    // {\n    //   name: 'Transportation',\n    //   rate: 18000,\n    //   exRate: 1,\n    //   qty: 1,\n    //   totalAmount: 18000\n    // }\n  ],\n  deliveryAddress: '',\n  stackable: '',\n  carrier: '',\n  cutoffDate: '',\n  etd: '',\n  eta: '',\n  tt: '',\n  tradeType: '',\n  clientAddress: '',\n  clientGSTNumber: '',\n  clientContactNumber: '',\n  clientEmail: '',\n  date: '',\n\n};\n\nexport default function LeadView() {\n  const settings = useSettingsContext();\n  const navigate = useNavigate();\n  const componentRef = useRef();\n  const handlePrint = useReactToPrint({\n    documentTitle: 'QUOTATION',\n    content: () => componentRef.current,\n    onBeforePrint: (value) => console.log('BeforePrint'),\n    removeAfterPrint: true,\n  });\n  const { enqueueSnackbar } = useSnackbar();\n  // Define a state to hold the index of the dimension being edited\n  const [editingIndex, setEditingIndex] = useState(null);\n\n  // For Add Lead\n  const [open, setOpen] = useState(false);\n  const [inquiryForm, setInquiryForm] = useState(false);\n  const [quotation, setQuotation] = useState(quotationState);\n  const [editUser, setEditUser] = useState(false);\n  const handleOpen = () => {\n    setOpen(true);\n    setEditUser(false);\n  };\n  const handleClose = () => setOpen(false);\n\n  const [isLeadLoading, setIsLeadLoading] = useState(false);\n  const [leads, setLeads] = useState([]);\n  const [overhead, setOverHead] = useState({\n    name: '',\n    rate: null,\n    gst: null,\n    exRate: null,\n    qty: null,\n    totalAmount: 0\n  });\n\n\n  const [editOverhead, setEditOverHead] = useState({\n    name: '',\n    rate: null,\n    exRate: null,\n    qty: null,\n    gst: null,\n    totalAmount: 0,\n  });\n\n  const [editOverheadIndex, setEditOverHeadIndex] = useState(null);\n\n  const [dimension, setDimension] = useState({\n    length: '',\n    breadth: '',\n    height: '',\n    qty: '',\n    grossWeight: '',\n    netWeight: '',\n  });\n\n  const [editDimension, setEditDimension] = useState({\n    length: '',\n    breadth: '',\n    height: '',\n    qty: '',\n    grossWeight: '',\n    netWeight: '',\n  });\n\n  // Quotation \n  const [quotationModal, setQuotationModal] = useState(false);\n\n\n  const [lead, setLead] = useState({\n    id: '',\n    name: '',\n    meetingScheduleDate: null,\n    inquiry: {\n      number: '',\n      source: '',\n      place: '',\n      date: null,\n      form: inquiryFormState\n    },\n    quotation: {},\n    status: ''\n  });\n\n\n\n  // For Delete Customer\n  const [openDialog, setOpenDialog] = useState(false);\n\n  // For Actions Dropdown\n  const [anchorEl, setAnchorEl] = useState(null);\n  const openMenu = Boolean(anchorEl);\n\n  // Temporary State\n  const [tempData, setTempData] = useState({});\n\n\n  // Quotation\n  const [showQuotation, setShowQuotation] = useState(false);\n\n  // ADD Existing overhead\n  const [anchorElForOverhead, setAnchorElForOverhead] = useState(null);\n  const openForOverhead = Boolean(anchorElForOverhead);\n\n  const handleInputChange = (field, value) => {\n    setLead((prev) => ({\n      ...prev,\n      inquiry: {\n        ...prev.inquiry,\n        form: {\n          ...prev.inquiry.form,\n          [field]: value,\n        },\n      },\n    }));\n  };\n\n\n  const handleDimensionChange = (field, value) => {\n    setDimension((prev) => ({\n      ...prev,\n      [field]: value,\n    }));\n  };\n\n  const handleEditDimensionChange = (field, value) => {\n    setEditDimension((prev) => ({\n      ...prev,\n      [field]: value,\n    }));\n  };\n\n  const handleExistingOverheadChange = (ovhd, index) => {\n    setEditOverHeadIndex(index);\n    setEditOverHead((prev) => ({\n      ...prev,\n      name: ovhd.name,\n      rate: ovhd.rate,\n      exRate: ovhd.exRate,\n      gst: ovhd.gst,\n      qty: ovhd.qty,\n    }));\n  };\n\n  const handleExportToPDF = async () => {\n    try {\n      const quotationElement = document.getElementById('quotation'); // Get the quotation div element\n\n      // Use html2canvas to capture the content of the div\n      const canvas = await html2canvas(quotationElement, { scrollY: -window.scrollY });\n\n      // Initialize jsPDF with A4 size\n      const pdf = new JsPDF('p', 'mm', 'a4');\n\n      // Calculate the height of the content on A4 size page\n      const contentHeight = canvas.height * 210 / canvas.width; // A4 width is 210mm\n\n      // Add the captured content to the PDF\n      pdf.addImage(canvas, 'PNG', 0, 0, 210, contentHeight);\n\n      // Download the PDF\n      pdf.save('quotation.pdf');\n    } catch (error) {\n      console.error('Error exporting to PDF:', error);\n    }\n  };\n\n  const overheadColumns = [\n    {\n      name: 'Sr. No.',\n      selector: (row, index) => index + 1,\n    },\n    {\n      name: 'Overhead',\n      selector: (row, index) => row.name,\n      width: '20%'\n    },\n    {\n      name: 'Rate',\n      selector: (row, index) => (editOverheadIndex === index ? editOverhead.rate : row.rate),\n      cell: (row, index) => (\n        <div>\n          {editOverheadIndex === index ? (\n            <TextField\n              size='small'\n              type='number'\n              value={editOverhead.rate}\n              onChange={(e) => setEditOverHead((prev) => ({ ...prev, rate: e.target.value }))}\n            />\n          ) : (\n            row.rate\n          )}\n        </div>\n      ),\n    },\n    {\n      name: 'Ex. Rate',\n      selector: (row, index) => (editOverheadIndex === index ? editOverhead.exRate : row.exRate),\n      cell: (row, index) => (\n        <div>\n          {editOverheadIndex === index ? (\n            <TextField\n              size='small'\n              type='number'\n              value={editOverhead.exRate}\n              onChange={(e) => setEditOverHead((prev) => ({ ...prev, exRate: e.target.value }))}\n            />\n          ) : (\n            row.exRate\n          )}\n        </div>\n      ),\n    },\n    // {\n    //   name: 'GST',\n    //   selector: (row, index) => (editOverheadIndex === index ? editOverhead.gst : row.gst),\n    //   cell: (row, index) => (\n    //     <div>\n    //       {editOverheadIndex === index ? (\n    //         <TextField\n    //           size='small'\n    //           type='number'\n    //           value={editOverhead.gst}\n    //           onChange={(e) => setEditOverHead((prev) => ({ ...prev, gst: e.target.value }))}\n    //         />\n    //       ) : (\n    //         row.gst\n    //       )}\n    //     </div>\n    //   ),\n    // },\n    {\n      name: 'Qty',\n      selector: (row, index) => (editOverheadIndex === index ? editOverhead.qty : row.qty),\n      cell: (row, index) => (\n        <div>\n          {editOverheadIndex === index ? (\n            <TextField\n              size='small'\n              type='number'\n              value={editOverhead.qty}\n              onChange={(e) => setEditOverHead((prev) => ({ ...prev, qty: e.target.value }))}\n            />\n          ) : (\n            row.qty\n          )}\n        </div>\n      ),\n    },\n    {\n      name: 'Total Amount',\n      selector: (row, index) => row.totalAmount.toFixed(2),\n    },\n    {\n      name: 'Action',\n      cell: (row, index) => (\n        <>\n          {editOverheadIndex === index ? (\n            <>\n              <IconButton\n                onClick={() => {\n                  if (editOverhead.name === '' || editOverhead.rate === null || editOverhead.exRate === null || editOverhead.qty === null || editOverhead.gst === '' || editOverhead.gst === null) {\n                    enqueueSnackbar('Please fill all the fields!!', { variant: 'error' })\n                    return;\n                  };\n\n                  // Check if the values are greater than 0\n                  if (\n                    editOverhead.rate <= 0 ||\n                    editOverhead.exRate <= 0 ||\n                    editOverhead.qty <= 0\n                  ) {\n                    enqueueSnackbar('Please enter values greater than 0 for Rate, Ex. Rate, and Quantity!', { variant: 'error' });\n                    return;\n                  }\n\n                  const existingQuote = { ...quotation };\n                  const newOverhead = {\n                    ...editOverhead,\n                    totalAmount: editOverhead.rate * editOverhead.exRate * editOverhead.qty,\n                  };\n                  existingQuote.overheads[editOverheadIndex] = newOverhead;\n                  setQuotation(existingQuote);\n                  setEditOverHeadIndex(null);\n                }} color='success'>\n                <SaveIcon color='success' />\n              </IconButton>\n              <IconButton onClick={() => setEditOverHeadIndex(null)} color='error'>\n                <CancelIcon color='error' />\n              </IconButton>\n            </>\n          ) : (\n            <>\n\n              <IconButton onClick={() => handleExistingOverheadChange(row, index)}>\n                <EditIcon color='success' />\n              </IconButton>\n              <IconButton\n                onClick={() => {\n                  const newOverheads = quotation.overheads.filter((_, i) => i !== index);\n                  setQuotation((prev) => ({ ...prev, overheads: newOverheads }));\n                }}\n              >\n                <DeleteIcon color='error' />\n              </IconButton>\n            </>\n          )}\n\n        </>\n      ),\n    },\n  ];\n\n\n  const fetchData = async () => {\n    try {\n      const decryptedToken = localStorage.getItem(constants.keyUserToken);\n      const accessToken = decryptToken(decryptedToken);\n      const response = await axios.post(endpoints.lead.list, {}, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      });\n      if (response) {\n        console.log({ response });\n        setIsLeadLoading(false);\n        setLeads(response.data.data);\n      }\n    } catch (err) {\n      enqueueSnackbar('Failed to fetch leads!', { variant: 'error' });\n      setIsLeadLoading(false);\n    }\n  };\n\n\n  const [termsModal, setTermsModal] = useState(false);\n  const [terms, setTerms] = useState([]);\n  const [newTerm, setNewTerm] = useState('');\n\n  const [existingTermsModal, setExistingTermsModal] = useState(false);\n  const [existingTerms, setExistingTerms] = useState([]); // Sample existing terms\n\n  const addTerm = () => {\n    if (newTerm.trim() !== '') {\n      // Check if the term already exists in the list\n      if (!terms.includes(newTerm.trim())) {\n        setTerms([...terms, newTerm.trim()]);\n      } else {\n        // If the term already exists, display a message or handle it as desired\n        console.log('Term already exists');\n        enqueueSnackbar('Term already exists', { variant: 'error' });\n        // Optionally, you can set an error state here or show a snackbar/message\n      }\n      setNewTerm(''); // Clear input after adding\n    }\n  };\n\n  const addExistingTerm = (term) => {\n    // Check if the term already exists in the list\n    if (!terms.includes(term.trim())) {\n      setTerms([...terms, term.trim()]);\n      setNewTerm(''); // Clear input after adding\n      setExistingTermsModal(false);\n    } else {\n      // If the term already exists, display a message or handle it as desired\n      console.log('Term already exists');\n      enqueueSnackbar('Term already exists', { variant: 'error' });\n      // Optionally, you can set an error state here or show a snackbar/message\n    }\n    // Close the modal after adding the term\n  };\n\n  const removeTerm = (index) => {\n    const updatedTerms = [...terms];\n    updatedTerms.splice(index, 1);\n    setTerms(updatedTerms);\n  };\n\n  const fetchTerms = async () => {\n\n    try {\n      const decryptedToken = localStorage.getItem(constants.keyUserToken);\n      const accessToken = decryptToken(decryptedToken);\n      const response = await axios.post(endpoints.terms.list, {}, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      });\n      if (response) {\n        console.log({ response });\n        setExistingTerms(response.data.data.map((term) => term.name));\n      }\n    } catch (err) {\n      enqueueSnackbar('Failed to fetch jobcards!', { variant: 'error' });\n    }\n  };\n\n  const handleAddCondtions = async () => {\n    const decryptedToken = localStorage.getItem(constants.keyUserToken);\n    const accessToken = decryptToken(decryptedToken);\n    axios.post(endpoints.terms.add, { terms, id: tempData._id },\n      {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      })\n      .then((res) => {\n        enqueueSnackbar('Terms Added successfully!', { variant: 'success' });\n        setTerms([]);\n        setNewTerm('');\n        setTermsModal(false);\n        setTempData({});\n        fetchData();\n      }).catch((err) => {\n        enqueueSnackbar(err.error || 'Something Went Wrong!', { variant: 'error' });\n      })\n  };\n\n\n  const [quotationView, setQuotationView] = useState({\n    name: '',\n    clientCode: '',\n    quotationNo: '',\n    date: '',\n    commodity: '',\n    noOfPackages: '',\n    netWeight: '',\n    grossWeight: '',\n    cbm: '',\n    stackable: '',\n    incoTerm: '',\n    mode: '',\n    pickUpAddress: '',\n    pol: '',\n    pod: '',\n    deliveryAddress: '',\n    tradeType: '',\n    carrier: '',\n    cutOffDate: '',\n    etd: '',\n    eta: '',\n    tt: '',\n    overheads: [],\n    subtotalAmount: '',\n    gstAmount: '',\n    totalAmount: '',\n    termsAndConditions: []\n  });\n\n  useEffect(() => {\n    setIsLeadLoading(true);\n    fetchData();\n    fetchTerms();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleAddLead = async () => {\n    // If no errors, proceed with saving\n    const decryptedToken = localStorage.getItem(constants.keyUserToken);\n    const accessToken = decryptToken(decryptedToken);\n\n    console.log({ lead });\n    axios.post(endpoints.lead.add, lead,\n      {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      })\n      .then((res) => {\n        enqueueSnackbar('Lead created successfully!', { variant: 'success' });\n\n        fetchData();\n        handleCancelAllStates();\n\n        setOpen(false);\n      }).catch((err) => {\n        enqueueSnackbar(err.error || err.msg, { variant: 'error' });\n      })\n  };\n\n\n  const handleCancelAllStates = () => {\n    setOverHead({\n      name: '',\n      rate: null,\n      exRate: null,\n      qty: null,\n      totalAmount: 0\n    });\n    setLead({\n      name: '',\n      meetingScheduleDate: null,\n      inquiry: {\n        source: '',\n        place: '',\n        date: null,\n        form: inquiryFormState\n      },\n      quotation: {},\n      status: ''\n    });\n    setQuotation(quotationState);\n  };\n\n\n  const handleViewQuotation = () => {\n    setAnchorEl(null);\n    console.log(tempData);\n\n    const newOverheads = tempData.quotation.overheads.map(obj => {\n      const gstAmount = obj.rate * obj.exRate * obj.qty * obj.gst / 100;\n      const subtotalAmount = obj.rate * obj.exRate * obj.qty;\n      const totalAmount = gstAmount + subtotalAmount;\n      return {\n        name: obj.name,\n        rate: obj.rate,\n        exRate: obj.exRate,\n        qty: obj.qty,\n        gst: obj.gst,\n        subtotalAmount: subtotalAmount.toFixed(2),\n        gstAmount: gstAmount.toFixed(2),\n        totalAmount: totalAmount.toFixed(2)\n      };\n    });\n\n    const subtotalAmount = newOverheads.reduce((sum, obj) => sum + parseFloat(obj.subtotalAmount), 0);\n    const gstAmount = newOverheads.reduce((sum, obj) => sum + parseFloat(obj.gstAmount), 0);\n    const totalAmount = newOverheads.reduce((sum, obj) => sum + parseFloat(obj.totalAmount), 0);\n    console.log({ subtotalAmount, gstAmount, totalAmount });\n    setQuotationView((prev) => ({\n      ...prev,\n      name: tempData.name,\n      clientCode: tempData.quotation.clientCode,\n      quotationNo: tempData.quotation.number,\n      date: tempData.quotation.date,\n      commodity: tempData.inquiry.form.commodity,\n      noOfPackages: tempData.inquiry.form.numberOfPackages,\n      netWeight: tempData.inquiry.form.netWeight,\n      grossWeight: tempData.quotation.grossWeight,\n      cbm: tempData.quotation.cbm,\n      stackable: tempData.quotation.stackable,\n      incoTerm: tempData.quotation.incoTerm,\n      mode: tempData.quotation.tradeType,\n      pickUpAddress: tempData.inquiry.form.pickUpAddress,\n      pol: tempData.quotation.pol,\n      pod: tempData.quotation.pod,\n      deliveryAddress: tempData.quotation.deliveryAddress,\n      tradeType: tempData.quotation.tradeType,\n      carrier: tempData.quotation.carrier,\n      cutOffDate: tempData.quotation.cutoffDate,\n      etd: tempData.quotation.etd,\n      eta: tempData.quotation.eta,\n      tt: tempData.quotation.tt,\n      overheads: newOverheads,\n      subtotalAmount: subtotalAmount?.toFixed(2),\n      gstAmount: gstAmount?.toFixed(2),\n      totalAmount: subtotalAmount?.toFixed(2),\n      termsAndConditions: tempData.terms,\n      clientAddress: tempData.quotation.clientAddress,\n      clientEmail: tempData.quotation.clientEmail,\n      clientGSTNumber: tempData.quotation.clientGSTNumber,\n      clientContactNumber: tempData.quotation.clientContactNumber,\n\n    }));\n\n    setShowQuotation(true);\n  };\n\n  const overheadQuotationViewColumn = [\n    {\n      name: 'Sr. No.',\n      selector: (row, index) => index + 1,\n      center: 'true'\n    },\n    {\n      name: 'Description',\n      selector: (row, index) => row.name,\n    },\n    {\n      name: 'QTY',\n      selector: (row, index) => row.qty,\n      center: 'true'\n    },\n    {\n      name: 'Rate',\n      selector: (row, index) => row.rate,\n      center: 'true'\n    },\n    {\n      name: 'Ex. Rate',\n      selector: (row, index) => row.exRate,\n      center: 'true'\n    },\n    {\n      name: 'Net Total',\n      selector: (row, index) => row.subtotalAmount,\n      center: 'true',\n    },\n    // {\n    //   name: 'GST ( % )',\n    //   selector: (row, index) => `${row.gst}%`,\n    //   center: 'true'\n    // },\n    // {\n    //   name: 'Amount With GST',\n    //   selector: (row, index) => row.totalAmount,\n    //   center: 'true',\n    // },\n  ];\n  // const handleExportToPDF = async () => {\n  //   console.log('export');\n  //   setAnchorEl(null);\n  //   const invoice = document.getElementById(\"quotation\");\n\n  //   // Use html2canvas to create a canvas from the invoice content\n  //   const canvas = await html2canvas(invoice);\n\n  //   // Get the canvas data as a URL and add it to the PDF\n  //   const imgData = canvas.toDataURL(\"image/png\");\n\n  //   const doc = new JsPDF('p', 'mm', 'a4');\n  //   doc.addImage(imgData, \"PNG\", 0, 0);\n\n  //   // Download the PDF\n  //   doc.save(\"quotation.pdf\");\n  // };\n\n  const leadColumns = [\n    {\n      name: '#',\n      selector: (row, index) => index + 1,\n      sortable: true,\n      width: '5%',\n    },\n    {\n      name: 'Name',\n      selector: (row) => row.name.toUpperCase(),\n      sortable: true,\n    },\n    {\n      name: 'Status',\n      selector: (row) => {\n        if (!row.quotation || row.quotation.overheads.length === 0) {\n          return 'QUOTATION PENDING';\n        };\n        return row.status;\n      },\n      cell: (row) => {\n        let color;\n        if (!row.quotation || row.quotation.overheads.length === 0) {\n          row.status = 'QUOTATION PENDING';\n        };\n        if (row.status === 'PENDING') {\n          color = 'info';\n        } else if (row.status === 'CONFIRMED') {\n          color = 'success';\n        } else {\n          color = 'error';\n        }\n\n        return (\n          <Label color={color} variant=\"filled\">\n            {row.status}\n          </Label>\n        );\n      },\n      sortable: true,\n      width: 'auto',\n    },\n    {\n      name: 'Created On',\n      selector: (row) => formatDate(row.createdAt),\n      sortable: true,\n    },\n    {\n      name: 'Actions',\n      width: '30%',\n      center: true,\n      cell: (row) => (\n        <>\n\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', gap: '10px' }}>\n\n\n            <Button\n              onClick={(event) => {\n                setAnchorEl(event.currentTarget);\n                setTempData(row);\n              }}\n              color=\"info\"\n              variant=\"outlined\"\n              endIcon={<ArrowDropDownIcon />}\n            >\n              Action\n            </Button>\n            <Button color=\"info\" variant=\"outlined\" startIcon={<AddIcon />} disabled={\n\n              !row.quotation ||\n              row?.quotation?.overheads.length < 1 ||\n              !row.inquiry ||\n              row?.inquiry?.form?.numberOfPackages === null ||\n              row?.inquiry?.form?.numberOfPackages <= 0 ||\n              row.status !== 'CONFIRMED'\n\n            } onClick={() => handleRedirectionToJCPage(row)}>\n              JOB CARD\n            </Button>\n          </div>\n          <Menu\n            id=\"basic-menu\"\n            anchorEl={anchorEl}\n            open={openMenu}\n            onClose={() => {\n              setAnchorEl(null);\n              setTempData({});\n            }}\n            MenuListProps={{\n              'aria-labelledby': 'basic-button',\n            }}\n          >\n            <MenuItem onClick={() => handleEditDetails()}>Edit Details</MenuItem>\n            <MenuItem onClick={() => {\n              setAnchorEl(null);\n              setTermsModal(true);\n              if (tempData.terms && tempData.terms.length) {\n                setTerms(tempData.terms);\n              }\n            }}>Add terms & Conditions</MenuItem>\n            <MenuItem onClick={() => handleViewQuotation()}>View Quotation</MenuItem>\n            <MenuItem onClick={() => handleDeleteDetails()}>Remove</MenuItem>\n          </Menu>\n        </>\n      ),\n    },\n  ];\n\n  //  use effects to\n  useEffect(() => {\n    if (lead.inquiry.form.dimensions.length > 0) {\n      const netWeight = lead.inquiry.form.dimensions.reduce((acc, sum) => {\n        const net = parseFloat(sum.netWeight) * parseFloat(sum.qty);\n        console.log(\"🚀 ~ netWeight ~ net:\", net)\n        return acc + net;\n      }, 0);\n\n      const grossWeight = lead.inquiry.form.dimensions.reduce((acc, sum) => {\n        const gross = parseFloat(sum.grossWeight) * parseFloat(sum.qty);\n        console.log(\"🚀 ~ grossWeight ~ gross:\", gross)\n        return acc + gross;\n      }, 0);\n\n      setQuotation((prev) => ({ ...prev, grossWeight }));\n      setLead((prev) => ({\n        ...prev,\n        inquiry: {\n          ...prev.inquiry,\n          form: {\n            ...prev.inquiry.form,\n            netWeight,\n            grossWeight\n          },\n        },\n      }));\n\n    }\n  }, [lead.inquiry.form.dimensions]);\n\n  const handleDeleteDetails = () => {\n    setLead((prev) => ({ ...prev, id: tempData._id }));\n    setOpenDialog(true);\n    setAnchorEl(null);\n  };\n\n  const handleConfirmDelete = () => {\n\n    const decryptedToken = localStorage.getItem(constants.keyUserToken);\n    const accessToken = decryptToken(decryptedToken);\n    const config = {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    };\n    axios.post(endpoints.lead.delete, { id: lead.id }, config)\n      .then((res) => {\n        if (res) {\n          enqueueSnackbar('Lead deleted successfully!', { variant: 'success' });\n          setOpenDialog(false);\n          handleCancelAllStates();\n          fetchData();\n        };\n      }).catch((err) => {\n        console.log(err);\n        enqueueSnackbar(err.msg || err.error, { variant: 'error' });\n      })\n  };\n\n  const handleEditDetails = () => {\n\n    const localDate = new Date(tempData.meetingScheduleDate);\n    // Extract date components\n    const year = localDate.getFullYear();\n    const month = (localDate.getMonth() + 1).toString().padStart(2, '0'); // Month is zero-based\n    const day = localDate.getDate().toString().padStart(2, '0');\n    const hours = localDate.getHours().toString().padStart(2, '0');\n    const minutes = localDate.getMinutes().toString().padStart(2, '0');\n\n    // Format the date as \"YYYY-MM-DDTHH:mm\"\n    const formattedDate = `${year}-${month}-${day}T${hours}:${minutes}`;\n\n    const localInquiryDate = new Date(tempData.inquiry.date);\n    // Extract date components\n    const yearI = localInquiryDate.getFullYear();\n    const monthI = (localInquiryDate.getMonth() + 1).toString().padStart(2, '0'); // Month is zero-based\n    const dayI = localInquiryDate.getDate().toString().padStart(2, '0');\n    const hoursI = localInquiryDate.getHours().toString().padStart(2, '0');\n    const minutesI = localInquiryDate.getMinutes().toString().padStart(2, '0');\n\n    // Format the date as \"YYYY-MM-DDTHH:mm\"\n    const formattedDateForInquiry = `${yearI}-${monthI}-${dayI}T${hoursI}:${minutesI}`;\n\n    console.log({ tempData });\n    setEditUser(true);\n    setAnchorEl(null);\n    const leadData = {\n      id: tempData._id,\n      name: tempData.name,\n      status: tempData.status === 'QUOTATION PENDING' ? 'PENDING' : tempData.status,\n      meetingScheduleDate: formattedDate,\n      inquiry: {\n        place: tempData.inquiry.place,\n        date: formattedDateForInquiry,\n        source: tempData.inquiry.source,\n        form: tempData.inquiry.form,\n        number: tempData.inquiry.number\n      },\n    };\n\n    setLead(leadData);\n\n    // IF lead has value of inco then set it to quotation\n    const quot = { ...quotationState };\n    if (leadData.inquiry.form.shipmentTerm) quot.incoTerm = leadData.inquiry.form.shipmentTerm;\n    if (leadData.inquiry.form.typeOfPacking) quot.cargoType = leadData.inquiry.form.typeOfPacking;\n    if (leadData.inquiry.form.portOfLoading) quot.pol = leadData.inquiry.form.portOfLoading;\n    if (leadData.inquiry.form.portOfDischarge) quot.pod = leadData.inquiry.form.portOfDischarge;\n    if (leadData.inquiry.form.deliveryAddress) quot.deliveryAddress = leadData.inquiry.form.deliveryAddress;\n    if (leadData.inquiry.form.grossWeight) quot.grossWeight = leadData.inquiry.form.grossWeight;\n\n    setQuotation(tempData?.quotation ? tempData.quotation : quot);\n    setOpen(true);\n  };\n\n  const handleUpdateData = async () => {\n\n    const decryptedToken = localStorage.getItem(constants.keyUserToken);\n    const accessToken = decryptToken(decryptedToken);\n    axios.post(endpoints.lead.update, lead,\n      {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      })\n      .then((res) => {\n        enqueueSnackbar('Lead updated successfully!', { variant: 'success' });\n        fetchData();\n        handleCancelAllStates();\n        setOpen(false);\n      }).catch((err) => {\n        enqueueSnackbar(err.error || err.msg, { variant: 'error' });\n      })\n\n  };\n\n\n  // Existing Overheads\n  const overheadDetails = [\n    { name: 'Ocean Freight', rate: 20, exRate: 84, qty: 3.67, gst: 18 },\n    { name: 'Destination THC', rate: 1350, exRate: 1, qty: 3.67, gst: 18 },\n    { name: 'D/O Fees', rate: 3800, exRate: 1, qty: 1, gst: 18 },\n    { name: 'Warehouse', rate: 15000, exRate: 1, qty: 1, gst: 18 },\n    { name: 'Agency Charges', rate: 5000, exRate: 1, qty: 1, gst: 18 },\n    { name: 'Loading Unloading', rate: 1000, exRate: 1, qty: 1, gst: 18 },\n    { name: 'Transportation', rate: 18000, exRate: 1, qty: 1, gst: 18 },\n  ];\n\n  const handleAddOverhead = (prevOverhead) => {\n    const newOverhead = {\n      ...prevOverhead,\n      totalAmount: prevOverhead.rate * prevOverhead.exRate * prevOverhead.qty,\n    };\n    setQuotation((prev) => ({ ...prev, overheads: [...prev.overheads, newOverhead] }));\n    setAnchorElForOverhead(null);\n  };\n\n  const handleRedirectionToJCPage = (row) => {\n    // Redirection to Job Card page\n    const routeWithState = { state: row, }\n    navigate(\"/dashboard/create_jobcard\", routeWithState);\n  };\n\n  // Function to handle edit\n  const handleEdit = (index) => {\n    const dimensionToEdit = lead.inquiry.form.dimensions[index];\n    // Set the dimension values to the state for editing\n    setEditDimension({\n      length: dimensionToEdit.length,\n      breadth: dimensionToEdit.breadth,\n      height: dimensionToEdit.height,\n      qty: dimensionToEdit.qty,\n      netWeight: dimensionToEdit.netWeight,\n      grossWeight: dimensionToEdit.grossWeight,\n    });\n    // Set the editing index\n    setEditingIndex(index);\n  }\n\n  return (\n    <Container maxWidth={settings.themeStretch ? false : 'xl'}>\n      <Typography variant=\"h4\"> Lead Management </Typography>\n\n      <div style={{ paddingTop: \"10px\", display: \"flex\", justifyContent: \"flex-end\" }}>\n        <Button variant='outlined' color='primary' onClick={handleOpen}>\n          Add Lead\n        </Button>\n\n        <Modal\n          open={open}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n        >\n          <Box sx={style}>\n            <div style={{ height: \"100%\" }}>\n\n              <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                ADD LEAD\n              </Typography>\n\n              <Grid container spacing={2} display='flex' sx={{ pt: 3 }}>\n                <Grid item xs={6} >\n                  <TextField\n                    fullWidth\n                    label='Client Name'\n                    value={lead.name}\n                    onChange={(e) => {\n                      setLead((prev) => ({\n                        ...prev,\n                        name: e.target.value,\n                      }));\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={6} >\n                  <TextField\n                    label=\"Meeting Schedule Date/Time\"\n                    type=\"datetime-local\"\n                    value={lead.meetingScheduleDate}\n                    onChange={(e) => {\n                      setLead((prev) => ({ ...prev, meetingScheduleDate: e.target.value }));\n                    }}\n                    fullWidth\n                    required\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  // InputProps={{\n                  //   inputProps: {\n                  //     min: new Date().toISOString().slice(0, 16),\n                  //   }, // optional: set min value to current datetime\n                  //   endAdornment: (\n                  //     <InputAdornment position=\"end\">\n                  //       {/* UTC */}\n                  //     </InputAdornment>\n                  //   ),\n                  // }}\n                  />\n                  {/* <LocalizationProvider dateAdapter={AdapterDayjs}>\n                  <DateTimePicker\n                    label=\"Meeting Schedule Date/Time\"\n                    onChange={(newValue) => {\n                      setLead((prev) => ({ ...prev, meetingScheduleDate: new Date(newValue) }));\n                    }}\n                  />\n                </LocalizationProvider> */}\n                </Grid>\n\n                <Grid item xs={4}>\n                  <TextField\n                    fullWidth\n                    label='Meeting Place'\n                    value={lead.inquiry.place}\n                    onChange={(e) => {\n                      setLead((prev) => ({\n                        ...prev,\n                        inquiry: {\n                          ...prev.inquiry,\n                          place: e.target.value,\n                        },\n                      }));\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={4}>\n\n                  <TextField\n                    label=\"Inquiry Date/Time\"\n                    type=\"datetime-local\"\n                    value={lead.inquiry.date}\n                    onChange={(e) => {\n                      setLead((prev) => ({\n                        ...prev, inquiry: {\n                          ...prev.inquiry,\n                          date: e.target.value,\n                        }\n                      }));\n                    }}\n                    fullWidth\n                    required\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  />\n\n\n                </Grid>\n\n                <Grid item xs={4}>\n                  <TextField\n                    fullWidth\n                    label='Inquiry Source'\n                    value={lead.inquiry.source}\n                    onChange={(e) => {\n                      setLead((prev) => ({\n                        ...prev,\n                        inquiry: {\n                          ...prev.inquiry,\n                          source: e.target.value,\n                        },\n                      }));\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={6} >\n                  <Button startIcon={<AddIcon />} variant='outlined' fullWidth onClick={() => {\n                    setInquiryForm(true);\n\n                    if (!editUser) {\n                      setLead((prev) => ({\n                        ...prev,\n                        inquiry: {\n                          ...prev.inquiry,\n                          number: `MI${new Date().getTime()}`\n                        }\n                      }));\n                    }\n                  }}>\n                    Add Inquiry form\n                  </Button>\n                </Grid>\n\n                <Grid item xs={6}>\n                  <Button startIcon={<AddIcon />} fullWidth variant='outlined' onClick={() => {\n                    setQuotationModal(true);\n                    setQuotation((prev) => ({\n                      ...prev,\n                      number: quotation?.number ? quotation.number : `MQ${new Date().getTime()}`,\n                      date: formattedDateForComp(new Date()),\n                    }))\n                  }}>\n                    ADD Quotation\n                  </Button>\n                </Grid>\n\n\n                <Grid item xs={12}>\n                  <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      value={lead.status}\n                      label=\"Status\"\n                      onChange={(e) => {\n                        setLead((prev) => ({ ...prev, status: e.target.value }));\n                      }}\n                    >\n                      <MenuItem value='PENDING'>Pending</MenuItem>\n                      <MenuItem value='CONFIRMED'>Confirm</MenuItem>\n                      <MenuItem value='CANCELED'>Cancel</MenuItem>\n                    </Select>\n                  </FormControl>\n                </Grid>\n              </Grid>\n\n              <div style={{ paddingTop: \"10px\", display: \"flex\", flexDirection: \"row\", justifyContent: \"flex-end\", gap: \"10px\" }}>\n                <Button variant='outlined' color='primary' onClick={editUser ? handleUpdateData : handleAddLead}>\n                  {\n                    editUser ?\n                      'Update Lead' : 'Save Lead'\n                  }\n                </Button>\n                <Button variant='outlined' color='error' onClick={() => {\n                  handleClose();\n                  setQuotation(quotationState);\n                  setLead({\n                    id: '',\n                    name: '',\n                    meetingScheduleDate: null,\n                    inquiry: {\n                      number: '',\n                      source: '',\n                      place: '',\n                      date: null,\n                      form: inquiryFormState\n                    },\n                    quotation: {},\n                    status: ''\n                  });\n                }}>\n                  Cancel\n                </Button>\n              </div>\n            </div>\n\n          </Box>\n        </Modal>\n\n        {/* Inquiry Form */}\n        <Modal\n          open={inquiryForm}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n        >\n          <Box sx={style}>\n            <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n              Inquiry Form\n            </Typography>\n\n            <div style={{ maxHeight: \"500px\", overflow: 'auto', paddingTop: \"20px\" }}>\n\n              <Grid container spacing={2}>\n                <Grid item xs={6}>\n                  <TextField fullWidth\n                    disabled\n                    label='INQUIRY NO.'\n                    value={lead.inquiry.number} />\n                </Grid>\n\n                <Grid item xs={6}>\n                  <TextField fullWidth label='COMMODITY' value={lead.inquiry.form.commodity} onChange={(e) => handleInputChange('commodity', e.target.value)} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth label='HS CODE' value={lead.inquiry.form.hsCode} onChange={(e) => handleInputChange('hsCode', e.target.value)} />\n                </Grid>\n                <Grid item xs={6}>\n                  <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">SHIPMENT TERM</InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      value={lead.inquiry.form.shipmentTerm}\n                      label=\"SHIPMENT TERM\"\n                      onChange={\n                        (e) => {\n                          handleInputChange('shipmentTerm', e.target.value);\n                          setQuotation((prev) => ({ ...prev, incoTerm: e.target.value }));\n                        }\n                      }\n                    >\n                      <MenuItem value='EXW'>EXW (Ex. Works)</MenuItem>\n                      <MenuItem value='FCA'>FCA (Free Carrier)</MenuItem>\n                      <MenuItem value='FAS'>FAS (Free Alongside Ship)</MenuItem>\n                      <MenuItem value='FOB'>FOB (Free On Board)</MenuItem>\n                      <MenuItem value='CFR'>CFR (Cost & Freight)</MenuItem>\n                      <MenuItem value='CIF'>CIF (Cost, Insurance & Freight)</MenuItem>\n                      <MenuItem value='CPT'>CPT (Carriage Paid To)</MenuItem>\n                      <MenuItem value='CIP'>CIP (Carriage & Insurance Paid to)</MenuItem>\n                      <MenuItem value='DAP'>DAP (Delivered At Place)</MenuItem>\n                      <MenuItem value='DPU'>DPU (Delivered At Place Unloaded)</MenuItem>\n                      <MenuItem value='DDP'>DDP (Delivered Duty Paid)</MenuItem>\n                      <MenuItem value='DDU'>DDU (Delivered Duty Unpaid)</MenuItem>\n                      <MenuItem value=\"C&F\">C&F (Cost & Freight )</MenuItem>\n                    </Select>\n                  </FormControl>\n\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth label='MODE' value={lead.inquiry.form.mode} onChange={(e) => {\n                    handleInputChange('mode', e.target.value);\n                    setQuotation((prev) => ({ ...prev, tradeType: e.target.value }));\n                  }} />\n                </Grid>\n                <Grid item xs={6}>\n                  <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">TYPE OF PACKING</InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      value={lead.inquiry.form.typeOfPacking}\n                      label=\"TYPE OF PACKING\"\n                      onChange={\n                        (e) => {\n                          handleInputChange('typeOfPacking', e.target.value);\n                          setQuotation((prev) => ({ ...prev, cargoType: e.target.value }));\n\n                        }\n                      }\n                    >\n                      <MenuItem value='Wooden Box'>Wooden Box</MenuItem>\n                      <MenuItem value='Wooden Crate Box'>Wooden Crate Box</MenuItem>\n                      <MenuItem value='Corrugated Box'>Corrugated Box</MenuItem>\n                      <MenuItem value='Palette'>Palette</MenuItem>\n                      <MenuItem value='Loose'>Loose</MenuItem>\n                      <MenuItem value='Others'>Others</MenuItem>\n                    </Select>\n                  </FormControl>\n\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth label='NUMBER OF PACKAGES' type='number' value={lead.inquiry.form.numberOfPackages} onChange={(e) => handleInputChange('numberOfPackages', e.target.value)} />\n                </Grid>\n                <Grid item xs={12} display='flex' justifyContent='flex-end'>\n                  <Button startIcon={<AddIcon />} variant='contained' color='primary' onClick={() => {\n                    if (dimension.qty === null || dimension.length === null || dimension.breadth === null || dimension.height === null || dimension.grossWeight === null || dimension.netWeight === null) {\n                      enqueueSnackbar('Please fill all the fields!!', { variant: 'error' })\n                      return;\n                    };\n\n                    // Check if the values are greater than 0\n                    if (\n                      parseFloat(dimension.qty) <= 0 ||\n                      parseFloat(dimension.length) <= 0 ||\n                      parseFloat(dimension.breadth) <= 0 ||\n                      parseFloat(dimension.height) <= 0 ||\n                      parseFloat(dimension.grossWeight) <= 0 ||\n                      parseFloat(dimension.netWeight) <= 0\n                    ) {\n                      enqueueSnackbar('Please enter values greater than 0 for Qty, Length, Breadth, and Height!', { variant: 'error' });\n                      return;\n                    }\n\n                    // Calculate totalAmount and create a new overhead object\n                    const newDimension = {\n                      ...dimension,\n                    };\n\n                    setLead((prev) => ({ ...prev, inquiry: { ...prev.inquiry, form: { ...prev.inquiry.form, dimensions: [...prev.inquiry.form.dimensions, newDimension] } } }));\n                    setDimension({\n                      length: '',\n                      breadth: '',\n                      height: '',\n                      qty: '',\n                    });\n                  }} disabled={\n                    !dimension.qty ||\n                    !dimension.length ||\n                    !dimension.breadth ||\n                    !dimension.height ||\n                    !dimension.grossWeight ||\n                    !dimension.netWeight\n                  }>\n                    ADD\n                  </Button>\n                </Grid>\n                <Grid item xs={4}>\n                  <TextField fullWidth type='number' label='LENGTH' placeholder='in cm' value={dimension.length} onChange={(e) => handleDimensionChange('length', e.target.value)} />\n                </Grid>\n                <Grid item xs={4}>\n                  <TextField fullWidth type='number' label='WIDTH' placeholder='in cm' value={dimension.breadth} onChange={(e) => handleDimensionChange('breadth', e.target.value)} />\n                </Grid>\n                <Grid item xs={4}>\n                  <TextField fullWidth type='number' label='HEIGHT' placeholder='in cm' value={dimension.height} onChange={(e) => handleDimensionChange('height', e.target.value)} />\n                </Grid>\n                <Grid item xs={4}>\n                  <TextField fullWidth type='number' label='NO OF PKGS' value={dimension.qty} onChange={(e) => handleDimensionChange('qty', e.target.value)} />\n                </Grid>\n                <Grid item xs={4}>\n                  <TextField fullWidth type='number' label='NET WT. PER PKG' placeholder='in kg' value={dimension.netWeight} onChange={(e) => handleDimensionChange('netWeight', e.target.value)} />\n                </Grid>\n                <Grid item xs={4}>\n                  <TextField fullWidth type='number' label='GROSS WT. PER PKG' placeholder='in kg' value={dimension.grossWeight} onChange={(e) => handleDimensionChange('grossWeight', e.target.value)} />\n                </Grid>\n\n                {\n                  lead.inquiry.form.dimensions.length > 0 &&\n                  <Grid item xs={12} sx={{ p: 4 }}>\n                    Dimensions\n                    <DataTable\n                      data={lead.inquiry.form.dimensions}\n                      columns={[\n                        {\n                          name: 'SR NO',\n                          selector: (row, index) => index + 1,\n                        },\n\n                        {\n                          name: 'LENGTH (CM)',\n                          selector: (row, index) => row.length,\n                          cell: (row, index) => (\n                            <div>\n                              {editingIndex === index ? (\n                                <TextField\n                                  size='small'\n                                  type='number'\n                                  value={editDimension.length}\n                                  onChange={(e) => handleEditDimensionChange('length', e.target.value)}\n                                />\n                              ) : (\n                                row.length\n                              )}\n                            </div>\n                          ),\n                        },\n                        {\n                          name: 'WIDTH (CM)',\n                          selector: (row, index) => row.breadth,\n                          cell: (row, index) => (\n                            <div>\n                              {editingIndex === index ? (\n                                <TextField\n                                  size='small'\n                                  type='number'\n                                  value={editDimension.breadth}\n                                  onChange={(e) => handleEditDimensionChange('breadth', e.target.value)}\n                                />\n                              ) : (\n                                row.breadth\n                              )}\n                            </div>\n                          ),\n                        },\n                        {\n                          name: 'HEIGHT (CM)',\n                          selector: (row, index) => row.height,\n                          cell: (row, index) => (\n                            <div>\n                              {editingIndex === index ? (\n                                <TextField\n                                  size='small'\n                                  type='number'\n                                  value={editDimension.height}\n                                  onChange={(e) => handleEditDimensionChange('height', e.target.value)}\n                                />\n                              ) : (\n                                row.height\n                              )}\n                            </div>\n                          ),\n                        },\n                        {\n                          name: 'NO OF PKG',\n                          selector: (row, index) => row.qty,\n                          cell: (row, index) => (\n                            <div>\n                              {editingIndex === index ? (\n                                <TextField\n                                  size='small'\n                                  type='number'\n                                  value={editDimension.qty}\n                                  onChange={(e) => handleEditDimensionChange('qty', e.target.value)}\n                                />\n                              ) : (\n                                row.qty\n                              )}\n                            </div>\n                          ),\n                        },\n\n                        {\n                          name: 'NET WT. PER PKG',\n                          selector: (row, index) => row.netWeight,\n                          cell: (row, index) => (\n                            <div>\n                              {editingIndex === index ? (\n                                <TextField\n                                  size='small'\n                                  type='number'\n                                  value={editDimension.netWeight}\n                                  onChange={(e) => handleEditDimensionChange('netWeight', e.target.value)}\n                                />\n                              ) : (\n                                row.netWeight\n                              )}\n                            </div>\n                          ),\n                          width: '140px'\n                        },\n                        {\n                          name: 'GROSS WT. PER PKG',\n                          selector: (row, index) => row.grossWeight,\n                          cell: (row, index) => (\n                            <div>\n                              {editingIndex === index ? (\n                                <TextField\n                                  size='small'\n                                  type='number'\n                                  value={editDimension.grossWeight}\n                                  onChange={(e) => handleEditDimensionChange('grossWeight', e.target.value)}\n                                />\n                              ) : (\n                                row.grossWeight\n                              )}\n                            </div>\n                          ),\n                          width: '160px'\n                        },\n                        {\n                          name: 'TOTAL NET WT.',\n                          selector: (row, index) => parseFloat(row.netWeight, 10) * parseFloat(row.qty),\n                          width: '140px'\n                        },\n                        {\n                          name: 'TOTAL GROSS WT.',\n                          selector: (row, index) => parseFloat(row.grossWeight, 10) * parseFloat(row.qty),\n                          width: '160px'\n                        },\n                        {\n                          name: 'ACTIONS',\n                          width: '10%',\n                          cell: (row, index) => (\n                            <>\n                              {\n                                editingIndex === index ?\n                                  (\n                                    <>\n                                      <IconButton color='success' onClick={() => {\n                                        const editedDimension = {\n                                          length: editDimension.length,\n                                          breadth: editDimension.breadth,\n                                          height: editDimension.height,\n                                          qty: editDimension.qty,\n                                          grossWeight: editDimension.grossWeight,\n                                          netWeight: editDimension.netWeight\n                                        };\n                                        const updatedDimensions = [...lead.inquiry.form.dimensions];\n                                        updatedDimensions[editingIndex] = editedDimension;\n                                        setLead((prev) => ({ ...prev, inquiry: { ...prev.inquiry, form: { ...prev.inquiry.form, dimensions: updatedDimensions } } }));\n                                        // Reset dimension state and editing index\n                                        setEditDimension({\n                                          length: '',\n                                          breadth: '',\n                                          height: '',\n                                          qty: '',\n                                          grossWeight: '',\n                                          netWeight: ''\n                                        });\n                                        setEditingIndex(null);\n                                      }}>\n                                        <SaveIcon color='success' />\n                                      </IconButton>\n                                      <IconButton onClick={() => {\n                                        setEditDimension({\n                                          length: '',\n                                          breadth: '',\n                                          height: '',\n                                          qty: '',\n                                          grossWeight: '',\n                                          netWeight: ''\n                                        });\n                                        setEditingIndex(null);\n                                      }} color='error'>\n                                        <CancelIcon color='error' />\n                                      </IconButton>\n                                    </>\n                                  )\n                                  : (\n                                    <>\n                                      <IconButton onClick={() => handleEdit(index)}>\n                                        <EditIcon color='primary' />\n                                      </IconButton>\n                                      <IconButton onClick={() => {\n                                        const newDimensions = lead.inquiry.form.dimensions.filter((_, i) => i !== index);\n                                        setLead((prev) => ({ ...prev, inquiry: { ...prev.inquiry, form: { ...prev.inquiry.form, dimensions: newDimensions } } }));\n                                      }}>\n                                        <DeleteIcon color='error' />\n                                      </IconButton>\n                                    </>\n                                  )}\n\n                            </>\n\n                          )\n\n                        },\n                      ]}\n                    />\n                  </Grid>\n                }\n\n                <Grid item xs={6}>\n                  <TextField\n                    fullWidth\n                    label='TOTAL GROSS WEIGHT'\n                    type='number'\n                    placeholder='in kgs'\n                    disabled\n                    value={lead.inquiry.form.dimensions.reduce((acc, sum) => {\n                      const gross = parseFloat(sum.grossWeight) * parseFloat(sum.qty);\n                      console.log(\"🚀 ~ grossWeight ~ gross:\", gross)\n                      return acc + gross;\n                    }, 0)}\n                  // onChange={(e) => {\n                  //   handleInputChange('grossWeight', e.target.value);\n                  //   setQuotation((prev) => ({ ...prev, grossWeight: e.target.value }));\n                  // }}\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField\n                    fullWidth\n                    label='TOTAL NET WEIGHT'\n                    type='number'\n                    placeholder='in kgs'\n                    disabled\n                    value={lead.inquiry.form.dimensions.reduce((acc, sum) => {\n                      const net = parseFloat(sum.netWeight) * parseFloat(sum.qty);\n                      console.log(\"🚀 ~ netWeight ~ net:\", net)\n                      return acc + net;\n                    }, 0)}\n                  // onChange={(e) => handleInputChange('netWeight', e.target.value)}\n                  />\n                </Grid>\n\n                <Grid item xs={6}>\n                  <TextField fullWidth label='PICKUP ADDRESS' value={lead.inquiry.form.pickUpAddress} onChange={(e) => handleInputChange('pickUpAddress', e.target.value)} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth\n                    type='number'\n                    label='PICKUP PIN/ZIP CODE'\n                    required\n                    // inputProps={{maxLength: 2}}\n                    value={lead.inquiry.form.pickUpAddressCode} onChange={(e) => handleInputChange('pickUpAddressCode', e.target.value)} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth label='DELIVERY ADDRESS' value={lead.inquiry.form.deliveryAddress} onChange={(e) => {\n                    handleInputChange('deliveryAddress', e.target.value);\n                    setQuotation((prev) => ({ ...prev, deliveryAddress: e.target.value }));\n                  }} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth\n                    type='number'\n                    label='DELIVERY PIN/ZIP CODE'\n                    // inputProps={{maxLength: 9}}\n                    required\n                    value={lead.inquiry.form.deliveryAddressCode} onChange={(e) => {\n                      handleInputChange('deliveryAddressCode', e.target.value);\n                    }} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth label='PORT OF LOADING (POL)' value={lead.inquiry.form.portOfLoading} onChange={(e) => {\n                    handleInputChange('portOfLoading', e.target.value);\n                    setQuotation((prev) => ({ ...prev, pol: e.target.value }));\n                  }} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth label='PORT OF DISCHARGE (POD)' value={lead.inquiry.form.portOfDischarge} onChange={(e) => {\n                    handleInputChange('portOfDischarge', e.target.value);\n                    setQuotation((prev) => ({ ...prev, pod: e.target.value }));\n                  }} />\n                </Grid>\n              </Grid>\n            </div>\n\n            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignItems: 'center', padding: '10px', gap: '10px' }}>\n              <Button color='primary' variant='outlined' onClick={() => {\n\n                if (!/^[a-zA-Z0-9_.-]*$/.test(lead.inquiry.form.hsCode)) {\n                  enqueueSnackbar('Special Characters are not allowed in HS Code !!', { variant: 'error' });\n                  return;\n                }\n                if (!lead.inquiry.form.pickUpAddressCode) {\n                  enqueueSnackbar('Please fill pickup zipcode !!', { variant: 'error' });\n                  return;\n                };\n\n                if (!lead.inquiry.form.deliveryAddressCode) {\n                  enqueueSnackbar('Please fill delivery zipcode!!', { variant: 'error' });\n                  return;\n                };\n\n                if (lead.inquiry.form.dimensions) {\n                  const netWeight = lead.inquiry.form.dimensions.reduce((acc, sum) => {\n                    const net = parseFloat(sum.netWeight) * parseFloat(sum.qty);\n                    console.log(\"🚀 ~ netWeight ~ net:\", net)\n                    return acc + net;\n                  }, 0);\n\n                  const grossWeight = lead.inquiry.form.dimensions.reduce((acc, sum) => {\n                    const gross = parseFloat(sum.grossWeight) * parseFloat(sum.qty);\n                    console.log(\"🚀 ~ grossWeight ~ gross:\", gross)\n                    return acc + gross;\n                  }, 0);\n\n                  setQuotation((prev) => ({ ...prev, grossWeight }))\n                  setLead((prev) => ({\n                    ...prev, inquiry: {\n                      ...prev.inquiry,\n                      form: {\n                        ...prev.inquiry.form,\n                        grossWeight,\n                        netWeight\n                      }\n                    },\n                  }))\n                };\n\n                // TODO Once all fields are done\n                setInquiryForm(false);\n\n              }} >\n                Save Inquiry\n              </Button>\n              <Button color='error' variant='contained' onClick={() => {\n                // TODO reset all fields and then\n                setInquiryForm(false);\n\n              }}>\n                Cancel\n              </Button>\n            </div>\n          </Box>\n        </Modal>\n\n        {/* Quotation */}\n        <Modal\n          open={quotationModal}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n        >\n          <Box sx={style}>\n            <Typography id=\"modal-modal-title\" variant=\"h5\" component=\"h2\">\n              Quotation\n            </Typography>\n\n            <div style={{ maxHeight: \"500px\", overflow: 'auto', padding: \"20px\" }}>\n\n              <Grid container spacing={2}>\n                <Grid item xs={6}>\n                  <TextField fullWidth\n                    disabled\n                    label='QUOTE NO.'\n                    value={quotation.number} />\n                </Grid>\n\n                <Grid item xs={6}>\n                  <TextField fullWidth label='INCO TERM' value={quotation.incoTerm} disabled />\n                </Grid>\n                <Grid item xs={6}>\n                  <FormControl fullWidth required >\n                    <InputLabel id=\"demo-simple-select-label\">CARGO TYPE</InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      value={quotation.cargoType}\n                      label=\"CARGO TYPE\"\n                      onChange={(e) => setQuotation((prev) => ({ ...prev, cargoType: e.target.value }))}\n                    >\n                      <MenuItem value='Wooden Box'>Wooden Box</MenuItem>\n                      <MenuItem value='Wooden Crate Box'>Wooden Crate Box</MenuItem>\n                      <MenuItem value='Corrugated Box'>Corrugated Box</MenuItem>\n                      <MenuItem value='Palette'>Palette</MenuItem>\n                      <MenuItem value='Loose'>Loose</MenuItem>\n                      <MenuItem value='Others'>Others</MenuItem>\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField\n                    fullWidth\n                    label='GROSS WEIGHT'\n                    type='number'\n                    required\n                    value={quotation.grossWeight}\n                    onChange={(e) => {\n                      setQuotation((prev) => ({ ...prev, grossWeight: e.target.value }));\n                    }} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth required label='POL' value={quotation.pol} onChange={(e) => {\n                    setQuotation((prev) => ({ ...prev, pol: e.target.value }));\n                  }} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth required label='POD' value={quotation.pod} onChange={(e) => {\n                    setQuotation((prev) => ({ ...prev, pod: e.target.value }));\n                  }} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth label='TRADE TYPE' value={quotation.tradeType} onChange={(e) => {\n                    setQuotation((prev) => ({ ...prev, tradeType: e.target.value }));\n                  }} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth label='Delivery Address' value={quotation.deliveryAddress} onChange={(e) => {\n                    setQuotation((prev) => ({ ...prev, deliveryAddress: e.target.value }));\n                  }} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth required label='CLIENT CODE' value={quotation.clientCode} onChange={(e) => {\n                    setQuotation((prev) => ({ ...prev, clientCode: e.target.value }));\n                  }} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth type='number' label='CHARGABLE WEIGHT/CBM' required value={quotation.cbm} onChange={(e) => {\n                    setQuotation((prev) => ({ ...prev, cbm: e.target.value }));\n                  }} />\n                </Grid>\n                <Grid item xs={6}>\n                  <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">Stackable</InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      value={quotation.stackable}\n                      label=\"Stackable\"\n                      onChange={(e) => {\n                        setQuotation((prev) => ({ ...prev, stackable: e.target.value }));\n                      }}\n                    >\n                      <MenuItem value='YES'>YES</MenuItem>\n                      <MenuItem value='NO'>NO</MenuItem>\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth label='CARRIER NAME' required value={quotation.carrier} onChange={(e) => {\n                    setQuotation((prev) => ({ ...prev, carrier: e.target.value }));\n                  }} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField\n                    label=\"Cut Off Date\"\n                    type=\"datetime-local\"\n                    value={quotation.cutoffDate}\n                    onChange={(e) => {\n                      setQuotation((prev) => ({ ...prev, cutoffDate: e.target.value }));\n                    }}\n                    fullWidth\n                    required\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField\n                    label=\"ESTIMATED TIME OF DEPARTURE (ETD)\"\n                    type=\"datetime-local\"\n                    value={quotation.etd}\n                    onChange={(e) => {\n                      setQuotation((prev) => ({ ...prev, etd: e.target.value }));\n                    }}\n                    fullWidth\n                    required\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField\n                    label=\"ESTIMATED TIME OF ARRIVAL (ETA)\"\n                    type=\"datetime-local\"\n                    value={quotation.eta}\n                    onChange={(e) => {\n                      setQuotation((prev) => ({ ...prev, eta: e.target.value }));\n                    }}\n                    fullWidth\n                    required\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth label='TRANSIT TIME (TT)' placeholder='Number In Days (e.g. 2)' value={quotation.tt} onChange={(e) => {\n                    setQuotation((prev) => ({ ...prev, tt: e.target.value }));\n                  }} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth label='CLIENT ADDRESS' value={quotation.clientAddress} onChange={(e) => {\n                    setQuotation((prev) => ({ ...prev, clientAddress: e.target.value }));\n                  }} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth type='number' label='CLIENT CONTACT NUMBER' value={quotation.clientContactNumber} onChange={(e) => {\n                    setQuotation((prev) => ({ ...prev, clientContactNumber: e.target.value }));\n                  }} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth label='CLIENT EMAIL' required value={quotation.clientEmail} onChange={(e) => {\n                    setQuotation((prev) => ({ ...prev, clientEmail: e.target.value }));\n                  }} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth\n                    inputProps={{\n                      maxLength: 15,\n                    }}\n                    label='CLIENT GST NUMBER' value={quotation.clientGSTNumber} onChange={(e) => {\n                      setQuotation((prev) => ({ ...prev, clientGSTNumber: e.target.value }));\n                    }} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField\n                    label=\"QUOTATION DATE\"\n                    type=\"datetime-local\"\n                    value={quotation.date}\n                    onChange={(e) => {\n                      setQuotation((prev) => ({ ...prev, date: e.target.value }));\n                    }}\n                    fullWidth\n                    required\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} display='flex' justifyContent='space-between' >\n                  <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                    ADD OVERHEADS\n                  </Typography>\n                  <Button variant='contained' color='primary' startIcon={<AddIcon />} onClick={\n                    (event) => {\n                      setAnchorElForOverhead(event.currentTarget);\n                    }}>ADD EXISTING OVERHEAD</Button>\n                  <Menu\n                    id=\"basic-menu\"\n                    anchorEl={anchorElForOverhead}\n                    open={openForOverhead}\n                    onClose={() => setAnchorElForOverhead(null)}\n                    MenuListProps={{ 'aria-labelledby': 'basic-button' }}\n                  >\n                    {overheadDetails.map((ovData, index) => (\n                      <MenuItem key={index} onClick={() => handleAddOverhead(ovData)}>\n                        {ovData.name}\n                      </MenuItem>\n                    ))}\n                  </Menu>\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth label='Overhead Name' value={overhead.name} onChange={(e) => {\n                    setOverHead((prev) => ({ ...prev, name: e.target.value }));\n                  }} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth label='Rate' type='number' value={overhead.rate} onChange={(e) => {\n                    setOverHead((prev) => ({ ...prev, rate: e.target.value }));\n                  }} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth label='Ex. Rate' type='number' value={overhead.exRate} onChange={(e) => {\n                    setOverHead((prev) => ({ ...prev, exRate: e.target.value }));\n                  }} />\n                </Grid>\n                {/* <Grid item xs={3}>\n                  <TextField fullWidth label='GST' type='number' value={overhead.gst} onChange={(e) => {\n                    setOverHead((prev) => ({ ...prev, gst: e.target.value }));\n                  }} />\n                </Grid> */}\n                <Grid item xs={6}>\n                  <TextField fullWidth label='Quantity' type='number' value={overhead.qty} onChange={(e) => {\n                    setOverHead((prev) => ({ ...prev, qty: e.target.value }));\n                  }} />\n                </Grid>\n\n                <Grid item xs={12} display='flex' flexDirection='row' justifyContent='flex-end'>\n                  <Button variant='contained' color='primary' startIcon={<AddIcon />} onClick={\n                    () => {\n                      if (overhead.name === '' || overhead.rate === null || overhead.exRate === null || overhead.qty === null\n                        // || overhead.gst === null || overhead.gst === ''\n                      ) {\n                        enqueueSnackbar('Please fill all the fields!!', { variant: 'error' })\n                        return;\n                      };\n                      // Check if the values are greater than 0\n                      if (\n                        overhead.rate <= 0 ||\n                        overhead.exRate <= 0 ||\n                        overhead.qty <= 0\n                      ) {\n                        enqueueSnackbar('Please enter values greater than 0 for Rate, Ex. Rate, and Quantity!', { variant: 'error' });\n                        return;\n                      }\n\n                      // Calculate totalAmount and create a new overhead object\n                      const newOverhead = {\n                        ...overhead,\n                        totalAmount: overhead.rate * overhead.exRate * overhead.qty,\n                      };\n                      setQuotation((prev) => ({ ...prev, overheads: [...prev.overheads, newOverhead] }));\n                      setOverHead({\n                        name: '',\n                        rate: '',\n                        exRate: '',\n                        qty: '',\n                        gst: '',\n                        totalAmount: 0\n                      });\n                    }\n                  }>ADD OVERHEAD</Button>\n                </Grid>\n\n\n                {\n                  quotation?.overheads?.length > 0 &&\n\n                  <>\n                    <Grid item xs={12} sx={{ p: 2 }}>\n                      <DataTable\n                        columns={overheadColumns}\n                        data={quotation.overheads}\n                      />\n                    </Grid>\n                    <Grid item xs={12} sx={{ p: 2 }}>\n                      <Typography variant=\"caption\" display=\"block\" gutterBottom> Note: GST Will be applicable as per standards.</Typography>\n                    </Grid>\n\n                    <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'flex-end', flexDirection: 'row' }}>\n                      <Typography variant='h6' sx={{ mr: 2 }}>\n                        Total Amount:\n                      </Typography>\n                      <Typography variant='h6'>\n                        {\n                          quotation.overheads.reduce((acc, curr) => acc + curr.totalAmount, 0).toFixed(2)\n                        }\n                      </Typography>\n                    </Grid>\n                  </>\n                }\n\n\n              </Grid>\n            </div>\n\n            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignItems: 'center', padding: '10px', gap: '10px' }}>\n              <Button color='primary' variant='outlined' onClick={() => {\n                // TODO Once all fields are done\n                if (\n                  !quotation.clientCode ||\n                  !quotation.cargoType ||\n                  !quotation.pol ||\n                  !quotation.pod ||\n                  !quotation.grossWeight ||\n                  !quotation.cbm ||\n                  !quotation.clientEmail ||\n                  !quotation.carrier ||\n                  quotation.overheads.length === 0\n                ) {\n                  enqueueSnackbar('Please fill all the fields!!', { variant: 'error' });\n                  return;\n                };\n                // Add the quote to the lead state\n                const tempLead = { ...lead };\n                tempLead.quotation = quotation;\n                setLead(tempLead);\n\n                setQuotationModal(false);\n              }} >\n                Save Quotation\n              </Button>\n              <Button color='error' variant='contained' onClick={() => {\n                // TODO reset all fields and then\n                setQuotationModal(false);\n                setOverHead({\n                  name: '',\n                  rate: null,\n                  exRate: null,\n                  qty: null,\n                  totalAmount: 0\n                })\n              }}>\n                Cancel\n              </Button>\n            </div>\n          </Box>\n        </Modal>\n      </div>\n\n      <div style={{ marginTop: \"20px\" }}>\n        <DataTable\n          columns={leadColumns}\n          data={leads}\n          pagination\n          progressPending={isLeadLoading}\n        />\n      </div>\n\n      <Modal\n        open={showQuotation}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={styleForQuotation}>\n          <div style={{ height: \"260%\" }}>\n            <div style={{ padding: \"5px\", display: 'flex', justifyContent: 'flex-end', gap: \"10px\" }} >\n              <Button onClick={handleExportToPDF} color='primary' variant='contained'>\n                Export\n              </Button>\n              <Button onClick={() => {\n                setShowQuotation(false);\n                setTempData({});\n              }} color='error'>\n                Cancel\n              </Button>\n            </div>\n            <div ref={componentRef} id='quotation' style={{ height: \"98%\", padding: '20px' }}>\n              <Grid container sx={{ overflowX: 'auto', maxHeight: \"100%\", border: \"1px solid black\" }} >\n                <Grid item xs={12} sx={{ backgroundColor: \"#00308F\", p: 1 }} display='flex' justifyContent='space-around'>\n                  <Typography variant=\"h5\" gutterBottom sx={{ color: \"white\", }}> QUOTATION</Typography>\n                </Grid>\n                <Grid item xs={12} sx={{ backgroundColor: \"#B9D9EB\", p: 1 }} display='flex' justifyContent='space-around' >\n                  <Typography variant=\"h3\" gutterBottom sx={{ fontSize: \"20px\" }}>MERIDIAN LOGISTICS SOLUTIONS</Typography>\n                </Grid>\n                <Grid item xs={6} container sx={{ p: 1 }}>\n\n                  <Grid item xs={12} display='flex' justifyContent='space-between'>\n                    <Grid item >\n                      <Typography variant=\"body1\" gutterBottom >\n                        CLIENT NAME :\n                      </Typography>\n                    </Grid>\n                    <Grid item >\n                      <Typography variant=\"body2\" gutterBottom >\n                        {quotationView.name}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={12} display='flex' justifyContent='space-between'>\n                    <Grid item >\n                      <Typography variant=\"body1\" gutterBottom >\n                        CLIENT CODE :\n                      </Typography>\n                    </Grid>\n                    <Grid item >\n                      <Typography variant=\"body2\" gutterBottom >\n                        {quotationView.clientCode ?? 'N/A'}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={12} display='flex' justifyContent='space-between'>\n                    <Grid item >\n                      <Typography variant=\"body1\" gutterBottom >\n                        ADDRESS :\n                      </Typography>\n\n                    </Grid>\n                    <Grid item >\n                      <Typography variant=\"body2\" gutterBottom >\n                        {quotationView.clientAddress ? quotationView.clientAddress : 'N/A'}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={12} display='flex' justifyContent='space-between'>\n                    <Grid item >\n                      <Typography variant=\"body1\" gutterBottom >\n                        GSTIN :\n                      </Typography>\n                    </Grid>\n                    <Grid item >\n                      <Typography variant=\"body2\" gutterBottom >\n                        {quotationView.clientGSTNumber ? quotationView.clientGSTNumber : 'N/A'}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={12} display='flex' justifyContent='space-between'>\n                    <Grid item >\n                      <Typography variant=\"body1\" gutterBottom >\n                        CONTACT NUMBER :\n                      </Typography>\n\n                    </Grid>\n                    <Grid item >\n                      <Typography variant=\"body2\" gutterBottom >\n                        {quotationView.clientContactNumber ? quotationView.clientContactNumber : 'N/A'}\n                      </Typography>\n\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={12} display='flex' justifyContent='space-between'>\n                    <Grid item >\n                      <Typography variant=\"body1\" gutterBottom >\n                        EMAIL :\n                      </Typography>\n                    </Grid>\n                    <Grid item >\n                      <Typography variant=\"body2\" gutterBottom >\n                        {quotationView.clientEmail ? quotationView.clientEmail : 'N/A'}\n                      </Typography>\n\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={12} display='flex' justifyContent='space-between'>\n                    <Grid item >\n                      <Typography variant=\"body1\" gutterBottom >\n                        QUOTATION NO :\n                      </Typography>\n                    </Grid>\n                    <Grid item >\n                      <Typography variant=\"body2\" gutterBottom >\n                        {quotationView.quotationNo ? quotationView.quotationNo : 'N/A'}\n                      </Typography>\n\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={12} display='flex' justifyContent='space-between'>\n                    <Grid item >\n                      <Typography variant=\"body1\" gutterBottom >\n                        DATE :\n                      </Typography>\n                    </Grid>\n                    <Grid item >\n                      <Typography variant=\"body2\" gutterBottom >\n                        {quotationView.date ? formatDate(quotationView.date) : 'N/A'}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item xs={6} display='flex' justifyContent='flex-end'>\n                  <img\n                    // style={{ width: \"100px\", height: \"100px\" }}\n                    src=\"/logo/logo_single.png\" // Replace with the path to your logo.png file\n                    alt=\"Logo\"\n                    className={{ width: '100%', height: '100%', objectFit: 'cover' }}\n                  />\n                </Grid>\n                <Grid item xs={12} sx={{ backgroundColor: \"#00308F\", p: 0.1 }} display='flex' justifyContent='space-around'>\n                  <Typography gutterBottom sx={{ color: \"#00308F\" }}> QUOTATION</Typography>\n                </Grid>\n\n                {/*   All Details  */}\n                <Grid container display='flex' justifyContent='space-between' flexDirection='row' sx={{ p: 1 }}>\n\n                  <Grid item xs={3} container >\n\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          COMMODITY :\n                        </Typography>\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.commodity ?? 'N/A'}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          NO. OF PACKAGES :\n                        </Typography>\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.noOfPackages ?? 'N/A'}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          NET WEIGHT :\n                        </Typography>\n\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.netWeight ?? 'N/A'}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          GROSS WEIGHT :\n                        </Typography>\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.grossWeight ?? 'N/A'}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          CH. WT./ CBM :\n                        </Typography>\n\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.cbm ?? 'N/A'}\n                        </Typography>\n\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          STACKABLE :\n                        </Typography>\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.stackable ?? 'N/A'}\n                        </Typography>\n\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <Grid item xs={3} container >\n\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          INCO TERM :\n                        </Typography>\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.incoTerm ?? 'N/A'}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          MODE :\n                        </Typography>\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.mode ?? 'N/A'}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          PICK UP :\n                        </Typography>\n\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.pickUpAddress ?? 'N/A'}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          POL :\n                        </Typography>\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.pol ?? 'N/A'}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          POD :\n                        </Typography>\n\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.pod ?? 'N/A'}\n                        </Typography>\n\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          DELIVERY :\n                        </Typography>\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.deliveryAddress ?? 'N/A'}\n                        </Typography>\n\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <Grid item xs={3} container  >\n\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          TRADE TYPE :\n                        </Typography>\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.tradeType ?? 'N/A'}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          CARRIER :\n                        </Typography>\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.carrier ?? 'N/A'}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          CUT OFF :\n                        </Typography>\n\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.cutOffDate ? formatDate(quotationView.cutOffDate) : 'N/A'}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          ESTIMATED TIME OF DEPARTURE :\n                        </Typography>\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.etd ? formatDate(quotationView.etd) : 'N/A'}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          ESTIMATED TIME OF ARRIVAL :\n                        </Typography>\n\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.eta ? formatDate(quotationView.eta) : 'N/A'}\n                        </Typography>\n\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          TRANSIT TIME :\n                        </Typography>\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.tt ? `${quotationView.tt} Days` : 'N/A'}\n                        </Typography>\n\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n\n\n                <Grid item xs={12} sx={{ backgroundColor: \"#00308F\", p: 0.1 }} display='flex' justifyContent='space-around'>\n                  <Typography gutterBottom sx={{ color: \"#00308F\" }}> QUOTATION</Typography>\n                </Grid>\n\n                <Grid item xs={12} sx={{ p: 1 }}>\n                  <DataTable\n                    columns={overheadQuotationViewColumn}\n                    data={quotationView.overheads}\n                  />\n                </Grid>\n\n                <Grid item xs={12} sx={{ backgroundColor: \"#00308F\", p: 0.1 }} display='flex' justifyContent='space-around'>\n                  <Typography gutterBottom sx={{ color: \"#00308F\" }}> QUOTATION</Typography>\n                </Grid>\n                <Grid item xs={3} sx={{ pl: 1 }}>\n                  <Typography variant='body2'>SUBTOTAL (BEFORE TAX) :</Typography>\n                </Grid>\n                <Grid item xs={9} display='flex' justifyContent='flex-end' sx={{ pr: 1 }}>\n                  <Typography variant='body1'>{quotationView.subtotalAmount ? `Rs. ${quotationView.subtotalAmount}/-` : '-'}</Typography>\n                </Grid>\n                {/* <Grid item xs={3} sx={{ pl: 1 }}>\n                  <Typography variant='body2'>GST :</Typography>\n                </Grid>\n                <Grid item xs={9} display='flex' justifyContent='flex-end' sx={{ pr: 1 }}>\n                  <Typography variant='body1'>{quotationView.gstAmount ? `Rs. ${quotationView.gstAmount}/-` : '-'}</Typography>\n                </Grid> */}\n                <Grid item xs={3} sx={{ pl: 1 }}>\n                  <Typography variant='body2'>TOTAL AMOUNT :</Typography>\n                </Grid>\n                <Grid item xs={9} display='flex' justifyContent='flex-end' sx={{ pr: 1 }}>\n                  <Typography variant='body1' style={{ fontWeight: 'bold' }}>{quotationView.totalAmount ? `Rs. ${quotationView.totalAmount}/-` : '-'}</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <Divider />\n                </Grid>\n                <Grid item xs={6} sx={{ pl: 1 }}>\n                  <Typography variant='body2'>ESTIMATED AMOUNT IN WORDS :</Typography>\n                </Grid>\n                <Grid item xs={6} sx={{ pl: 1 }} display='flex' justifyContent='flex-end'>\n                  <Typography variant='body1'> {quotationView.totalAmount ? amountInWords(quotationView.totalAmount) : '-'}</Typography>\n                </Grid>\n                <Grid item xs={12} sx={{ backgroundColor: \"#00308F\", p: 0.1 }} display='flex' justifyContent='space-around'>\n                  <Typography gutterBottom sx={{ color: \"#00308F\" }}> QUOTATION</Typography>\n                </Grid>\n                <Grid item container xs={12} sx={{ pl: 1 }} display='flex' justifyContent='center'>\n                  <Grid item xs={12}> <Typography variant='body2'>TERMS & CONDITIONS :</Typography></Grid>\n                </Grid>\n\n                {quotationView.termsAndConditions.length > 0 &&\n                  <Grid item xs={12}>\n                    <List>\n                      {quotationView.termsAndConditions.map((term, index) => (\n                        <React.Fragment key={index}>\n                          <ListItem>\n                            <ListItemText primary={`${index + 1}. ${term}`} />\n                          </ListItem>\n                          {index !== terms.length - 1 && <Divider />} {/* Add divider for all except the last item */}\n                        </React.Fragment>\n                      ))}\n                    </List>\n                  </Grid>\n                }\n                <Grid item xs={12} sx={{ backgroundColor: \"#00308F\", p: 0.1 }} display='flex' justifyContent='space-around'>\n                  <Typography gutterBottom sx={{ color: \"#00308F\" }}> QUOTATION</Typography>\n                </Grid>\n                <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'flex-end', height: \"100px\", alignItems: \"end\" }}>\n                  <Typography gutterBottom variant='body1' sx={{ pr: 3 }}>SEAL & SIGNATURE</Typography>\n                </Grid>\n                <Grid item xs={12} sx={{ backgroundColor: \"#00308F\", p: 1 }} display='flex' justifyContent='space-around'>\n                  <Typography gutterBottom sx={{ color: \"white\" }}> INTEGRAL SOLUTION FOR INTERNATIONAL FREIGHT FORWARDING</Typography>\n                </Grid>\n              </Grid>\n            </div>\n            {/* <div style={{ padding: \"5px\", display: 'flex', justifyContent: 'flex-end', gap: \"10px\" }} >\n              <Button onClick={\n                // handlePrint(null, () => componentRef.current);\n                () => {\n                  const printWindow = window.open('', '_blank');\n                  if (printWindow) {\n                    printWindow.document.write('<html><head><title>QUOTATION</title></head><body>');\n                    printWindow.document.write(componentRef.current.innerHTML);\n                    printWindow.document.write('</body></html>');\n                    printWindow.document.close();\n                    printWindow.print();\n                  } else {\n                    alert('Popup Blocker is enabled! Please allow popups for this site.');\n                  }\n                }\n              } color='primary' variant='contained'>\n                Export\n              </Button>\n              <Button onClick={() => {\n                setShowQuotation(false);\n                setTempData({});\n              }} color='error'>\n                Cancel\n              </Button>\n            </div> */}\n          </div>\n\n        </Box>\n\n      </Modal>\n\n      {/* Dialog For Delete */}\n      <Dialog open={openDialog} onClose={() => setOpenDialog(false)}>\n        <DialogTitle>Remove Lead</DialogTitle>\n        <DialogContent>\n          Are you sure you want to delete this lead?\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpenDialog(false)}>Cancel</Button>\n          <Button onClick={handleConfirmDelete} variant=\"contained\" color=\"error\">\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n\n      {/* Show Terms & Conditions */}\n      <Modal open={termsModal}>\n        <Box sx={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          width: '70%',\n          bgcolor: 'background.paper',\n          boxShadow: 24,\n          borderRadius: '10px',\n          p: 2,\n        }}>\n\n\n          <Grid container spacing={2} >\n            <Grid item xs={12} display='flex' justifyContent='space-between' alignItems='center'>\n              <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                ADD TERMS & CONDITIONS\n              </Typography>\n              {\n                existingTerms !== 0 &&\n                <Button color='primary' variant='contained' onClick={() => setExistingTermsModal(true)}>\n                  ADD EXISTING TERMS\n                </Button>\n              }\n            </Grid>\n\n            <Grid item xs={12} display='flex' justifyContent='space-between' gap='10px' alignItems='center'>\n              <TextField\n                name='addtermsandconditions'\n                label='Add Terms and Conditions'\n                placeholder='Please enter terms and conditions'\n                value={newTerm}\n                onChange={(e) => setNewTerm(e.target.value)}\n                fullWidth\n              />\n              <Button disabled={!newTerm} size='large' variant=\"contained\" onClick={addTerm} >Add</Button>\n            </Grid>\n\n\n            {\n              terms.length > 0 &&\n              <Grid item xs={12}>\n                <List style={{ maxHeight: '300px', overflow: 'auto', border: '1px solid black', borderRadius: '10px' }}>\n                  {terms.map((term, index) => (\n                    <React.Fragment key={index}>\n                      <ListItem>\n                        <div style={{ display: 'flex', justifyContent: 'flex-start', gap: '20px', alignItems: 'center', width: '100%' }}>\n                          <ListItemText primary={`${index + 1}. ${term}`} />\n                          <IconButton color='error' variant='contained' onClick={() => removeTerm(index)}>\n                            <DeleteForeverIcon />\n                          </IconButton>\n                        </div>\n                      </ListItem>\n                      {index !== terms.length - 1 && <Divider />} {/* Add divider for all except the last item */}\n                    </React.Fragment>\n                  ))}\n                </List>\n              </Grid>\n            }\n            <Grid item xs={12} display='flex' justifyContent='flex-end' gap='10px'>\n              <Button color='primary' variant='contained' onClick={\n                handleAddCondtions\n              }\n                disabled={terms.length === 0}>\n                SAVE TERMS & CONDITIONS\n              </Button>\n              <Button color='error' variant='contained'\n                onClick={\n                  () => {\n                    setTermsModal(false);\n                  }\n                }\n              >\n                CANCEL\n              </Button>\n            </Grid>\n          </Grid>\n        </Box>\n      </Modal>\n\n\n      <Modal open={existingTermsModal}>\n        <Box\n          sx={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            width: '70%',\n            bgcolor: 'background.paper',\n            boxShadow: 24,\n            borderRadius: '10px',\n            p: 2,\n          }}\n        >\n          <Typography variant=\"h6\" gutterBottom>\n            Select Existing Terms\n          </Typography>\n          <List style={{ maxHeight: '300px', overflow: 'auto', border: '1px solid black', borderRadius: '10px', marginTop: \"20px\", marginBottom: \"20px\" }}>\n            {existingTerms.map((term, index) => (\n              <React.Fragment key={index}>\n                <ListItem onClick={() => addExistingTerm(term)} style={{ cursor: 'pointer' }}>\n                  <ListItemText primary={`${index + 1}. ${term}`} />\n                </ListItem>\n                {index !== existingTerms.length - 1 && <Divider />} {/* Add divider for all except the last item */}\n              </React.Fragment>\n            ))}\n          </List>\n\n          <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n\n            <Button color='error' variant='contained' onClick={() => setExistingTermsModal(false)}>\n              CLOSE\n            </Button>\n          </div>\n        </Box>\n      </Modal>\n\n\n    </Container >\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport OneView from 'src/sections/one/view';\n\n// ----------------------------------------------------------------------\n\nexport default function Page() {\n  return (\n    <>\n      <Helmet>\n        <title>Lead Management</title>\n      </Helmet>\n\n      <OneView />\n    </>\n  );\n}\n"],"names":["formatDate","dateValue","Date","toLocaleDateString","style","position","top","left","transform","width","bgcolor","borderRadius","boxShadow","height","p","styleForQuotation","inquiryFormState","commodity","hsCode","shipmentTerm","mode","typeOfPacking","numberOfPackages","dimensions","netWeight","grossWeight","pickUpAddress","pickUpAddressCode","deliveryAddress","deliveryAddressCode","portOfLoading","portOfDischarge","quotationState","number","clientCode","incoTerm","cargoType","pol","pod","cbm","overheads","stackable","carrier","cutoffDate","etd","eta","tt","tradeType","clientAddress","clientGSTNumber","clientContactNumber","clientEmail","date","LeadView","_quotation$overheads","_quotationView$client","_quotationView$commod","_quotationView$noOfPa","_quotationView$netWei","_quotationView$grossW","_quotationView$cbm","_quotationView$stacka","_quotationView$incoTe","_quotationView$mode","_quotationView$pickUp","_quotationView$pol","_quotationView$pod","_quotationView$delive","_quotationView$tradeT","_quotationView$carrie","settings","useSettingsContext","navigate","useNavigate","componentRef","useRef","enqueueSnackbar","useReactToPrint","documentTitle","content","current","onBeforePrint","value","console","log","removeAfterPrint","useSnackbar","_useState","useState","_useState2","_slicedToArray","editingIndex","setEditingIndex","_useState3","_useState4","open","setOpen","_useState5","_useState6","inquiryForm","setInquiryForm","_useState7","_useState8","quotation","setQuotation","_useState9","_useState10","editUser","setEditUser","_useState11","_useState12","isLeadLoading","setIsLeadLoading","_useState13","_useState14","leads","setLeads","_useState15","name","rate","gst","exRate","qty","totalAmount","_useState16","overhead","setOverHead","_useState17","_useState18","editOverhead","setEditOverHead","_useState19","_useState20","editOverheadIndex","setEditOverHeadIndex","_useState21","length","breadth","_useState22","dimension","setDimension","_useState23","_useState24","editDimension","setEditDimension","_useState25","_useState26","quotationModal","setQuotationModal","_useState27","id","meetingScheduleDate","inquiry","source","place","form","status","_useState28","lead","setLead","_useState29","_useState30","openDialog","setOpenDialog","_useState31","_useState32","anchorEl","setAnchorEl","openMenu","Boolean","_useState33","_useState34","tempData","setTempData","_useState35","_useState36","showQuotation","setShowQuotation","_useState37","_useState38","anchorElForOverhead","setAnchorElForOverhead","openForOverhead","handleInputChange","field","prev","_objectSpread","_defineProperty","handleDimensionChange","handleEditDimensionChange","handleExportToPDF","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","quotationElement","canvas","pdf","contentHeight","wrap","_context","next","document","getElementById","html2canvas","scrollY","window","sent","JsPDF","addImage","save","t0","error","stop","apply","arguments","overheadColumns","selector","row","index","cell","_jsx","children","TextField","size","type","onChange","e","target","toFixed","_Fragment","_jsxs","IconButton","onClick","variant","existingQuote","newOverhead","color","SaveIcon","CancelIcon","ovhd","handleExistingOverheadChange","EditIcon","newOverheads","filter","_","i","DeleteIcon","fetchData","_ref2","_callee2","decryptedToken","accessToken","response","_context2","localStorage","getItem","constants","decryptToken","axios","endpoints","headers","Authorization","concat","data","_useState39","_useState40","termsModal","setTermsModal","_useState41","_useState42","terms","setTerms","_useState43","_useState44","newTerm","setNewTerm","_useState45","_useState46","existingTermsModal","setExistingTermsModal","_useState47","_useState48","existingTerms","setExistingTerms","fetchTerms","_ref3","_callee3","_context3","map","term","handleAddCondtions","_ref4","_callee4","_context4","_id","then","res","catch","err","_useState49","quotationNo","noOfPackages","cutOffDate","subtotalAmount","gstAmount","termsAndConditions","_useState50","quotationView","setQuotationView","useEffect","handleAddLead","_ref5","_callee5","_context5","handleCancelAllStates","msg","leadColumns","sortable","toUpperCase","Label","createdAt","center","_row$quotation","_row$inquiry","_row$inquiry$form","_row$inquiry2","_row$inquiry2$form","display","justifyContent","alignItems","gap","Button","event","currentTarget","endIcon","ArrowDropDownIcon","startIcon","AddIcon","disabled","handleRedirectionToJCPage","Menu","onClose","MenuListProps","MenuItem","handleEditDetails","obj","reduce","sum","parseFloat","handleViewQuotation","handleDeleteDetails","acc","net","gross","localDate","year","getFullYear","month","getMonth","toString","padStart","day","getDate","hours","getHours","minutes","getMinutes","formattedDate","localInquiryDate","yearI","monthI","dayI","hoursI","minutesI","formattedDateForInquiry","leadData","quot","handleUpdateData","_ref6","_callee6","_context6","state","Container","maxWidth","themeStretch","Typography","paddingTop","Modal","Box","sx","component","Grid","container","spacing","pt","item","xs","fullWidth","label","required","InputLabelProps","shrink","getTime","formattedDateForComp","FormControl","InputLabel","Select","labelId","flexDirection","maxHeight","overflow","newDimension","_toConsumableArray","placeholder","DataTable","columns","editedDimension","updatedDimensions","dimensionToEdit","handleEdit","newDimensions","padding","test","inputProps","maxLength","ovData","prevOverhead","handleAddOverhead","gutterBottom","mr","curr","tempLead","marginTop","pagination","progressPending","ref","overflowX","border","backgroundColor","fontSize","src","alt","className","objectFit","pl","pr","fontWeight","Divider","amountInWords","List","React","ListItem","ListItemText","primary","Dialog","DialogTitle","DialogContent","DialogActions","config","trim","includes","updatedTerms","splice","removeTerm","DeleteForeverIcon","marginBottom","addExistingTerm","cursor","Page","Helmet","OneView"],"sourceRoot":""}