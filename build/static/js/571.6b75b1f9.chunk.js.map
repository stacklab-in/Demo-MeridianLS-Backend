{"version":3,"file":"static/js/571.6b75b1f9.chunk.js","mappings":"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","sources":["sections/one/view.js","pages/dashboard/one.js"],"sourcesContent":["// @mui\nimport { useState, useEffect, useRef } from 'react';\n// components\nimport { useSettingsContext } from 'src/components/settings';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, FormControl, Typography, Box, Container, Grid, IconButton, InputLabel, MenuItem, Modal, Paper, Select, TextField, Menu, Dialog, DialogTitle, DialogContent, DialogActions, Divider } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport DataTable from 'react-data-table-component';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { amountInWords, decryptToken, formattedDateForComp } from 'src/utils/common';\nimport axios, { endpoints } from 'src/utils/axios';\nimport { constants } from 'src/utils/constant';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\nimport Label from 'src/components/label';\nimport { useSnackbar } from 'src/components/snackbar';\nimport EditIcon from '@mui/icons-material/Edit';\nimport SaveIcon from '@mui/icons-material/Save';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport html2canvas from 'html2canvas';\nimport JsPDF from 'jspdf';\nimport { useReactToPrint } from 'react-to-print';\n// ----------------------------------------------------------------------\nconst formatDate = (dateValue) => {\n  const formattedDate = new Date(dateValue).toLocaleDateString('en-GB'); // 'en-GB' is the locale for dd/mm/yyyy\n  return formattedDate\n};\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: \"70%\",\n  bgcolor: 'background.paper',\n  borderRadius: \"10px\",\n  boxShadow: 24,\n  height: \"auto\",\n  p: 2,\n};\n\nconst styleForQuotation = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: \"80%\",\n  bgcolor: 'background.paper',\n  borderRadius: \"10px\",\n  boxShadow: 24,\n  height: \"90%\",\n  p: 4,\n};\n\nconst inquiryFormState = {\n  commodity: '',\n  hsCode: '',\n  shipmentTerm: '',\n  mode: '',\n  typeOfPacking: '',\n  numberOfPackages: '',\n  dimensions: [\n    // { qty: '', length: '', breadth: '', height: '' }\n  ],\n  netWeight: '',\n  grossWeight: '',\n  pickUpAddress: '',\n  pickUpAddressCode: '',\n  deliveryAddress: '',\n  deliveryAddressCode: '',\n  portOfLoading: '',\n  portOfDischarge: ''\n};\n\nconst quotationState = {\n  number: '',\n  clientCode: '',\n  incoTerm: '',\n  cargoType: '',\n  pol: '',\n  grossWeight: '',\n  pod: '',\n  cbm: '',\n  overheads: [\n    // {\n    //   name: 'Ocean Freight',\n    //   rate: 20,\n    //   exRate: 84,\n    //   qty: 3.67,\n    //   totalAmount: 6165.60\n    // },\n    // {\n    //   name: 'Destination THC',\n    //   rate: 1350,\n    //   exRate: 1,\n    //   qty: 3.67,\n    //   totalAmount: 4954.50\n    // },\n    // {\n    //   name: 'D/O Fees',\n    //   rate: 3800,\n    //   exRate: 1,\n    //   qty: 1,\n    //   totalAmount: 3800\n    // },\n    // {\n    //   name: 'Warehouse',\n    //   rate: 15000,\n    //   exRate: 1,\n    //   qty: 1,\n    //   totalAmount: 15000\n    // },\n    // {\n    //   name: 'Agency Charges',\n    //   rate: 5000,\n    //   exRate: 1,\n    //   qty: 1,\n    //   totalAmount: 5000\n    // },\n    // {\n    //   name: 'Loading Unloading ',\n    //   rate: 1000,\n    //   exRate: 1,\n    //   qty: 1,\n    //   totalAmount: 1000\n    // },\n    // {\n    //   name: 'Transportation',\n    //   rate: 18000,\n    //   exRate: 1,\n    //   qty: 1,\n    //   totalAmount: 18000\n    // }\n  ],\n  deliveryAddress: '',\n  stackable: '',\n  carrier: '',\n  cutoffDate: '',\n  etd: '',\n  eta: '',\n  tt: '',\n  tradeType: '',\n  clientAddress: '',\n  clientGSTNumber: '',\n  clientContactNumber: '',\n  clientEmail: '',\n  date: '',\n\n};\n\nexport default function LeadView() {\n  const settings = useSettingsContext();\n  const navigate = useNavigate();\n  const componentRef = useRef();\n  const handlePrint = useReactToPrint({\n    documentTitle: 'QUOTATION',\n    content: () => componentRef.current,\n    onBeforePrint: (value) => console.log('BeforePrint'),\n    removeAfterPrint: true,\n  });\n  const { enqueueSnackbar } = useSnackbar();\n  // Define a state to hold the index of the dimension being edited\n  const [editingIndex, setEditingIndex] = useState(null);\n\n  // For Add Lead\n  const [open, setOpen] = useState(false);\n  const [inquiryForm, setInquiryForm] = useState(false);\n  const [quotation, setQuotation] = useState(quotationState);\n  const [editUser, setEditUser] = useState(false);\n  const handleOpen = () => {\n    setOpen(true);\n    setEditUser(false);\n  };\n  const handleClose = () => setOpen(false);\n\n  const [isLeadLoading, setIsLeadLoading] = useState(false);\n  const [leads, setLeads] = useState([]);\n  const [overhead, setOverHead] = useState({\n    name: '',\n    rate: null,\n    gst: null,\n    exRate: null,\n    qty: null,\n    totalAmount: 0\n  });\n\n\n  const [editOverhead, setEditOverHead] = useState({\n    name: '',\n    rate: null,\n    exRate: null,\n    qty: null,\n    gst: null,\n    totalAmount: 0,\n  });\n\n  const [editOverheadIndex, setEditOverHeadIndex] = useState(null);\n\n  const [dimension, setDimension] = useState({\n    length: '',\n    breadth: '',\n    height: '',\n    qty: '',\n  });\n\n  const [editDimension, setEditDimension] = useState({\n    length: '',\n    breadth: '',\n    height: '',\n    qty: '',\n  });\n\n  // Quotation \n  const [quotationModal, setQuotationModal] = useState(false);\n\n\n  const [lead, setLead] = useState({\n    id: '',\n    name: '',\n    meetingScheduleDate: null,\n    inquiry: {\n      number: '',\n      source: '',\n      place: '',\n      date: null,\n      form: inquiryFormState\n    },\n    quotation: {},\n    status: ''\n  });\n\n\n\n  // For Delete Customer\n  const [openDialog, setOpenDialog] = useState(false);\n\n  // For Actions Dropdown\n  const [anchorEl, setAnchorEl] = useState(null);\n  const openMenu = Boolean(anchorEl);\n\n  // Temporary State\n  const [tempData, setTempData] = useState({});\n\n\n  // Quotation\n  const [showQuotation, setShowQuotation] = useState(false);\n\n  // ADD Existing overhead\n  const [anchorElForOverhead, setAnchorElForOverhead] = useState(null);\n  const openForOverhead = Boolean(anchorElForOverhead);\n\n  const handleInputChange = (field, value) => {\n    setLead((prev) => ({\n      ...prev,\n      inquiry: {\n        ...prev.inquiry,\n        form: {\n          ...prev.inquiry.form,\n          [field]: value,\n        },\n      },\n    }));\n  };\n\n\n  const handleDimensionChange = (field, value) => {\n    setDimension((prev) => ({\n      ...prev,\n      [field]: value,\n    }));\n  };\n\n  const handleEditDimensionChange = (field, value) => {\n    setEditDimension((prev) => ({\n      ...prev,\n      [field]: value,\n    }));\n  };\n\n  const handleExistingOverheadChange = (ovhd, index) => {\n    setEditOverHeadIndex(index);\n    setEditOverHead((prev) => ({\n      ...prev,\n      name: ovhd.name,\n      rate: ovhd.rate,\n      exRate: ovhd.exRate,\n      gst: ovhd.gst,\n      qty: ovhd.qty,\n    }));\n  };\n\n  const overheadColumns = [\n    {\n      name: 'Sr. No.',\n      selector: (row, index) => index + 1,\n    },\n    {\n      name: 'Overhead',\n      selector: (row, index) => row.name,\n      width: '20%'\n    },\n    {\n      name: 'Rate',\n      selector: (row, index) => (editOverheadIndex === index ? editOverhead.rate : row.rate),\n      cell: (row, index) => (\n        <div>\n          {editOverheadIndex === index ? (\n            <TextField\n              size='small'\n              type='number'\n              value={editOverhead.rate}\n              onChange={(e) => setEditOverHead((prev) => ({ ...prev, rate: e.target.value }))}\n            />\n          ) : (\n            row.rate\n          )}\n        </div>\n      ),\n    },\n    {\n      name: 'Ex. Rate',\n      selector: (row, index) => (editOverheadIndex === index ? editOverhead.exRate : row.exRate),\n      cell: (row, index) => (\n        <div>\n          {editOverheadIndex === index ? (\n            <TextField\n              size='small'\n              type='number'\n              value={editOverhead.exRate}\n              onChange={(e) => setEditOverHead((prev) => ({ ...prev, exRate: e.target.value }))}\n            />\n          ) : (\n            row.exRate\n          )}\n        </div>\n      ),\n    },\n    // {\n    //   name: 'GST',\n    //   selector: (row, index) => (editOverheadIndex === index ? editOverhead.gst : row.gst),\n    //   cell: (row, index) => (\n    //     <div>\n    //       {editOverheadIndex === index ? (\n    //         <TextField\n    //           size='small'\n    //           type='number'\n    //           value={editOverhead.gst}\n    //           onChange={(e) => setEditOverHead((prev) => ({ ...prev, gst: e.target.value }))}\n    //         />\n    //       ) : (\n    //         row.gst\n    //       )}\n    //     </div>\n    //   ),\n    // },\n    {\n      name: 'Qty',\n      selector: (row, index) => (editOverheadIndex === index ? editOverhead.qty : row.qty),\n      cell: (row, index) => (\n        <div>\n          {editOverheadIndex === index ? (\n            <TextField\n              size='small'\n              type='number'\n              value={editOverhead.qty}\n              onChange={(e) => setEditOverHead((prev) => ({ ...prev, qty: e.target.value }))}\n            />\n          ) : (\n            row.qty\n          )}\n        </div>\n      ),\n    },\n    {\n      name: 'Total Amount',\n      selector: (row, index) => row.totalAmount.toFixed(2),\n    },\n    {\n      name: 'Action',\n      cell: (row, index) => (\n        <>\n          {editOverheadIndex === index ? (\n            <>\n              <IconButton\n                onClick={() => {\n                  if (editOverhead.name === '' || editOverhead.rate === null || editOverhead.exRate === null || editOverhead.qty === null || editOverhead.gst === '' || editOverhead.gst === null) {\n                    enqueueSnackbar('Please fill all the fields!!', { variant: 'error' })\n                    return;\n                  };\n\n                  // Check if the values are greater than 0\n                  if (\n                    editOverhead.rate <= 0 ||\n                    editOverhead.exRate <= 0 ||\n                    editOverhead.qty <= 0\n                  ) {\n                    enqueueSnackbar('Please enter values greater than 0 for Rate, Ex. Rate, and Quantity!', { variant: 'error' });\n                    return;\n                  }\n\n                  const existingQuote = { ...quotation };\n                  const newOverhead = {\n                    ...editOverhead,\n                    totalAmount: editOverhead.rate * editOverhead.exRate * editOverhead.qty,\n                  };\n                  existingQuote.overheads[editOverheadIndex] = newOverhead;\n                  setQuotation(existingQuote);\n                  setEditOverHeadIndex(null);\n                }} color='success'>\n                <SaveIcon color='success' />\n              </IconButton>\n              <IconButton onClick={() => setEditOverHeadIndex(null)} color='error'>\n                <CancelIcon color='error' />\n              </IconButton>\n            </>\n          ) : (\n            <>\n\n              <IconButton onClick={() => handleExistingOverheadChange(row, index)}>\n                <EditIcon color='success' />\n              </IconButton>\n              <IconButton\n                onClick={() => {\n                  const newOverheads = quotation.overheads.filter((_, i) => i !== index);\n                  setQuotation((prev) => ({ ...prev, overheads: newOverheads }));\n                }}\n              >\n                <DeleteIcon color='error' />\n              </IconButton>\n            </>\n          )}\n\n        </>\n      ),\n    },\n  ];\n\n\n  const fetchData = async () => {\n    try {\n      const decryptedToken = localStorage.getItem(constants.keyUserToken);\n      const accessToken = decryptToken(decryptedToken);\n      const response = await axios.post(endpoints.lead.list, {}, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      });\n      if (response) {\n        console.log({ response });\n        setIsLeadLoading(false);\n        setLeads(response.data.data);\n      }\n    } catch (err) {\n      enqueueSnackbar('Failed to fetch leads!', { variant: 'error' });\n      setIsLeadLoading(false);\n    }\n  };\n\n  const [quotationView, setQuotationView] = useState({\n    name: '',\n    clientCode: '',\n    quotationNo: '',\n    date: '',\n    commodity: '',\n    noOfPackages: '',\n    netWeight: '',\n    grossWeight: '',\n    cbm: '',\n    stackable: '',\n    incoTerm: '',\n    mode: '',\n    pickUpAddress: '',\n    pol: '',\n    pod: '',\n    deliveryAddress: '',\n    tradeType: '',\n    carrier: '',\n    cutOffDate: '',\n    etd: '',\n    eta: '',\n    tt: '',\n    overheads: [],\n    subtotalAmount: '',\n    gstAmount: '',\n    totalAmount: '',\n    termsAndConditions: []\n  });\n\n  useEffect(() => {\n    setIsLeadLoading(true);\n    fetchData();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleAddLead = async () => {\n    // If no errors, proceed with saving\n    const decryptedToken = localStorage.getItem(constants.keyUserToken);\n    const accessToken = decryptToken(decryptedToken);\n\n    console.log({ lead });\n    axios.post(endpoints.lead.add, lead,\n      {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      })\n      .then((res) => {\n        enqueueSnackbar('Lead created successfully!', { variant: 'success' });\n\n        fetchData();\n        handleCancelAllStates();\n\n        setOpen(false);\n      }).catch((err) => {\n        enqueueSnackbar(err.error || err.msg, { variant: 'error' });\n      })\n  };\n\n\n  const handleCancelAllStates = () => {\n    setOverHead({\n      name: '',\n      rate: null,\n      exRate: null,\n      qty: null,\n      totalAmount: 0\n    });\n    setLead({\n      name: '',\n      meetingScheduleDate: null,\n      inquiry: {\n        source: '',\n        place: '',\n        date: null,\n        form: inquiryFormState\n      },\n      quotation: {},\n      status: ''\n    });\n    setQuotation(quotationState);\n  };\n\n\n  const handleViewQuotation = () => {\n    setAnchorEl(null);\n    console.log(tempData);\n\n    const newOverheads = tempData.quotation.overheads.map(obj => {\n      const gstAmount = obj.rate * obj.exRate * obj.qty * obj.gst / 100;\n      const subtotalAmount = obj.rate * obj.exRate * obj.qty;\n      const totalAmount = gstAmount + subtotalAmount;\n      return {\n        name: obj.name,\n        rate: obj.rate,\n        exRate: obj.exRate,\n        qty: obj.qty,\n        gst: obj.gst,\n        subtotalAmount: subtotalAmount.toFixed(2),\n        gstAmount: gstAmount.toFixed(2),\n        totalAmount: totalAmount.toFixed(2)\n      };\n    });\n\n    const subtotalAmount = newOverheads.reduce((sum, obj) => sum + parseFloat(obj.subtotalAmount), 0);\n    const gstAmount = newOverheads.reduce((sum, obj) => sum + parseFloat(obj.gstAmount), 0);\n    const totalAmount = newOverheads.reduce((sum, obj) => sum + parseFloat(obj.totalAmount), 0);\n    console.log({ subtotalAmount, gstAmount, totalAmount });\n    setQuotationView((prev) => ({\n      ...prev,\n      name: tempData.name,\n      clientCode: tempData.quotation.clientCode,\n      quotationNo: tempData.quotation.number,\n      date: tempData.quotation.date,\n      commodity: tempData.inquiry.form.commodity,\n      noOfPackages: tempData.inquiry.form.numberOfPackages,\n      netWeight: tempData.inquiry.form.netWeight,\n      grossWeight: tempData.quotation.grossWeight,\n      cbm: tempData.quotation.cbm,\n      stackable: tempData.quotation.stackable,\n      incoTerm: tempData.quotation.incoTerm,\n      mode: tempData.quotation.tradeType,\n      pickUpAddress: tempData.inquiry.form.pickUpAddress,\n      pol: tempData.quotation.pol,\n      pod: tempData.quotation.pod,\n      deliveryAddress: tempData.quotation.deliveryAddress,\n      tradeType: tempData.quotation.tradeType,\n      carrier: tempData.quotation.carrier,\n      cutOffDate: tempData.quotation.cutoffDate,\n      etd: tempData.quotation.etd,\n      eta: tempData.quotation.eta,\n      tt: tempData.quotation.tt,\n      overheads: newOverheads,\n      subtotalAmount: subtotalAmount?.toFixed(2),\n      gstAmount: gstAmount?.toFixed(2),\n      totalAmount: totalAmount?.toFixed(2),\n      termsAndConditions: [],\n      clientAddress: tempData.quotation.clientAddress,\n      clientEmail: tempData.quotation.clientEmail,\n      clientGSTNumber: tempData.quotation.clientGSTNumber,\n      clientContactNumber: tempData.quotation.clientContactNumber,\n\n    }));\n\n    setShowQuotation(true);\n  };\n\n  const overheadQuotationViewColumn = [\n    {\n      name: 'Sr. No.',\n      selector: (row, index) => index + 1,\n      center: 'true'\n    },\n    {\n      name: 'Description',\n      selector: (row, index) => row.name,\n    },\n    {\n      name: 'QTY',\n      selector: (row, index) => row.qty,\n      center: 'true'\n    },\n    {\n      name: 'Rate',\n      selector: (row, index) => row.rate,\n      center: 'true'\n    },\n    {\n      name: 'Ex. Rate',\n      selector: (row, index) => row.exRate,\n      center: 'true'\n    },\n    {\n      name: 'Net Total',\n      selector: (row, index) => row.subtotalAmount,\n      center: 'true',\n    },\n    {\n      name: 'GST ( % )',\n      selector: (row, index) => `${row.gst}%`,\n      center: 'true'\n    },\n    {\n      name: 'Amount With GST',\n      selector: (row, index) => row.totalAmount,\n      center: 'true',\n    },\n  ];\n  // const handleExportToPDF = async () => {\n  //   console.log('export');\n  //   setAnchorEl(null);\n  //   const invoice = document.getElementById(\"quotation\");\n\n  //   // Use html2canvas to create a canvas from the invoice content\n  //   const canvas = await html2canvas(invoice);\n\n  //   // Get the canvas data as a URL and add it to the PDF\n  //   const imgData = canvas.toDataURL(\"image/png\");\n\n  //   const doc = new JsPDF('p', 'mm', 'a4');\n  //   doc.addImage(imgData, \"PNG\", 0, 0);\n\n  //   // Download the PDF\n  //   doc.save(\"quotation.pdf\");\n  // };\n\n  const leadColumns = [\n    {\n      name: '#',\n      selector: (row, index) => index + 1,\n      sortable: true,\n      width: '5%',\n    },\n    {\n      name: 'Name',\n      selector: (row) => row.name.toUpperCase(),\n      sortable: true,\n    },\n    {\n      name: 'Status',\n      selector: (row) => {\n        if (!row.quotation || row.quotation.overheads.length === 0) {\n          return 'QUOTATION PENDING';\n        };\n        return row.status;\n      },\n      cell: (row) => {\n        let color;\n        if (!row.quotation || row.quotation.overheads.length === 0) {\n          row.status = 'QUOTATION PENDING';\n        };\n        if (row.status === 'PENDING') {\n          color = 'info';\n        } else if (row.status === 'CONFIRMED') {\n          color = 'success';\n        } else {\n          color = 'error';\n        }\n\n        return (\n          <Label color={color} variant=\"filled\">\n            {row.status}\n          </Label>\n        );\n      },\n      sortable: true,\n      width: 'auto',\n    },\n    {\n      name: 'Created On',\n      selector: (row) => formatDate(row.createdAt),\n      sortable: true,\n    },\n    {\n      name: 'Actions',\n      width: '30%',\n      center: true,\n      cell: (row) => (\n        <>\n\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', gap: '10px' }}>\n\n\n            <Button\n              onClick={(event) => {\n                setAnchorEl(event.currentTarget);\n                setTempData(row);\n              }}\n              color=\"info\"\n              variant=\"outlined\"\n              endIcon={<ArrowDropDownIcon />}\n            >\n              Action\n            </Button>\n            <Button color=\"info\" variant=\"outlined\" startIcon={<AddIcon />} disabled={\n\n              !row.quotation ||\n              row?.quotation?.overheads.length < 1 ||\n              !row.inquiry ||\n              row?.inquiry?.form?.numberOfPackages === null ||\n              row?.inquiry?.form?.numberOfPackages <= 0 ||\n              row.status !== 'CONFIRMED'\n\n            } onClick={() => handleRedirectionToJCPage(row)}>\n              JOB CARD\n            </Button>\n          </div>\n          <Menu\n            id=\"basic-menu\"\n            anchorEl={anchorEl}\n            open={openMenu}\n            onClose={() => {\n              setAnchorEl(null);\n              setTempData({});\n            }}\n            MenuListProps={{\n              'aria-labelledby': 'basic-button',\n            }}\n          >\n            <MenuItem onClick={() => handleEditDetails()}>Edit Details</MenuItem>\n            <MenuItem onClick={() => handleViewQuotation()}>View Quotation</MenuItem>\n            <MenuItem onClick={() => handleDeleteDetails()}>Remove</MenuItem>\n          </Menu>\n        </>\n      ),\n    },\n  ];\n\n\n  const handleDeleteDetails = () => {\n    setLead((prev) => ({ ...prev, id: tempData._id }));\n    setOpenDialog(true);\n    setAnchorEl(null);\n  };\n\n  const handleConfirmDelete = () => {\n\n    const decryptedToken = localStorage.getItem(constants.keyUserToken);\n    const accessToken = decryptToken(decryptedToken);\n    const config = {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    };\n    axios.post(endpoints.lead.delete, { id: lead.id }, config)\n      .then((res) => {\n        if (res) {\n          enqueueSnackbar('Lead deleted successfully!', { variant: 'success' });\n          setOpenDialog(false);\n          handleCancelAllStates();\n          fetchData();\n        };\n      }).catch((err) => {\n        console.log(err);\n        enqueueSnackbar(err.msg || err.error, { variant: 'error' });\n      })\n  };\n\n  const handleEditDetails = () => {\n\n    const localDate = new Date(tempData.meetingScheduleDate);\n    // Extract date components\n    const year = localDate.getFullYear();\n    const month = (localDate.getMonth() + 1).toString().padStart(2, '0'); // Month is zero-based\n    const day = localDate.getDate().toString().padStart(2, '0');\n    const hours = localDate.getHours().toString().padStart(2, '0');\n    const minutes = localDate.getMinutes().toString().padStart(2, '0');\n\n    // Format the date as \"YYYY-MM-DDTHH:mm\"\n    const formattedDate = `${year}-${month}-${day}T${hours}:${minutes}`;\n\n    const localInquiryDate = new Date(tempData.inquiry.date);\n    // Extract date components\n    const yearI = localInquiryDate.getFullYear();\n    const monthI = (localInquiryDate.getMonth() + 1).toString().padStart(2, '0'); // Month is zero-based\n    const dayI = localInquiryDate.getDate().toString().padStart(2, '0');\n    const hoursI = localInquiryDate.getHours().toString().padStart(2, '0');\n    const minutesI = localInquiryDate.getMinutes().toString().padStart(2, '0');\n\n    // Format the date as \"YYYY-MM-DDTHH:mm\"\n    const formattedDateForInquiry = `${yearI}-${monthI}-${dayI}T${hoursI}:${minutesI}`;\n\n    console.log({ tempData });\n    setEditUser(true);\n    setAnchorEl(null);\n    const leadData = {\n      id: tempData._id,\n      name: tempData.name,\n      status: tempData.status,\n      meetingScheduleDate: formattedDate,\n      inquiry: {\n        place: tempData.inquiry.place,\n        date: formattedDateForInquiry,\n        source: tempData.inquiry.source,\n        form: tempData.inquiry.form,\n        number: tempData.inquiry.number\n      },\n    };\n\n    setLead(leadData);\n\n    // IF lead has value of inco then set it to quotation\n    const quot = { ...quotationState };\n    if (leadData.inquiry.form.shipmentTerm) quot.incoTerm = leadData.inquiry.form.shipmentTerm;\n\n    setQuotation(tempData?.quotation ? tempData.quotation : quot);\n    setOpen(true);\n  };\n\n  const handleUpdateData = async () => {\n\n    const decryptedToken = localStorage.getItem(constants.keyUserToken);\n    const accessToken = decryptToken(decryptedToken);\n    axios.post(endpoints.lead.update, lead,\n      {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      })\n      .then((res) => {\n        enqueueSnackbar('Lead updated successfully!', { variant: 'success' });\n        fetchData();\n        handleCancelAllStates();\n        setOpen(false);\n      }).catch((err) => {\n        enqueueSnackbar(err.error || err.msg, { variant: 'error' });\n      })\n\n  };\n\n\n  // Existing Overheads\n  const overheadDetails = [\n    { name: 'Ocean Freight', rate: 20, exRate: 84, qty: 3.67, gst: 18 },\n    { name: 'Destination THC', rate: 1350, exRate: 1, qty: 3.67, gst: 18 },\n    { name: 'D/O Fees', rate: 3800, exRate: 1, qty: 1, gst: 18 },\n    { name: 'Warehouse', rate: 15000, exRate: 1, qty: 1, gst: 18 },\n    { name: 'Agency Charges', rate: 5000, exRate: 1, qty: 1, gst: 18 },\n    { name: 'Loading Unloading', rate: 1000, exRate: 1, qty: 1, gst: 18 },\n    { name: 'Transportation', rate: 18000, exRate: 1, qty: 1, gst: 18 },\n  ];\n\n  const handleAddOverhead = (prevOverhead) => {\n    const newOverhead = {\n      ...prevOverhead,\n      totalAmount: prevOverhead.rate * prevOverhead.exRate * prevOverhead.qty,\n    };\n    setQuotation((prev) => ({ ...prev, overheads: [...prev.overheads, newOverhead] }));\n    setAnchorElForOverhead(null);\n  };\n\n  const handleRedirectionToJCPage = (row) => {\n    // Redirection to Job Card page\n    const routeWithState = { state: row, }\n    navigate(\"/dashboard/create_jobcard\", routeWithState);\n  };\n\n  // Function to handle edit\n  const handleEdit = (index) => {\n    const dimensionToEdit = lead.inquiry.form.dimensions[index];\n    // Set the dimension values to the state for editing\n    setEditDimension({\n      length: dimensionToEdit.length,\n      breadth: dimensionToEdit.breadth,\n      height: dimensionToEdit.height,\n      qty: dimensionToEdit.qty,\n    });\n    // Set the editing index\n    setEditingIndex(index);\n  }\n\n  return (\n    <Container maxWidth={settings.themeStretch ? false : 'xl'}>\n      <Typography variant=\"h4\"> Lead Management </Typography>\n\n      <div style={{ paddingTop: \"10px\", display: \"flex\", justifyContent: \"flex-end\" }}>\n        <Button variant='outlined' color='primary' onClick={handleOpen}>\n          Add Lead\n        </Button>\n\n        <Modal\n          open={open}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n        >\n          <Box sx={style}>\n            <div style={{ height: \"100%\" }}>\n\n              <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                ADD LEAD\n              </Typography>\n\n              <Grid container spacing={2} display='flex' sx={{ pt: 3 }}>\n                <Grid item xs={6} >\n                  <TextField\n                    fullWidth\n                    label='Client Name'\n                    value={lead.name}\n                    onChange={(e) => {\n                      setLead((prev) => ({\n                        ...prev,\n                        name: e.target.value,\n                      }));\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={6} >\n                  <TextField\n                    label=\"Meeting Schedule Date/Time\"\n                    type=\"datetime-local\"\n                    value={lead.meetingScheduleDate}\n                    onChange={(e) => {\n                      setLead((prev) => ({ ...prev, meetingScheduleDate: e.target.value }));\n                    }}\n                    fullWidth\n                    required\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  // InputProps={{\n                  //   inputProps: {\n                  //     min: new Date().toISOString().slice(0, 16),\n                  //   }, // optional: set min value to current datetime\n                  //   endAdornment: (\n                  //     <InputAdornment position=\"end\">\n                  //       {/* UTC */}\n                  //     </InputAdornment>\n                  //   ),\n                  // }}\n                  />\n                  {/* <LocalizationProvider dateAdapter={AdapterDayjs}>\n                  <DateTimePicker\n                    label=\"Meeting Schedule Date/Time\"\n                    onChange={(newValue) => {\n                      setLead((prev) => ({ ...prev, meetingScheduleDate: new Date(newValue) }));\n                    }}\n                  />\n                </LocalizationProvider> */}\n                </Grid>\n\n                <Grid item xs={4}>\n                  <TextField\n                    fullWidth\n                    label='Meeting Place'\n                    value={lead.inquiry.place}\n                    onChange={(e) => {\n                      setLead((prev) => ({\n                        ...prev,\n                        inquiry: {\n                          ...prev.inquiry,\n                          place: e.target.value,\n                        },\n                      }));\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={4}>\n\n                  <TextField\n                    label=\"Inquiry Date/Time\"\n                    type=\"datetime-local\"\n                    value={lead.inquiry.date}\n                    onChange={(e) => {\n                      setLead((prev) => ({\n                        ...prev, inquiry: {\n                          ...prev.inquiry,\n                          date: e.target.value,\n                        }\n                      }));\n                    }}\n                    fullWidth\n                    required\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  />\n\n\n                </Grid>\n\n                <Grid item xs={4}>\n                  <TextField\n                    fullWidth\n                    label='Inquiry Source'\n                    value={lead.inquiry.source}\n                    onChange={(e) => {\n                      setLead((prev) => ({\n                        ...prev,\n                        inquiry: {\n                          ...prev.inquiry,\n                          source: e.target.value,\n                        },\n                      }));\n                    }}\n                  />\n                </Grid>\n\n                <Grid item xs={6} >\n                  <Button startIcon={<AddIcon />} variant='outlined' fullWidth onClick={() => {\n                    setInquiryForm(true);\n\n                    if (!editUser) {\n                      setLead((prev) => ({\n                        ...prev,\n                        inquiry: {\n                          ...prev.inquiry,\n                          number: `MI${new Date().getTime()}`\n                        }\n                      }));\n                    }\n                  }}>\n                    Add Inquiry form\n                  </Button>\n                </Grid>\n\n                <Grid item xs={6}>\n                  <Button startIcon={<AddIcon />} fullWidth variant='outlined' onClick={() => {\n                    setQuotationModal(true);\n                    setQuotation((prev) => ({\n                      ...prev,\n                      number: quotation?.number ? quotation.number : `MQ${new Date().getTime()}`,\n                      date: formattedDateForComp(new Date()),\n                    }))\n                  }}>\n                    ADD Quotation\n                  </Button>\n                </Grid>\n\n\n                <Grid item xs={12}>\n                  <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      value={lead.status}\n                      label=\"Status\"\n                      onChange={(e) => {\n                        setLead((prev) => ({ ...prev, status: e.target.value }));\n                      }}\n                    >\n                      <MenuItem value='PENDING'>Pending</MenuItem>\n                      <MenuItem value='CONFIRMED'>Confirm</MenuItem>\n                      <MenuItem value='CANCELED'>Cancel</MenuItem>\n                    </Select>\n                  </FormControl>\n                </Grid>\n              </Grid>\n\n              <div style={{ paddingTop: \"10px\", display: \"flex\", flexDirection: \"row\", justifyContent: \"flex-end\", gap: \"10px\" }}>\n                <Button variant='outlined' color='primary' onClick={editUser ? handleUpdateData : handleAddLead}>\n                  {\n                    editUser ?\n                      'Update Lead' : 'Save Lead'\n                  }\n                </Button>\n                <Button variant='outlined' color='error' onClick={() => {\n                  handleClose();\n                  setQuotation(quotationState);\n                  setLead({\n                    id: '',\n                    name: '',\n                    meetingScheduleDate: null,\n                    inquiry: {\n                      number: '',\n                      source: '',\n                      place: '',\n                      date: null,\n                      form: inquiryFormState\n                    },\n                    quotation: {},\n                    status: ''\n                  });\n                }}>\n                  Cancel\n                </Button>\n              </div>\n            </div>\n\n          </Box>\n        </Modal>\n\n        {/* Inquiry Form */}\n        <Modal\n          open={inquiryForm}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n        >\n          <Box sx={style}>\n            <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n              Inquiry Form\n            </Typography>\n\n            <div style={{ maxHeight: \"500px\", overflow: 'auto', paddingTop: \"20px\" }}>\n\n              <Grid container spacing={2}>\n                <Grid item xs={6}>\n                  <TextField fullWidth\n                    disabled\n                    label='INQUIRY NO.'\n                    value={lead.inquiry.number} />\n                </Grid>\n\n                <Grid item xs={6}>\n                  <TextField fullWidth label='COMMODITY' value={lead.inquiry.form.commodity} onChange={(e) => handleInputChange('commodity', e.target.value)} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth label='HS CODE' value={lead.inquiry.form.hsCode} onChange={(e) => handleInputChange('hsCode', e.target.value)} />\n                </Grid>\n                <Grid item xs={6}>\n                  <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">SHIPMENT TERM</InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      value={lead.inquiry.form.shipmentTerm}\n                      label=\"SHIPMENT TERM\"\n                      onChange={\n                        (e) => {\n                          handleInputChange('shipmentTerm', e.target.value);\n                          setQuotation((prev) => ({ ...prev, incoTerm: e.target.value }));\n                        }\n                      }\n                    >\n                      <MenuItem value='EXW'>EXW (Ex. Works)</MenuItem>\n                      <MenuItem value='FCA'>FCA (Free Carrier)</MenuItem>\n                      <MenuItem value='FAS'>FAS (Free Alongside Ship)</MenuItem>\n                      <MenuItem value='FOB'>FOB (Free On Board)</MenuItem>\n                      <MenuItem value='CFR'>CFR (Cost & Freight)</MenuItem>\n                      <MenuItem value='CIF'>CIF (Cost, Insurance & Freight)</MenuItem>\n                      <MenuItem value='CPT'>CPT (Carriage Paid To)</MenuItem>\n                      <MenuItem value='CIP'>CIP (Carriage & Insurance Paid to)</MenuItem>\n                      <MenuItem value='DAP'>DAP (Delivered At Place)</MenuItem>\n                      <MenuItem value='DPU'>DPU (Delivered At Place Unloaded)</MenuItem>\n                      <MenuItem value='DDP'>DDP (Delivered Duty Paid)</MenuItem>\n                      <MenuItem value='DDU'>DDU (Delivered Duty Unpaid)</MenuItem>\n                      <MenuItem value=\"C&F\">C&F (Cost & Freight )</MenuItem>\n                    </Select>\n                  </FormControl>\n\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth label='MODE' value={lead.inquiry.form.mode} onChange={(e) => {\n                    handleInputChange('mode', e.target.value);\n                    setQuotation((prev) => ({ ...prev, tradeType: e.target.value }));\n                  }} />\n                </Grid>\n                <Grid item xs={6}>\n                  <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">TYPE OF PACKING</InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      value={lead.inquiry.form.typeOfPacking}\n                      label=\"TYPE OF PACKING\"\n                      onChange={\n                        (e) => {\n                          handleInputChange('typeOfPacking', e.target.value);\n                          setQuotation((prev) => ({ ...prev, cargoType: e.target.value }));\n\n                        }\n                      }\n                    >\n                      <MenuItem value='Wooden Box'>Wooden Box</MenuItem>\n                      <MenuItem value='Wooden Crate Box'>Wooden Crate Box</MenuItem>\n                      <MenuItem value='Corrugated Box'>Corrugated Box</MenuItem>\n                      <MenuItem value='Palette'>Palette</MenuItem>\n                      <MenuItem value='Loose'>Loose</MenuItem>\n                      <MenuItem value='Others'>Others</MenuItem>\n                    </Select>\n                  </FormControl>\n\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth label='NUMBER OF PACKAGES' type='number' value={lead.inquiry.form.numberOfPackages} onChange={(e) => handleInputChange('numberOfPackages', e.target.value)} />\n                </Grid>\n                <Grid item xs={12} display='flex' justifyContent='flex-end'>\n                  <Button startIcon={<AddIcon />} variant='contained' color='primary' onClick={() => {\n                    if (dimension.qty === null || dimension.length === null || dimension.breadth === null || dimension.height === null) {\n                      enqueueSnackbar('Please fill all the fields!!', { variant: 'error' })\n                      return;\n                    };\n\n                    // Check if the values are greater than 0\n                    if (\n                      dimension.qty <= 0 ||\n                      dimension.length <= 0 ||\n                      dimension.breadth <= 0 ||\n                      dimension.height <= 0\n                    ) {\n                      enqueueSnackbar('Please enter values greater than 0 for Qty, Length, Breadth, and Height!', { variant: 'error' });\n                      return;\n                    }\n\n                    // Calculate totalAmount and create a new overhead object\n                    const newDimension = {\n                      ...dimension,\n                    };\n\n                    setLead((prev) => ({ ...prev, inquiry: { ...prev.inquiry, form: { ...prev.inquiry.form, dimensions: [...prev.inquiry.form.dimensions, newDimension] } } }));\n                    setDimension({\n                      length: '',\n                      breadth: '',\n                      height: '',\n                      qty: '',\n                    });\n                  }} disabled={\n                    !dimension.qty ||\n                    !dimension.length ||\n                    !dimension.breadth ||\n                    !dimension.height\n                  }>\n                    ADD\n                  </Button>\n                </Grid>\n                <Grid item xs={3}>\n                  <TextField fullWidth type='number' label='QTY' value={dimension.qty} onChange={(e) => handleDimensionChange('qty', e.target.value)} />\n                </Grid>\n                <Grid item xs={3}>\n                  <TextField fullWidth type='number' label='LENGTH' placeholder='in cm' value={dimension.length} onChange={(e) => handleDimensionChange('length', e.target.value)} />\n                </Grid>\n                <Grid item xs={3}>\n                  <TextField fullWidth type='number' label='BREADTH' placeholder='in cm' value={dimension.breadth} onChange={(e) => handleDimensionChange('breadth', e.target.value)} />\n                </Grid>\n                <Grid item xs={3}>\n                  <TextField fullWidth type='number' label='HEIGHT' placeholder='in cm' value={dimension.height} onChange={(e) => handleDimensionChange('height', e.target.value)} />\n                </Grid>\n\n                {\n                  lead.inquiry.form.dimensions.length > 0 &&\n                  <Grid item xs={12} sx={{ p: 4 }}>\n                    Dimensions\n                    <DataTable\n                      data={lead.inquiry.form.dimensions}\n                      columns={[\n                        {\n                          name: 'Qty',\n                          selector: (row, index) => row.qty,\n                          cell: (row, index) => (\n                            <div>\n                              {editingIndex === index ? (\n                                <TextField\n                                  size='small'\n                                  type='number'\n                                  value={editDimension.qty}\n                                  onChange={(e) => handleEditDimensionChange('qty', e.target.value)}\n                                />\n                              ) : (\n                                row.qty\n                              )}\n                            </div>\n                          ),\n                        },\n                        {\n                          name: 'Length (cm)',\n                          selector: (row, index) => row.length,\n                          cell: (row, index) => (\n                            <div>\n                              {editingIndex === index ? (\n                                <TextField\n                                  size='small'\n                                  type='number'\n                                  value={editDimension.length}\n                                  onChange={(e) => handleEditDimensionChange('length', e.target.value)}\n                                />\n                              ) : (\n                                row.length\n                              )}\n                            </div>\n                          ),\n                        },\n                        {\n                          name: 'Breadth (cm)',\n                          selector: (row, index) => row.breadth,\n                          cell: (row, index) => (\n                            <div>\n                              {editingIndex === index ? (\n                                <TextField\n                                  size='small'\n                                  type='number'\n                                  value={editDimension.breadth}\n                                  onChange={(e) => handleEditDimensionChange('breadth', e.target.value)}\n                                />\n                              ) : (\n                                row.breadth\n                              )}\n                            </div>\n                          ),\n                        },\n                        {\n                          name: 'Height (cm)',\n                          selector: (row, index) => row.height,\n                          cell: (row, index) => (\n                            <div>\n                              {editingIndex === index ? (\n                                <TextField\n                                  size='small'\n                                  type='number'\n                                  value={editDimension.height}\n                                  onChange={(e) => handleEditDimensionChange('height', e.target.value)}\n                                />\n                              ) : (\n                                row.height\n                              )}\n                            </div>\n                          ),\n                        },\n                        {\n                          name: 'Action',\n                          width: '10%',\n                          cell: (row, index) => (\n                            <>\n                              {\n                                editingIndex === index ?\n                                  (\n                                    <>\n                                      <IconButton color='success' onClick={() => {\n                                        const editedDimension = {\n                                          length: editDimension.length,\n                                          breadth: editDimension.breadth,\n                                          height: editDimension.height,\n                                          qty: editDimension.qty,\n                                        };\n                                        const updatedDimensions = [...lead.inquiry.form.dimensions];\n                                        updatedDimensions[editingIndex] = editedDimension;\n                                        setLead((prev) => ({ ...prev, inquiry: { ...prev.inquiry, form: { ...prev.inquiry.form, dimensions: updatedDimensions } } }));\n                                        // Reset dimension state and editing index\n                                        setEditDimension({\n                                          length: '',\n                                          breadth: '',\n                                          height: '',\n                                          qty: '',\n                                        });\n                                        setEditingIndex(null);\n                                      }}>\n                                        <SaveIcon color='success' />\n                                      </IconButton>\n                                      <IconButton onClick={() => {\n                                        setEditDimension({\n                                          length: '',\n                                          breadth: '',\n                                          height: '',\n                                          qty: '',\n                                        });\n                                        setEditingIndex(null);\n                                      }} color='error'>\n                                        <CancelIcon color='error' />\n                                      </IconButton>\n                                    </>\n                                  )\n                                  : (\n                                    <>\n                                      <IconButton onClick={() => handleEdit(index)}>\n                                        <EditIcon color='primary' />\n                                      </IconButton>\n                                      <IconButton onClick={() => {\n                                        const newDimensions = lead.inquiry.form.dimensions.filter((_, i) => i !== index);\n                                        setLead((prev) => ({ ...prev, inquiry: { ...prev.inquiry, form: { ...prev.inquiry.form, dimensions: newDimensions } } }));\n                                      }}>\n                                        <DeleteIcon color='error' />\n                                      </IconButton>\n                                    </>\n                                  )}\n\n                            </>\n\n                          )\n\n                        },\n                      ]}\n                    />\n                  </Grid>\n                }\n                <Grid item xs={6}>\n                  <TextField fullWidth label='NET WEIGHT' type='number' placeholder='in kgs' value={lead.inquiry.form.netWeight} onChange={(e) => handleInputChange('netWeight', e.target.value)} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth label='GROSS WEIGHT' type='number' placeholder='in kgs' value={lead.inquiry.form.grossWeight} onChange={(e) => {\n                    handleInputChange('grossWeight', e.target.value);\n                    setQuotation((prev) => ({ ...prev, grossWeight: e.target.value }));\n                  }}\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth label='PICKUP ADDRESS' value={lead.inquiry.form.pickUpAddress} onChange={(e) => handleInputChange('pickUpAddress', e.target.value)} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth\n                    type='number'\n                    label='PICKUP PIN/ZIP CODE'\n                    required\n                    // inputProps={{maxLength: 2}}\n                    value={lead.inquiry.form.pickUpAddressCode} onChange={(e) => handleInputChange('pickUpAddressCode', e.target.value)} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth label='DELIVERY ADDRESS' value={lead.inquiry.form.deliveryAddress} onChange={(e) => {\n                    handleInputChange('deliveryAddress', e.target.value);\n                    setQuotation((prev) => ({ ...prev, deliveryAddress: e.target.value }));\n                  }} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth\n                    type='number'\n                    label='DELIVERY PIN/ZIP CODE'\n                    // inputProps={{maxLength: 9}}\n                    required\n                    value={lead.inquiry.form.deliveryAddressCode} onChange={(e) => {\n                      handleInputChange('deliveryAddressCode', e.target.value);\n                    }} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth label='PORT OF LOADING (POL)' value={lead.inquiry.form.portOfLoading} onChange={(e) => {\n                    handleInputChange('portOfLoading', e.target.value);\n                    setQuotation((prev) => ({ ...prev, pol: e.target.value }));\n                  }} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth label='PORT OF DISCHARGE (POD)' value={lead.inquiry.form.portOfDischarge} onChange={(e) => {\n                    handleInputChange('portOfDischarge', e.target.value);\n                    setQuotation((prev) => ({ ...prev, pod: e.target.value }));\n                  }} />\n                </Grid>\n              </Grid>\n            </div>\n\n            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignItems: 'center', padding: '10px', gap: '10px' }}>\n              <Button color='primary' variant='outlined' onClick={() => {\n\n                if (!/^[a-zA-Z0-9_.-]*$/.test(lead.inquiry.form.hsCode)) {\n                  enqueueSnackbar('Special Characters are not allowed in HS Code !!', { variant: 'error' });\n                  return;\n                }\n                if (!lead.inquiry.form.pickUpAddressCode\n                  // !lead.inquiry.form.deliveryAddressCode\n                ) {\n                  enqueueSnackbar('Please fill pickup zipcode !!', { variant: 'error' });\n                  return;\n                };\n\n                if (!lead.inquiry.form.deliveryAddressCode\n                  // !lead.inquiry.form.deliveryAddressCode\n                ) {\n                  enqueueSnackbar('Please fill delivery zipcode!!', { variant: 'error' });\n                  return;\n                };\n                // TODO Once all fields are done\n                setInquiryForm(false);\n              }} >\n                Save Inquiry\n              </Button>\n              <Button color='error' variant='contained' onClick={() => {\n                // TODO reset all fields and then\n                setInquiryForm(false);\n\n              }}>\n                Cancel\n              </Button>\n            </div>\n          </Box>\n        </Modal>\n\n        {/* Quotation */}\n        <Modal\n          open={quotationModal}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n        >\n          <Box sx={style}>\n            <Typography id=\"modal-modal-title\" variant=\"h5\" component=\"h2\">\n              Quotation\n            </Typography>\n\n            <div style={{ maxHeight: \"500px\", overflow: 'auto', padding: \"20px\" }}>\n\n              <Grid container spacing={2}>\n                <Grid item xs={6}>\n                  <TextField fullWidth\n                    disabled\n                    label='QUOTE NO.'\n                    value={quotation.number} />\n                </Grid>\n\n                <Grid item xs={6}>\n                  <TextField fullWidth label='INCO TERM' value={quotation.incoTerm} disabled />\n                </Grid>\n                <Grid item xs={6}>\n                  <FormControl fullWidth required >\n                    <InputLabel id=\"demo-simple-select-label\">CARGO TYPE</InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      value={quotation.cargoType}\n                      label=\"CARGO TYPE\"\n                      onChange={(e) => setQuotation((prev) => ({ ...prev, cargoType: e.target.value }))}\n                    >\n                      <MenuItem value='Wooden Box'>Wooden Box</MenuItem>\n                      <MenuItem value='Wooden Crate Box'>Wooden Crate Box</MenuItem>\n                      <MenuItem value='Corrugated Box'>Corrugated Box</MenuItem>\n                      <MenuItem value='Palette'>Palette</MenuItem>\n                      <MenuItem value='Loose'>Loose</MenuItem>\n                      <MenuItem value='Others'>Others</MenuItem>\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth label='GROSS WEIGHT' type='number' required value={quotation.grossWeight} onChange={(e) => {\n                    setQuotation((prev) => ({ ...prev, grossWeight: e.target.value }));\n                  }} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth required label='POL' value={quotation.pol} onChange={(e) => {\n                    setQuotation((prev) => ({ ...prev, pol: e.target.value }));\n                  }} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth required label='POD' value={quotation.pod} onChange={(e) => {\n                    setQuotation((prev) => ({ ...prev, pod: e.target.value }));\n                  }} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth label='TRADE TYPE' value={quotation.tradeType} onChange={(e) => {\n                    setQuotation((prev) => ({ ...prev, tradeType: e.target.value }));\n                  }} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth label='Delivery Address' value={quotation.deliveryAddress} onChange={(e) => {\n                    setQuotation((prev) => ({ ...prev, deliveryAddress: e.target.value }));\n                  }} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth required label='CLIENT CODE' value={quotation.clientCode} onChange={(e) => {\n                    setQuotation((prev) => ({ ...prev, clientCode: e.target.value }));\n                  }} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth type='number' label='CHARGABLE WEIGHT/CBM' required value={quotation.cbm} onChange={(e) => {\n                    setQuotation((prev) => ({ ...prev, cbm: e.target.value }));\n                  }} />\n                </Grid>\n                <Grid item xs={6}>\n                  <FormControl fullWidth>\n                    <InputLabel id=\"demo-simple-select-label\">Stackable</InputLabel>\n                    <Select\n                      labelId=\"demo-simple-select-label\"\n                      id=\"demo-simple-select\"\n                      value={quotation.stackable}\n                      label=\"Stackable\"\n                      onChange={(e) => {\n                        setQuotation((prev) => ({ ...prev, stackable: e.target.value }));\n                      }}\n                    >\n                      <MenuItem value='YES'>YES</MenuItem>\n                      <MenuItem value='NO'>NO</MenuItem>\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth label='CARRIER NAME' required value={quotation.carrier} onChange={(e) => {\n                    setQuotation((prev) => ({ ...prev, carrier: e.target.value }));\n                  }} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField\n                    label=\"Cut Off Date\"\n                    type=\"datetime-local\"\n                    value={quotation.cutoffDate}\n                    onChange={(e) => {\n                      setQuotation((prev) => ({ ...prev, cutoffDate: e.target.value }));\n                    }}\n                    fullWidth\n                    required\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField\n                    label=\"ESTIMATED TIME OF DEPARTURE (ETD)\"\n                    type=\"datetime-local\"\n                    value={quotation.etd}\n                    onChange={(e) => {\n                      setQuotation((prev) => ({ ...prev, etd: e.target.value }));\n                    }}\n                    fullWidth\n                    required\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField\n                    label=\"ESTIMATED TIME OF ARRIVAL (ETA)\"\n                    type=\"datetime-local\"\n                    value={quotation.eta}\n                    onChange={(e) => {\n                      setQuotation((prev) => ({ ...prev, eta: e.target.value }));\n                    }}\n                    fullWidth\n                    required\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth label='TRANSIT TIME (TT)' placeholder='Number In Days (e.g. 2)' value={quotation.tt} onChange={(e) => {\n                    setQuotation((prev) => ({ ...prev, tt: e.target.value }));\n                  }} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth label='CLIENT ADDRESS' value={quotation.clientAddress} onChange={(e) => {\n                    setQuotation((prev) => ({ ...prev, clientAddress: e.target.value }));\n                  }} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth type='number' label='CLIENT CONTACT NUMBER' value={quotation.clientContactNumber} onChange={(e) => {\n                    setQuotation((prev) => ({ ...prev, clientContactNumber: e.target.value }));\n                  }} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth label='CLIENT EMAIL' required value={quotation.clientEmail} onChange={(e) => {\n                    setQuotation((prev) => ({ ...prev, clientEmail: e.target.value }));\n                  }} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField fullWidth\n                    inputProps={{\n                      maxLength: 15,\n                    }}\n                    label='CLIENT GST NUMBER' value={quotation.clientGSTNumber} onChange={(e) => {\n                      setQuotation((prev) => ({ ...prev, clientGSTNumber: e.target.value }));\n                    }} />\n                </Grid>\n                <Grid item xs={6}>\n                  <TextField\n                    label=\"QUOTATION DATE\"\n                    type=\"datetime-local\"\n                    value={quotation.date}\n                    onChange={(e) => {\n                      setQuotation((prev) => ({ ...prev, date: e.target.value }));\n                    }}\n                    fullWidth\n                    required\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} display='flex' justifyContent='space-between' >\n                  <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                    ADD OVERHEADS\n                  </Typography>\n                  <Button variant='contained' color='primary' startIcon={<AddIcon />} onClick={\n                    (event) => {\n                      setAnchorElForOverhead(event.currentTarget);\n                    }}>ADD EXISTING OVERHEAD</Button>\n                  <Menu\n                    id=\"basic-menu\"\n                    anchorEl={anchorElForOverhead}\n                    open={openForOverhead}\n                    onClose={() => setAnchorElForOverhead(null)}\n                    MenuListProps={{ 'aria-labelledby': 'basic-button' }}\n                  >\n                    {overheadDetails.map((ovData, index) => (\n                      <MenuItem key={index} onClick={() => handleAddOverhead(ovData)}>\n                        {ovData.name}\n                      </MenuItem>\n                    ))}\n                  </Menu>\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField fullWidth label='Overhead Name' value={overhead.name} onChange={(e) => {\n                    setOverHead((prev) => ({ ...prev, name: e.target.value }));\n                  }} />\n                </Grid>\n                <Grid item xs={3}>\n                  <TextField fullWidth label='Rate' type='number' value={overhead.rate} onChange={(e) => {\n                    setOverHead((prev) => ({ ...prev, rate: e.target.value }));\n                  }} />\n                </Grid>\n                <Grid item xs={3}>\n                  <TextField fullWidth label='Ex. Rate' type='number' value={overhead.exRate} onChange={(e) => {\n                    setOverHead((prev) => ({ ...prev, exRate: e.target.value }));\n                  }} />\n                </Grid>\n                <Grid item xs={3}>\n                  <TextField fullWidth label='GST' type='number' value={overhead.gst} onChange={(e) => {\n                    setOverHead((prev) => ({ ...prev, gst: e.target.value }));\n                  }} />\n                </Grid>\n                <Grid item xs={3}>\n                  <TextField fullWidth label='Quantity' type='number' value={overhead.qty} onChange={(e) => {\n                    setOverHead((prev) => ({ ...prev, qty: e.target.value }));\n                  }} />\n                </Grid>\n\n                <Grid item xs={12} display='flex' flexDirection='row' justifyContent='flex-end'>\n                  <Button variant='contained' color='primary' startIcon={<AddIcon />} onClick={\n                    () => {\n                      if (overhead.name === '' || overhead.rate === null || overhead.exRate === null || overhead.qty === null\n                        // || overhead.gst === null || overhead.gst === ''\n                      ) {\n                        enqueueSnackbar('Please fill all the fields!!', { variant: 'error' })\n                        return;\n                      };\n                      // Check if the values are greater than 0\n                      if (\n                        overhead.rate <= 0 ||\n                        overhead.exRate <= 0 ||\n                        overhead.qty <= 0\n                      ) {\n                        enqueueSnackbar('Please enter values greater than 0 for Rate, Ex. Rate, and Quantity!', { variant: 'error' });\n                        return;\n                      }\n\n                      // Calculate totalAmount and create a new overhead object\n                      const newOverhead = {\n                        ...overhead,\n                        totalAmount: overhead.rate * overhead.exRate * overhead.qty,\n                      };\n                      setQuotation((prev) => ({ ...prev, overheads: [...prev.overheads, newOverhead] }));\n                      setOverHead({\n                        name: '',\n                        rate: '',\n                        exRate: '',\n                        qty: '',\n                        gst: '',\n                        totalAmount: 0\n                      });\n                    }\n                  }>ADD OVERHEAD</Button>\n                </Grid>\n\n\n                {\n                  quotation?.overheads?.length > 0 &&\n\n                  <>\n                    <Grid item xs={12} sx={{ p: 2 }}>\n                      <DataTable\n                        columns={overheadColumns}\n                        data={quotation.overheads}\n                      />\n                    </Grid>\n                    <Grid item xs={12} sx={{ p: 2 }}>\n                      <Typography variant=\"caption\" display=\"block\" gutterBottom> Note: GST Will be applicable as per standards.</Typography>\n                    </Grid>\n\n                    <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'flex-end', flexDirection: 'row' }}>\n                      <Typography variant='h6' sx={{ mr: 2 }}>\n                        Total Amount:\n                      </Typography>\n                      <Typography variant='h6'>\n                        {\n                          quotation.overheads.reduce((acc, curr) => acc + curr.totalAmount, 0).toFixed(2)\n                        }\n                      </Typography>\n                    </Grid>\n                  </>\n                }\n\n\n              </Grid>\n            </div>\n\n            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'flex-end', alignItems: 'center', padding: '10px', gap: '10px' }}>\n              <Button color='primary' variant='outlined' onClick={() => {\n                // TODO Once all fields are done\n                if (\n                  !quotation.clientCode ||\n                  !quotation.cargoType ||\n                  !quotation.pol ||\n                  !quotation.pod ||\n                  !quotation.grossWeight ||\n                  !quotation.cbm ||\n                  !quotation.clientEmail ||\n                  !quotation.carrier ||\n                  quotation.overheads.length === 0\n                ) {\n                  enqueueSnackbar('Please fill all the fields!!', { variant: 'error' });\n                  return;\n                };\n                // Add the quote to the lead state\n                const tempLead = { ...lead };\n                tempLead.quotation = quotation;\n                setLead(tempLead);\n\n                setQuotationModal(false);\n              }} >\n                Save Quotation\n              </Button>\n              <Button color='error' variant='contained' onClick={() => {\n                // TODO reset all fields and then\n                setQuotationModal(false);\n                setOverHead({\n                  name: '',\n                  rate: null,\n                  exRate: null,\n                  qty: null,\n                  totalAmount: 0\n                })\n              }}>\n                Cancel\n              </Button>\n            </div>\n          </Box>\n        </Modal>\n      </div>\n\n      <div style={{ marginTop: \"20px\" }}>\n        <DataTable\n          columns={leadColumns}\n          data={leads}\n          pagination\n          progressPending={isLeadLoading}\n        />\n      </div>\n\n      <Modal\n        open={showQuotation}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={styleForQuotation}>\n          <div style={{ height: \"100%\" }}>\n\n            <div ref={componentRef} id='quotation' style={{ height: \"98%\" }}>\n              <Grid container sx={{ overflowX: 'auto', maxHeight: \"100%\", border: \"1px solid black\" }} >\n                <Grid item xs={12} sx={{ backgroundColor: \"#00308F\", p: 1 }} display='flex' justifyContent='space-around'>\n                  <Typography variant=\"h5\" gutterBottom sx={{ color: \"white\", }}> QUOTATION</Typography>\n                </Grid>\n                <Grid item xs={12} sx={{ backgroundColor: \"#B9D9EB\", p: 1 }} display='flex' justifyContent='space-around' >\n                  <Typography variant=\"h3\" gutterBottom sx={{ fontSize: \"20px\" }}>MERIDIAN LOGISTICS SOLUTIONS</Typography>\n                </Grid>\n                <Grid item xs={6} container sx={{ p: 1 }}>\n\n                  <Grid item xs={12} display='flex' justifyContent='space-between'>\n                    <Grid item >\n                      <Typography variant=\"body1\" gutterBottom >\n                        CLIENT NAME :\n                      </Typography>\n                    </Grid>\n                    <Grid item >\n                      <Typography variant=\"body2\" gutterBottom >\n                        {quotationView.name}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={12} display='flex' justifyContent='space-between'>\n                    <Grid item >\n                      <Typography variant=\"body1\" gutterBottom >\n                        CLIENT CODE :\n                      </Typography>\n                    </Grid>\n                    <Grid item >\n                      <Typography variant=\"body2\" gutterBottom >\n                        {quotationView.clientCode ?? 'N/A'}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={12} display='flex' justifyContent='space-between'>\n                    <Grid item >\n                      <Typography variant=\"body1\" gutterBottom >\n                        ADDRESS :\n                      </Typography>\n\n                    </Grid>\n                    <Grid item >\n                      <Typography variant=\"body2\" gutterBottom >\n                        {quotationView.clientAddress ? quotationView.clientAddress : 'N/A'}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={12} display='flex' justifyContent='space-between'>\n                    <Grid item >\n                      <Typography variant=\"body1\" gutterBottom >\n                        GSTIN :\n                      </Typography>\n                    </Grid>\n                    <Grid item >\n                      <Typography variant=\"body2\" gutterBottom >\n                        {quotationView.clientGSTNumber ? quotationView.clientGSTNumber : 'N/A'}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={12} display='flex' justifyContent='space-between'>\n                    <Grid item >\n                      <Typography variant=\"body1\" gutterBottom >\n                        CONTACT NUMBER :\n                      </Typography>\n\n                    </Grid>\n                    <Grid item >\n                      <Typography variant=\"body2\" gutterBottom >\n                        {quotationView.clientContactNumber ? quotationView.clientContactNumber : 'N/A'}\n                      </Typography>\n\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={12} display='flex' justifyContent='space-between'>\n                    <Grid item >\n                      <Typography variant=\"body1\" gutterBottom >\n                        EMAIL :\n                      </Typography>\n                    </Grid>\n                    <Grid item >\n                      <Typography variant=\"body2\" gutterBottom >\n                        {quotationView.clientEmail ? quotationView.clientEmail : 'N/A'}\n                      </Typography>\n\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={12} display='flex' justifyContent='space-between'>\n                    <Grid item >\n                      <Typography variant=\"body1\" gutterBottom >\n                        QUOTATION NO :\n                      </Typography>\n                    </Grid>\n                    <Grid item >\n                      <Typography variant=\"body2\" gutterBottom >\n                        {quotationView.quotationNo ? quotationView.quotationNo : 'N/A'}\n                      </Typography>\n\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={12} display='flex' justifyContent='space-between'>\n                    <Grid item >\n                      <Typography variant=\"body1\" gutterBottom >\n                        DATE :\n                      </Typography>\n                    </Grid>\n                    <Grid item >\n                      <Typography variant=\"body2\" gutterBottom >\n                        {quotationView.date ? formatDate(quotationView.date) : 'N/A'}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item xs={6} display='flex' justifyContent='flex-end'>\n                  <img\n                    // style={{ width: \"100px\", height: \"100px\" }}\n                    src=\"/logo/logo_single.png\" // Replace with the path to your logo.png file\n                    alt=\"Logo\"\n                    className={{ width: '100%', height: '100%', objectFit: 'cover' }}\n                  />\n                </Grid>\n                <Grid item xs={12} sx={{ backgroundColor: \"#00308F\", p: 0.1 }} display='flex' justifyContent='space-around'>\n                  <Typography gutterBottom sx={{ color: \"#00308F\" }}> QUOTATION</Typography>\n                </Grid>\n\n                {/*   All Details  */}\n                <Grid container display='flex' justifyContent='space-between' flexDirection='row' sx={{ p: 1 }}>\n\n                  <Grid item xs={3} container >\n\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          COMMODITY :\n                        </Typography>\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.commodity ?? 'N/A'}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          NO. OF PACKAGES :\n                        </Typography>\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.noOfPackages ?? 'N/A'}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          NET WEIGHT :\n                        </Typography>\n\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.netWeight ?? 'N/A'}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          GROSS WEIGHT :\n                        </Typography>\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.grossWeight ?? 'N/A'}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          CH. WT./ CBM :\n                        </Typography>\n\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.cbm ?? 'N/A'}\n                        </Typography>\n\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          STACKABLE :\n                        </Typography>\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.stackable ?? 'N/A'}\n                        </Typography>\n\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <Grid item xs={3} container >\n\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          INCO TERM :\n                        </Typography>\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.incoTerm ?? 'N/A'}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          MODE :\n                        </Typography>\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.mode ?? 'N/A'}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          PICK UP :\n                        </Typography>\n\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.pickUpAddress ?? 'N/A'}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          POL :\n                        </Typography>\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.pol ?? 'N/A'}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          POD :\n                        </Typography>\n\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.pod ?? 'N/A'}\n                        </Typography>\n\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          DELIVERY :\n                        </Typography>\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.deliveryAddress ?? 'N/A'}\n                        </Typography>\n\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <Grid item xs={3} container  >\n\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          TRADE TYPE :\n                        </Typography>\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.tradeType ?? 'N/A'}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          CARRIER :\n                        </Typography>\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.carrier ?? 'N/A'}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          CUT OFF :\n                        </Typography>\n\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.cutOffDate ? formatDate(quotationView.cutOffDate) : 'N/A'}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          ESTIMATED TIME OF DEPARTURE :\n                        </Typography>\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.etd ? formatDate(quotationView.etd) : 'N/A'}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          ESTIMATED TIME OF ARRIVAL :\n                        </Typography>\n\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.eta ? formatDate(quotationView.eta) : 'N/A'}\n                        </Typography>\n\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          TRANSIT TIME :\n                        </Typography>\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.tt ? `${quotationView.tt} Days` : 'N/A'}\n                        </Typography>\n\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n\n\n                <Grid item xs={12} sx={{ backgroundColor: \"#00308F\", p: 0.1 }} display='flex' justifyContent='space-around'>\n                  <Typography gutterBottom sx={{ color: \"#00308F\" }}> QUOTATION</Typography>\n                </Grid>\n\n                <Grid item xs={12} sx={{ p: 1 }}>\n                  <DataTable\n                    columns={overheadQuotationViewColumn}\n                    data={quotationView.overheads}\n                  />\n                </Grid>\n\n                <Grid item xs={12} sx={{ backgroundColor: \"#00308F\", p: 0.1 }} display='flex' justifyContent='space-around'>\n                  <Typography gutterBottom sx={{ color: \"#00308F\" }}> QUOTATION</Typography>\n                </Grid>\n                <Grid item xs={3} sx={{ pl: 1 }}>\n                  <Typography variant='body2'>SUBTOTAL (BEFORE TAX) :</Typography>\n                </Grid>\n                <Grid item xs={9} display='flex' justifyContent='flex-end' sx={{ pr: 1 }}>\n                  <Typography variant='body1'>{quotationView.subtotalAmount ? `Rs. ${quotationView.subtotalAmount}/-` : '-'}</Typography>\n                </Grid>\n                <Grid item xs={3} sx={{ pl: 1 }}>\n                  <Typography variant='body2'>GST :</Typography>\n                </Grid>\n                <Grid item xs={9} display='flex' justifyContent='flex-end' sx={{ pr: 1 }}>\n                  <Typography variant='body1'>{quotationView.gstAmount ? `Rs. ${quotationView.gstAmount}/-` : '-'}</Typography>\n                </Grid>\n                <Grid item xs={3} sx={{ pl: 1 }}>\n                  <Typography variant='body2'>TOTAL AMOUNT :</Typography>\n                </Grid>\n                <Grid item xs={9} display='flex' justifyContent='flex-end' sx={{ pr: 1 }}>\n                  <Typography variant='body1' style={{ fontWeight: 'bold' }}>{quotationView.totalAmount ? `Rs. ${quotationView.totalAmount}/-` : '-'}</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <Divider />\n                </Grid>\n                <Grid item xs={6} sx={{ pl: 1 }}>\n                  <Typography variant='body2'>ESTIMATED AMOUNT IN WORDS :</Typography>\n                </Grid>\n                <Grid item xs={6} sx={{ pl: 1 }} display='flex' justifyContent='flex-end'>\n                  <Typography variant='body1'> {quotationView.totalAmount ? amountInWords(quotationView.totalAmount) : '-'}</Typography>\n                </Grid>\n                <Grid item xs={12} sx={{ backgroundColor: \"#00308F\", p: 0.1 }} display='flex' justifyContent='space-around'>\n                  <Typography gutterBottom sx={{ color: \"#00308F\" }}> QUOTATION</Typography>\n                </Grid>\n                <Grid item container xs={12} sx={{ height: \"100px\", pl: 1 }} display='flex' justifyContent='center'>\n                  <Grid item xs={12}> <Typography variant='body2'>TERMS & CONDITIONS :</Typography></Grid>\n                </Grid>\n                <Grid item xs={12} sx={{ backgroundColor: \"#00308F\", p: 0.1 }} display='flex' justifyContent='space-around'>\n                  <Typography gutterBottom sx={{ color: \"#00308F\" }}> QUOTATION</Typography>\n                </Grid>\n                <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'flex-end', height: \"100px\", alignItems: \"end\" }}>\n                  <Typography gutterBottom variant='body1' sx={{ pr: 3 }}>SEAL & SIGNATURE</Typography>\n                </Grid>\n                <Grid item xs={12} sx={{ backgroundColor: \"#00308F\", p: 1 }} display='flex' justifyContent='space-around'>\n                  <Typography gutterBottom sx={{ color: \"white\" }}> INTEGRAL SOLUTION FOR INTERNATIONAL FREIGHT FORWARDING</Typography>\n                </Grid>\n              </Grid>\n            </div>\n            <div style={{ padding: \"5px\", display: 'flex', justifyContent: 'flex-end', gap: \"10px\" }} >\n              <Button onClick={\n                // handlePrint(null, () => componentRef.current);\n                () => {\n                  const printWindow = window.open('', '_blank');\n                  if (printWindow) {\n                    printWindow.document.write('<html><head><title>QUOTATION</title></head><body>');\n                    printWindow.document.write(componentRef.current.innerHTML);\n                    printWindow.document.write('</body></html>');\n                    printWindow.document.close();\n                    printWindow.print();\n                  } else {\n                    alert('Popup Blocker is enabled! Please allow popups for this site.');\n                  }\n                }\n              } color='primary' variant='contained'>\n                Export\n              </Button>\n              <Button onClick={() => {\n                setShowQuotation(false);\n                setTempData({});\n              }} color='error'>\n                Cancel\n              </Button>\n            </div>\n          </div>\n\n        </Box>\n\n      </Modal>\n\n      {/* Dialog For Delete */}\n      <Dialog open={openDialog} onClose={() => setOpenDialog(false)}>\n        <DialogTitle>Remove Lead</DialogTitle>\n        <DialogContent>\n          Are you sure you want to delete this lead?\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpenDialog(false)}>Cancel</Button>\n          <Button onClick={handleConfirmDelete} variant=\"contained\" color=\"error\">\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n\n    </Container >\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport OneView from 'src/sections/one/view';\n\n// ----------------------------------------------------------------------\n\nexport default function Page() {\n  return (\n    <>\n      <Helmet>\n        <title>Lead Management</title>\n      </Helmet>\n\n      <OneView />\n    </>\n  );\n}\n"],"names":["formatDate","dateValue","Date","toLocaleDateString","style","position","top","left","transform","width","bgcolor","borderRadius","boxShadow","height","p","styleForQuotation","inquiryFormState","commodity","hsCode","shipmentTerm","mode","typeOfPacking","numberOfPackages","dimensions","netWeight","grossWeight","pickUpAddress","pickUpAddressCode","deliveryAddress","deliveryAddressCode","portOfLoading","portOfDischarge","quotationState","number","clientCode","incoTerm","cargoType","pol","pod","cbm","overheads","stackable","carrier","cutoffDate","etd","eta","tt","tradeType","clientAddress","clientGSTNumber","clientContactNumber","clientEmail","date","LeadView","_quotation$overheads","_quotationView$client","_quotationView$commod","_quotationView$noOfPa","_quotationView$netWei","_quotationView$grossW","_quotationView$cbm","_quotationView$stacka","_quotationView$incoTe","_quotationView$mode","_quotationView$pickUp","_quotationView$pol","_quotationView$pod","_quotationView$delive","_quotationView$tradeT","_quotationView$carrie","settings","useSettingsContext","navigate","useNavigate","componentRef","useRef","enqueueSnackbar","useReactToPrint","documentTitle","content","current","onBeforePrint","value","console","log","removeAfterPrint","useSnackbar","_useState","useState","_useState2","_slicedToArray","editingIndex","setEditingIndex","_useState3","_useState4","open","setOpen","_useState5","_useState6","inquiryForm","setInquiryForm","_useState7","_useState8","quotation","setQuotation","_useState9","_useState10","editUser","setEditUser","_useState11","_useState12","isLeadLoading","setIsLeadLoading","_useState13","_useState14","leads","setLeads","_useState15","name","rate","gst","exRate","qty","totalAmount","_useState16","overhead","setOverHead","_useState17","_useState18","editOverhead","setEditOverHead","_useState19","_useState20","editOverheadIndex","setEditOverHeadIndex","_useState21","length","breadth","_useState22","dimension","setDimension","_useState23","_useState24","editDimension","setEditDimension","_useState25","_useState26","quotationModal","setQuotationModal","_useState27","id","meetingScheduleDate","inquiry","source","place","form","status","_useState28","lead","setLead","_useState29","_useState30","openDialog","setOpenDialog","_useState31","_useState32","anchorEl","setAnchorEl","openMenu","Boolean","_useState33","_useState34","tempData","setTempData","_useState35","_useState36","showQuotation","setShowQuotation","_useState37","_useState38","anchorElForOverhead","setAnchorElForOverhead","openForOverhead","handleInputChange","field","prev","_objectSpread","_defineProperty","handleDimensionChange","handleEditDimensionChange","overheadColumns","selector","row","index","cell","_jsx","children","TextField","size","type","onChange","e","target","toFixed","_Fragment","_jsxs","IconButton","onClick","variant","existingQuote","newOverhead","color","SaveIcon","CancelIcon","ovhd","handleExistingOverheadChange","EditIcon","newOverheads","filter","_","i","DeleteIcon","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","decryptedToken","accessToken","response","wrap","_context","next","localStorage","getItem","constants","decryptToken","axios","endpoints","headers","Authorization","concat","sent","data","t0","stop","apply","arguments","_useState39","quotationNo","noOfPackages","cutOffDate","subtotalAmount","gstAmount","termsAndConditions","_useState40","quotationView","setQuotationView","useEffect","handleAddLead","_ref2","_callee2","_context2","then","res","handleCancelAllStates","catch","err","error","msg","leadColumns","sortable","toUpperCase","Label","createdAt","center","_row$quotation","_row$inquiry","_row$inquiry$form","_row$inquiry2","_row$inquiry2$form","display","justifyContent","alignItems","gap","Button","event","currentTarget","endIcon","ArrowDropDownIcon","startIcon","AddIcon","disabled","handleRedirectionToJCPage","Menu","onClose","MenuListProps","MenuItem","handleEditDetails","map","obj","reduce","sum","parseFloat","handleViewQuotation","handleDeleteDetails","_id","localDate","year","getFullYear","month","getMonth","toString","padStart","day","getDate","hours","getHours","minutes","getMinutes","formattedDate","localInquiryDate","yearI","monthI","dayI","hoursI","minutesI","formattedDateForInquiry","leadData","quot","handleUpdateData","_ref3","_callee3","_context3","state","Container","maxWidth","themeStretch","Typography","paddingTop","Modal","Box","sx","component","Grid","container","spacing","pt","item","xs","fullWidth","label","required","InputLabelProps","shrink","getTime","formattedDateForComp","FormControl","InputLabel","Select","labelId","flexDirection","maxHeight","overflow","newDimension","_toConsumableArray","placeholder","DataTable","columns","editedDimension","updatedDimensions","dimensionToEdit","handleEdit","newDimensions","padding","test","inputProps","maxLength","ovData","prevOverhead","handleAddOverhead","gutterBottom","mr","acc","curr","tempLead","marginTop","pagination","progressPending","ref","overflowX","border","backgroundColor","fontSize","src","alt","className","objectFit","pl","pr","fontWeight","Divider","amountInWords","printWindow","window","document","write","innerHTML","close","print","alert","Dialog","DialogTitle","DialogContent","DialogActions","config","Page","Helmet","OneView"],"sourceRoot":""}