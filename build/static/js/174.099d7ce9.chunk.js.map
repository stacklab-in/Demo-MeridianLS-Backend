{"version":3,"file":"static/js/174.099d7ce9.chunk.js","mappings":"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","sources":["sections/two/view.js","pages/dashboard/two.js","../node_modules/@mui/icons-material/DeleteForever.js"],"sourcesContent":["// @mui\nimport React, { useState, useEffect } from 'react';\n// components\nimport { useSettingsContext } from 'src/components/settings';\nimport { Button, Modal, Divider, Grid, MenuItem, Box, Container, Typography, Menu, TextField, List, ListItem, ListItemText, IconButton } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { decryptToken, formatDate, amountInWords } from 'src/utils/common';\nimport axios, { endpoints } from 'src/utils/axios';\nimport { constants } from 'src/utils/constant';\nimport { enqueueSnackbar } from 'notistack';\nimport DataTable from 'react-data-table-component';\nimport html2canvas from 'html2canvas';\nimport JsPDF from 'jspdf';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\n// ----------------------------------------------------------------------\nconst styleForQuotation = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: \"80%\",\n  bgcolor: 'background.paper',\n  borderRadius: \"10px\",\n  boxShadow: 24,\n  height: \"90%\",\n  p: 4,\n};\n\nexport default function JobcardView() {\n  const settings = useSettingsContext();\n  const navigate = useNavigate();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState([]);\n\n  // For Actions Dropdown\n  const [anchorEl, setAnchorEl] = useState(null);\n  const openMenu = Boolean(anchorEl);\n\n  // Temporary State\n  const [tempData, setTempData] = useState({});\n  const [termsModal, setTermsModal] = useState(false);\n  const [terms, setTerms] = useState([]);\n  const [newTerm, setNewTerm] = useState('');\n\n  const [existingTermsModal, setExistingTermsModal] = useState(false);\n  const [existingTerms, setExistingTerms] = useState(['Term 1', 'Term 2', 'Term 3']); // Sample existing terms\n\n  const addTerm = () => {\n    if (newTerm.trim() !== '') {\n      // Check if the term already exists in the list\n      if (!terms.includes(newTerm.trim())) {\n        setTerms([...terms, newTerm.trim()]);\n      } else {\n        // If the term already exists, display a message or handle it as desired\n        console.log('Term already exists');\n        enqueueSnackbar('Term already exists', { variant: 'error' });\n        // Optionally, you can set an error state here or show a snackbar/message\n      }\n      setNewTerm(''); // Clear input after adding\n    }\n  };\n\n  const addExistingTerm = (term) => {\n    // Check if the term already exists in the list\n    if (!terms.includes(term.trim())) {\n      setTerms([...terms, term.trim()]);\n      setNewTerm(''); // Clear input after adding\n      setExistingTermsModal(false);\n    } else {\n      // If the term already exists, display a message or handle it as desired\n      console.log('Term already exists');\n      enqueueSnackbar('Term already exists', { variant: 'error' });\n      // Optionally, you can set an error state here or show a snackbar/message\n    }\n    // Close the modal after adding the term\n  };\n\n  const removeTerm = (index) => {\n    const updatedTerms = [...terms];\n    updatedTerms.splice(index, 1);\n    setTerms(updatedTerms);\n  };\n\n  const handleAddCondtions = async () => {\n    const decryptedToken = localStorage.getItem(constants.keyUserToken);\n    const accessToken = decryptToken(decryptedToken);\n    axios.post(endpoints.terms.add, { terms, id: tempData._id },\n      {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      })\n      .then((res) => {\n        enqueueSnackbar('Terms Added successfully!', { variant: 'success' });\n        setTerms([]);\n        setNewTerm('');\n        setTermsModal(false);\n        setTempData({});\n        setIsLoading(false);\n        fetchData();\n      }).catch((err) => {\n        enqueueSnackbar(err.error || 'Something Went Wrong!', { variant: 'error' });\n      })\n  };\n\n  const fetchData = async () => {\n\n    try {\n      const decryptedToken = localStorage.getItem(constants.keyUserToken);\n      const accessToken = decryptToken(decryptedToken);\n      const response = await axios.post(endpoints.jobcard.list, { status: ['CONFIRMED'] }, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      });\n      if (response) {\n        console.log({ response });\n        setIsLoading(false);\n        setData(response.data.data);\n        console.log(response.data.data);\n      }\n    } catch (err) {\n      enqueueSnackbar('Failed to fetch jobcards!', { variant: 'error' });\n      setIsLoading(false);\n    }\n  };\n\n  const fetchTerms = async () => {\n\n    try {\n      const decryptedToken = localStorage.getItem(constants.keyUserToken);\n      const accessToken = decryptToken(decryptedToken);\n      const response = await axios.post(endpoints.terms.list, {}, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        }\n      });\n      if (response) {\n        console.log({ response });\n        setExistingTerms(response.data.data.map((term) => term.name));\n      }\n    } catch (err) {\n      enqueueSnackbar('Failed to fetch jobcards!', { variant: 'error' });\n    }\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchData();\n    fetchTerms();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleEditDetails = () => {\n    setAnchorEl(null);\n    // Redirection to Job Card page\n    const routeWithState = { state: tempData, }\n    navigate(\"/dashboard/update_jobcard\", routeWithState);\n  };\n\n  const handleViewQuotation = () => {\n    setAnchorEl(null);\n\n    console.log('jobcard', tempData);\n\n    const newOverheads = tempData.quotation.overheads.map(obj => {\n      const gstAmount = obj.rate * obj.exRate * obj.qty * obj.gst / 100;\n      const subtotalAmount = obj.rate * obj.exRate * obj.qty;\n      const totalAmount = gstAmount + subtotalAmount;\n      return {\n        name: obj.name,\n        rate: obj.rate,\n        exRate: obj.exRate,\n        qty: obj.qty,\n        gst: obj.gst,\n        subtotalAmount: subtotalAmount.toFixed(2),\n        gstAmount: gstAmount.toFixed(2),\n        totalAmount: totalAmount.toFixed(2)\n      };\n    });\n\n    const subtotalAmount = newOverheads.reduce((sum, obj) => sum + parseFloat(obj.subtotalAmount), 0);\n    const gstAmount = newOverheads.reduce((sum, obj) => sum + parseFloat(obj.gstAmount), 0);\n    const totalAmount = newOverheads.reduce((sum, obj) => sum + parseFloat(obj.totalAmount), 0);\n    console.log({ subtotalAmount, gstAmount, totalAmount });\n    setQuotationView((prev) => ({\n      ...prev,\n      name: tempData.name,\n      clientCode: tempData.quotation.clientCode,\n      quotationNo: tempData.quotation.number,\n      date: tempData.quotation.date,\n      commodity: tempData.inquiry.form.commodity,\n      noOfPackages: tempData.inquiry.form.numberOfPackages,\n      netWeight: tempData.inquiry.form.netWeight,\n      grossWeight: tempData.quotation.grossWeight,\n      cbm: tempData.quotation.cbm,\n      stackable: tempData.quotation.stackable,\n      incoTerm: tempData.quotation.incoTerm,\n      mode: tempData.quotation.tradeType,\n      pickUpAddress: tempData.inquiry.form.pickUpAddress,\n      pol: tempData.quotation.pol,\n      pod: tempData.quotation.pod,\n      deliveryAddress: tempData.quotation.deliveryAddress,\n      tradeType: tempData.quotation.tradeType,\n      carrier: tempData.quotation.carrier,\n      cutOffDate: tempData.quotation.cutoffDate,\n      etd: tempData.quotation.etd,\n      eta: tempData.quotation.eta,\n      tt: tempData.quotation.tt,\n      overheads: newOverheads,\n      subtotalAmount: subtotalAmount?.toFixed(2),\n      gstAmount: gstAmount?.toFixed(2),\n      totalAmount: totalAmount?.toFixed(2),\n      termsAndConditions: tempData.terms,\n      clientAddress: tempData.quotation.clientAddress,\n      clientEmail: tempData.quotation.clientEmail,\n      clientGSTNumber: tempData.quotation.clientGSTNumber,\n      clientContactNumber: tempData.quotation.clientContactNumber,\n\n    }));\n\n    setShowQuotation(true);\n  };\n\n  // Quotation\n  const [showQuotation, setShowQuotation] = useState(false);\n  const [quotationView, setQuotationView] = useState({\n    name: '',\n    clientCode: '',\n    address: '',\n    gst: '',\n    contactNumber: '',\n    email: '',\n    quotationNo: '',\n    date: '',\n    commodity: '',\n    noOfPackages: '',\n    netWeight: '',\n    grossWeight: '',\n    cbm: '',\n    stackable: '',\n    incoTerm: '',\n    mode: '',\n    pickUpAddress: '',\n    pol: '',\n    pod: '',\n    deliveryAddress: '',\n    tradeType: '',\n    carrier: '',\n    cutOffDate: '',\n    etd: '',\n    eta: '',\n    tt: '',\n    overheads: [],\n    subtotalAmount: '',\n    gstAmount: '',\n    totalAmount: '',\n    termsAndConditions: []\n  });\n\n  const overheadQuotationViewColumn = [\n    {\n      name: 'Sr. No.',\n      selector: (row, index) => index + 1,\n      center: 'true'\n    },\n    {\n      name: 'Description',\n      selector: (row, index) => row.name,\n    },\n    {\n      name: 'QTY',\n      selector: (row, index) => row.qty,\n      center: 'true'\n    },\n    {\n      name: 'Rate',\n      selector: (row, index) => row.rate,\n      center: 'true'\n    },\n    {\n      name: 'Ex. Rate',\n      selector: (row, index) => row.exRate,\n      center: 'true'\n    },\n    {\n      name: 'Net Total',\n      selector: (row, index) => row.subtotalAmount,\n      center: 'true',\n    },\n    {\n      name: 'GST ( % )',\n      selector: (row, index) => `${row.gst}%`,\n      center: 'true'\n    },\n    {\n      name: 'Amount With GST',\n      selector: (row, index) => row.totalAmount,\n      center: 'true',\n    },\n  ];\n\n  const columns = [\n    {\n      name: '#',\n      selector: (row, index) => index + 1,\n      sortable: true,\n      width: '70px',\n    },\n    {\n      name: 'Tracking No.',\n      selector: (row) => row.trackingNumber,\n      sortable: true,\n    },\n    {\n      name: 'Jobcard No.',\n      selector: (row) => row.number,\n      sortable: true,\n    },\n    {\n      name: 'Client Name',\n      selector: (row) => row.leadId.name.toUpperCase(),\n      sortable: true,\n    },\n    {\n      name: 'Status',\n      selector: (row) => {\n        if (row?.shipmentId) {\n          return row.shipmentId.statuses[row.shipmentId.statuses.length - 1].value\n        };\n        return 'N/A';\n      },\n      sortable: true,\n      center: 'true',\n    },\n    {\n      name: 'Created On',\n      selector: (row) => formatDate(row.createdAt),\n      sortable: true,\n      width: '250px'\n    },\n    {\n      name: 'Actions',\n      center: true,\n      cell: (row) => (\n        <>\n          <Button color=\"info\" variant=\"outlined\" onClick={(event) => {\n            setAnchorEl(event.currentTarget);\n            setTempData(row);\n          }} >\n            Action\n          </Button>\n          <Menu\n            id=\"basic-menu\"\n            anchorEl={anchorEl}\n            open={openMenu}\n            onClose={() => {\n              setAnchorEl(null);\n              setTempData({});\n            }}\n            MenuListProps={{\n              'aria-labelledby': 'basic-button',\n            }}\n          >\n            <MenuItem onClick={() => handleEditDetails()}>Update</MenuItem>\n            <MenuItem onClick={() => handleViewQuotation()}>View Quotation</MenuItem>\n            <MenuItem onClick={() => {\n              setAnchorEl(null);\n              setTermsModal(true);\n              if (tempData.terms && tempData.terms.length) {\n                setTerms(tempData.terms);\n              }\n            }}>Add terms & Conditions</MenuItem>\n          </Menu>\n        </>\n      ),\n    },\n  ];\n\n  // const handleExportToPDF = async () => {\n  //   console.log('export');\n  //   setAnchorEl(null);\n  //   // const invoice = document.getElementById(\"quotation\");\n\n  //   // // Use html2canvas to create a canvas from the invoice content\n  //   // const canvas = await html2canvas(invoice);\n\n  //   // // Get the canvas data as a URL and add it to the PDF\n  //   // const imgData = canvas.toDataURL(\"image/png\");\n\n  //   // const doc = new JsPDF('p', 'mm', 'a4');\n  //   // doc.addImage(imgData, \"PNG\", 0, 0);\n\n  //   // // Download the PDF\n  //   // doc.save(\"quotation.pdf\");\n\n  //   const content = document.getElementById(\"quotation\");\n  //   console.log(\"🚀 ~ handleExportToPDF ~ content:\", content);\n\n  //   // Create a new Blob object\n  //   const blob = new Blob([content.outerHTML], { type: 'application/pdf' });\n\n  //   // Create a temporary anchor element\n  //   const anchor = document.createElement('a');\n  //   anchor.download = 'content.pdf';\n  //   anchor.href = URL.createObjectURL(blob);\n\n  //   // Trigger a click event on the anchor to initiate download\n  //   anchor.click();\n\n  // };\n\n  const handleExportToPDF = async () => {\n    try {\n      const quotationElement = document.getElementById('quotation'); // Get the quotation div element\n\n      // Use html2canvas to capture the content of the div\n      const canvas = await html2canvas(quotationElement, { scrollY: -window.scrollY });\n\n      // Initialize jsPDF with A4 size\n      const pdf = new JsPDF('p', 'mm', 'a4');\n\n      // Calculate the height of the content on A4 size page\n      const contentHeight = canvas.height * 210 / canvas.width; // A4 width is 210mm\n\n      // Add the captured content to the PDF\n      pdf.addImage(canvas, 'PNG', 0, 0, 210, contentHeight);\n\n      // Download the PDF\n      pdf.save('quotation.pdf');\n    } catch (error) {\n      console.error('Error exporting to PDF:', error);\n    }\n  };\n\n  return (\n    <Container maxWidth={settings.themeStretch ? false : 'xl'}>\n      <Typography variant=\"h4\"> JOB CARDS </Typography>\n\n      {/* <Box\n        sx={{\n          mt: 5,\n          width: 1,\n          height: 320,\n          borderRadius: 2,\n          bgcolor: (theme) => alpha(theme.palette.grey[500], 0.04),\n          border: (theme) => `dashed 1px ${theme.palette.divider}`,\n        }}\n      /> */}\n\n\n      <div style={{ marginTop: \"20px\" }}>\n        <DataTable\n          columns={columns}\n          data={data}\n          pagination\n          progressPending={isLoading}\n        />\n      </div>\n\n      {/* Show Quotation */}\n      <Modal\n        open={showQuotation}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={styleForQuotation}>\n          <div style={{ height: \"100%\" }}>\n\n            <div id='quotation' style={{ height: \"98%\" }}>\n              <Grid container sx={{ overflowX: 'auto', maxHeight: \"100%\", border: \"1px solid black\" }} >\n                <Grid item xs={12} sx={{ backgroundColor: \"#00308F\", p: 1 }} display='flex' justifyContent='space-around'>\n                  <Typography variant=\"h5\" gutterBottom sx={{ color: \"white\", }}> QUOTATION</Typography>\n                </Grid>\n                <Grid item xs={12} sx={{ backgroundColor: \"#B9D9EB\", p: 1 }} display='flex' justifyContent='space-around' >\n                  <Typography variant=\"h3\" gutterBottom sx={{ fontSize: \"20px\" }}>MERIDIAN LOGISTICS SOLUTIONS</Typography>\n                </Grid>\n                <Grid item xs={6} container sx={{ p: 1 }}>\n\n                  <Grid item xs={12} display='flex' justifyContent='space-between'>\n                    <Grid item >\n                      <Typography variant=\"body1\" gutterBottom >\n                        CLIENT NAME :\n                      </Typography>\n                    </Grid>\n                    <Grid item >\n                      <Typography variant=\"body2\" gutterBottom >\n                        {quotationView.name}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={12} display='flex' justifyContent='space-between'>\n                    <Grid item >\n                      <Typography variant=\"body1\" gutterBottom >\n                        CLIENT CODE :\n                      </Typography>\n                    </Grid>\n                    <Grid item >\n                      <Typography variant=\"body2\" gutterBottom >\n                        {quotationView.clientCode ?? 'N/A'}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={12} display='flex' justifyContent='space-between'>\n                    <Grid item >\n                      <Typography variant=\"body1\" gutterBottom >\n                        ADDRESS :\n                      </Typography>\n\n                    </Grid>\n                    <Grid item >\n                      <Typography variant=\"body2\" gutterBottom >\n                        {quotationView.clientAddress ? quotationView.clientAddress : 'N/A'}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={12} display='flex' justifyContent='space-between'>\n                    <Grid item >\n                      <Typography variant=\"body1\" gutterBottom >\n                        GSTIN :\n                      </Typography>\n                    </Grid>\n                    <Grid item >\n                      <Typography variant=\"body2\" gutterBottom >\n                        {quotationView.clientGSTNumber ? quotationView.clientGSTNumber : 'N/A'}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={12} display='flex' justifyContent='space-between'>\n                    <Grid item >\n                      <Typography variant=\"body1\" gutterBottom >\n                        CONTACT NUMBER :\n                      </Typography>\n\n                    </Grid>\n                    <Grid item >\n                      <Typography variant=\"body2\" gutterBottom >\n                        {quotationView.clientContactNumber ? quotationView.clientContactNumber : 'N/A'}\n                      </Typography>\n\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={12} display='flex' justifyContent='space-between'>\n                    <Grid item >\n                      <Typography variant=\"body1\" gutterBottom >\n                        EMAIL :\n                      </Typography>\n                    </Grid>\n                    <Grid item >\n                      <Typography variant=\"body2\" gutterBottom >\n                        {quotationView.clientEmail ? quotationView.clientEmail : 'N/A'}\n                      </Typography>\n\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={12} display='flex' justifyContent='space-between'>\n                    <Grid item >\n                      <Typography variant=\"body1\" gutterBottom >\n                        QUOTATION NO :\n                      </Typography>\n                    </Grid>\n                    <Grid item >\n                      <Typography variant=\"body2\" gutterBottom >\n                        {quotationView.quotationNo ? quotationView.quotationNo : 'N/A'}\n                      </Typography>\n\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={12} display='flex' justifyContent='space-between'>\n                    <Grid item >\n                      <Typography variant=\"body1\" gutterBottom >\n                        DATE :\n                      </Typography>\n                    </Grid>\n                    <Grid item >\n                      <Typography variant=\"body2\" gutterBottom >\n                        {quotationView.date ? formatDate(quotationView.date) : 'N/A'}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item xs={6} display='flex' justifyContent='flex-end'>\n                  <img\n                    // style={{ width: \"100px\", height: \"100px\" }}\n                    src=\"/logo/logo_single.png\" // Replace with the path to your logo.png file\n                    alt=\"Logo\"\n                    className={{ width: '100%', height: '100%', objectFit: 'cover' }}\n                  />\n                </Grid>\n                <Grid item xs={12} sx={{ backgroundColor: \"#00308F\", p: 0.1 }} display='flex' justifyContent='space-around'>\n                  <Typography gutterBottom sx={{ color: \"#00308F\" }}> QUOTATION</Typography>\n                </Grid>\n\n                {/*   All Details  */}\n                <Grid container display='flex' justifyContent='space-between' flexDirection='row' sx={{ p: 1 }}>\n\n                  <Grid item xs={3} container >\n\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          COMMODITY :\n                        </Typography>\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.commodity ?? 'N/A'}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          NO. OF PACKAGES :\n                        </Typography>\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.noOfPackages ?? 'N/A'}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          NET WEIGHT :\n                        </Typography>\n\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.netWeight ?? 'N/A'}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          GROSS WEIGHT :\n                        </Typography>\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.grossWeight ?? 'N/A'}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          CH. WT./ CBM :\n                        </Typography>\n\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.cbm ?? 'N/A'}\n                        </Typography>\n\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          STACKABLE :\n                        </Typography>\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.stackable ?? 'N/A'}\n                        </Typography>\n\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <Grid item xs={3} container >\n\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          INCO TERM :\n                        </Typography>\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.incoTerm ?? 'N/A'}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          MODE :\n                        </Typography>\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.mode ?? 'N/A'}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          PICK UP :\n                        </Typography>\n\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.pickUpAddress ?? 'N/A'}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          POL :\n                        </Typography>\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.pol ?? 'N/A'}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          POD :\n                        </Typography>\n\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.pod ?? 'N/A'}\n                        </Typography>\n\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          DELIVERY :\n                        </Typography>\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.deliveryAddress ?? 'N/A'}\n                        </Typography>\n\n                      </Grid>\n                    </Grid>\n                  </Grid>\n\n                  <Grid item xs={3} container  >\n\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          TRADE TYPE :\n                        </Typography>\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.tradeType ?? 'N/A'}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          CARRIER :\n                        </Typography>\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.carrier ?? 'N/A'}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          CUT OFF :\n                        </Typography>\n\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.cutOffDate ? formatDate(quotationView.cutOffDate) : 'N/A'}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          ESTIMATED TIME OF DEPARTURE :\n                        </Typography>\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.etd ? formatDate(quotationView.etd) : 'N/A'}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          ESTIMATED TIME OF ARRIVAL :\n                        </Typography>\n\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.eta ? formatDate(quotationView.eta) : 'N/A'}\n                        </Typography>\n\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={12} display='flex' justifyContent='space-between'>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          TRANSIT TIME :\n                        </Typography>\n                      </Grid>\n                      <Grid item >\n                        <Typography variant=\"caption\" gutterBottom >\n                          {quotationView.tt ? `${quotationView.tt} Days` : 'N/A'}\n                        </Typography>\n\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n\n\n                <Grid item xs={12} sx={{ backgroundColor: \"#00308F\", p: 0.1 }} display='flex' justifyContent='space-around'>\n                  <Typography gutterBottom sx={{ color: \"#00308F\" }}> QUOTATION</Typography>\n                </Grid>\n\n                <Grid item xs={12} sx={{ p: 1 }}>\n                  <DataTable\n                    columns={overheadQuotationViewColumn}\n                    data={quotationView.overheads}\n                  />\n                </Grid>\n\n                <Grid item xs={12} sx={{ backgroundColor: \"#00308F\", p: 0.1 }} display='flex' justifyContent='space-around'>\n                  <Typography gutterBottom sx={{ color: \"#00308F\" }}> QUOTATION</Typography>\n                </Grid>\n                <Grid item xs={3} sx={{ pl: 1 }}>\n                  <Typography variant='body2'>SUBTOTAL (BEFORE TAX) :</Typography>\n                </Grid>\n                <Grid item xs={9} display='flex' justifyContent='flex-end' sx={{ pr: 1 }}>\n                  <Typography variant='body1'>{quotationView.subtotalAmount ? `Rs. ${quotationView.subtotalAmount}/-` : '-'}</Typography>\n                </Grid>\n                <Grid item xs={3} sx={{ pl: 1 }}>\n                  <Typography variant='body2'>GST :</Typography>\n                </Grid>\n                <Grid item xs={9} display='flex' justifyContent='flex-end' sx={{ pr: 1 }}>\n                  <Typography variant='body1'>{quotationView.gstAmount ? `Rs. ${quotationView.gstAmount}/-` : '-'}</Typography>\n                </Grid>\n                <Grid item xs={3} sx={{ pl: 1 }}>\n                  <Typography variant='body2'>TOTAL AMOUNT :</Typography>\n                </Grid>\n                <Grid item xs={9} display='flex' justifyContent='flex-end' sx={{ pr: 1 }}>\n                  <Typography variant='body1' style={{ fontWeight: 'bold' }}>{quotationView.totalAmount ? `Rs. ${quotationView.totalAmount}/-` : '-'}</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <Divider />\n                </Grid>\n                <Grid item xs={6} sx={{ pl: 1 }}>\n                  <Typography variant='body2'>ESTIMATED AMOUNT IN WORDS :</Typography>\n                </Grid>\n                <Grid item xs={6} sx={{ pl: 1 }} display='flex' justifyContent='flex-end'>\n                  <Typography variant='body1'> {quotationView.totalAmount ? amountInWords(quotationView.totalAmount) : '-'}</Typography>\n                </Grid>\n                <Grid item xs={12} sx={{ backgroundColor: \"#00308F\", p: 0.1 }} display='flex' justifyContent='space-around'>\n                  <Typography gutterBottom sx={{ color: \"#00308F\" }}> QUOTATION</Typography>\n                </Grid>\n                <Grid item container xs={12} sx={{ pl: 1 }} display='flex' justifyContent='center'>\n                  <Grid item xs={12}> <Typography variant='body2'>TERMS & CONDITIONS :</Typography></Grid>\n                </Grid>\n\n                {quotationView.termsAndConditions.length > 0 &&\n                  <Grid item xs={12}>\n                    <List>\n                      {quotationView.termsAndConditions.map((term, index) => (\n                        <React.Fragment key={index}>\n                          <ListItem>\n                            <ListItemText primary={`${index + 1}. ${term}`} />\n                          </ListItem>\n                          {index !== terms.length - 1 && <Divider />} {/* Add divider for all except the last item */}\n                        </React.Fragment>\n                      ))}\n                    </List>\n                  </Grid>\n                }\n                <Grid item xs={12} sx={{ backgroundColor: \"#00308F\", p: 0.1 }} display='flex' justifyContent='space-around'>\n                  <Typography gutterBottom sx={{ color: \"#00308F\" }}> QUOTATION</Typography>\n                </Grid>\n                <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'flex-end', height: \"100px\", alignItems: \"end\" }}>\n                  <Typography gutterBottom variant='body1' sx={{ pr: 3 }}>SEAL & SIGNATURE</Typography>\n                </Grid>\n                <Grid item xs={12} sx={{ backgroundColor: \"#00308F\", p: 1 }} display='flex' justifyContent='space-around'>\n                  <Typography gutterBottom sx={{ color: \"white\" }}> INTEGRAL SOLUTION FOR INTERNATIONAL FREIGHT FORWARDING</Typography>\n                </Grid>\n              </Grid>\n            </div>\n            <div style={{ padding: \"5px\", display: 'flex', justifyContent: 'flex-end', gap: \"10px\" }} >\n              <Button onClick={handleExportToPDF} color='primary' variant='contained'>\n                Export\n              </Button>\n              <Button onClick={() => {\n                setShowQuotation(false);\n                setTempData({});\n              }} color='error'>\n                Cancel\n              </Button>\n            </div>\n          </div>\n\n        </Box>\n\n      </Modal>\n\n      {/* Show Terms & Conditions */}\n      <Modal open={termsModal}>\n        <Box sx={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          width: '70%',\n          bgcolor: 'background.paper',\n          boxShadow: 24,\n          borderRadius: '10px',\n          p: 2,\n        }}>\n\n\n          <Grid container spacing={2} >\n            <Grid item xs={12} display='flex' justifyContent='space-between' alignItems='center'>\n              <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                ADD TERMS & CONDITIONS\n              </Typography>\n              {\n                existingTerms !== 0 &&\n                <Button color='primary' variant='contained' onClick={() => setExistingTermsModal(true)}>\n                  ADD EXISTING TERMS\n                </Button>\n              }\n            </Grid>\n\n            <Grid item xs={12} display='flex' justifyContent='space-between' gap='10px' alignItems='center'>\n              <TextField\n                name='addtermsandconditions'\n                label='Add Terms and Conditions'\n                placeholder='Please enter terms and conditions'\n                value={newTerm}\n                onChange={(e) => setNewTerm(e.target.value)}\n                fullWidth\n              />\n              <Button disabled={!newTerm} size='large' variant=\"contained\" onClick={addTerm} >Add</Button>\n            </Grid>\n\n\n            {\n              terms.length > 0 &&\n              <Grid item xs={12}>\n                <List style={{ maxHeight: 400, overflow: 'auto', border: '1px solid black', borderRadius: '10px' }}>\n                  {terms.map((term, index) => (\n                    <React.Fragment key={index}>\n                      <ListItem>\n                        <div style={{ display: 'flex', justifyContent: 'flex-start', gap: '20px', alignItems: 'center', width: '100%' }}>\n                          <ListItemText primary={`${index + 1}. ${term}`} />\n                          <IconButton color='error' variant='contained' onClick={() => removeTerm(index)}>\n                            <DeleteForeverIcon />\n                          </IconButton>\n                        </div>\n                      </ListItem>\n                      {index !== terms.length - 1 && <Divider />} {/* Add divider for all except the last item */}\n                    </React.Fragment>\n                  ))}\n                </List>\n              </Grid>\n            }\n            <Grid item xs={12} display='flex' justifyContent='flex-end' gap='10px'>\n              <Button color='primary' variant='contained' onClick={\n                handleAddCondtions\n              }\n                disabled={terms.length === 0}>\n                SAVE TERMS & CONDITIONS\n              </Button>\n              <Button color='error' variant='contained'\n                onClick={\n                  () => {\n                    setTermsModal(false);\n                  }\n                }\n              >\n                CANCEL\n              </Button>\n            </Grid>\n          </Grid>\n        </Box>\n      </Modal>\n\n\n      <Modal open={existingTermsModal}>\n        <Box\n          sx={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            width: '70%',\n            bgcolor: 'background.paper',\n            boxShadow: 24,\n            borderRadius: '10px',\n            p: 2,\n          }}\n        >\n          <Typography variant=\"h6\" gutterBottom>\n            Select Existing Terms\n          </Typography>\n          <List style={{ maxHeight: 400, overflow: 'auto', border: '1px solid black', borderRadius: '10px', marginTop: \"20px\", marginBottom: \"20px\" }}>\n            {existingTerms.map((term, index) => (\n              <React.Fragment key={index}>\n                <ListItem onClick={() => addExistingTerm(term)}>\n                  <ListItemText primary={`${index + 1}. ${term}`} />\n                </ListItem>\n                {index !== existingTerms.length - 1 && <Divider />} {/* Add divider for all except the last item */}\n              </React.Fragment>\n            ))}\n          </List>\n\n          <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n\n            <Button color='error' variant='contained' onClick={() => setExistingTermsModal(false)}>\n              CLOSE\n            </Button>\n          </div>\n        </Box>\n      </Modal>\n    </Container >\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport TwoView from 'src/sections/two/view';\n\n// ----------------------------------------------------------------------\n\nexport default function Page() {\n  return (\n    <>\n      <Helmet>\n        <title> Job Card </title>\n      </Helmet>\n\n      <TwoView />\n    </>\n  );\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zm2.46-7.12 1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteForever');"],"names":["styleForQuotation","position","top","left","transform","width","bgcolor","borderRadius","boxShadow","height","p","JobcardView","_quotationView$client","_quotationView$commod","_quotationView$noOfPa","_quotationView$netWei","_quotationView$grossW","_quotationView$cbm","_quotationView$stacka","_quotationView$incoTe","_quotationView$mode","_quotationView$pickUp","_quotationView$pol","_quotationView$pod","_quotationView$delive","_quotationView$tradeT","_quotationView$carrie","settings","useSettingsContext","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","data","setData","_useState5","_useState6","anchorEl","setAnchorEl","openMenu","Boolean","_useState7","_useState8","tempData","setTempData","_useState9","_useState10","termsModal","setTermsModal","_useState11","_useState12","terms","setTerms","_useState13","_useState14","newTerm","setNewTerm","_useState15","_useState16","existingTermsModal","setExistingTermsModal","_useState17","_useState18","existingTerms","setExistingTerms","handleAddCondtions","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","decryptedToken","accessToken","wrap","_context","prev","next","localStorage","getItem","constants","decryptToken","axios","endpoints","id","_id","headers","Authorization","concat","then","res","enqueueSnackbar","variant","fetchData","catch","err","error","stop","apply","arguments","_ref2","_callee2","response","_context2","status","sent","console","log","t0","fetchTerms","_ref3","_callee3","_context3","map","term","name","useEffect","_useState19","_useState20","showQuotation","setShowQuotation","_useState21","clientCode","address","gst","contactNumber","email","quotationNo","date","commodity","noOfPackages","netWeight","grossWeight","cbm","stackable","incoTerm","mode","pickUpAddress","pol","pod","deliveryAddress","tradeType","carrier","cutOffDate","etd","eta","tt","overheads","subtotalAmount","gstAmount","totalAmount","termsAndConditions","_useState22","quotationView","setQuotationView","columns","selector","row","index","sortable","trackingNumber","number","leadId","toUpperCase","shipmentId","statuses","length","value","center","formatDate","createdAt","cell","_jsxs","_Fragment","children","_jsx","Button","color","onClick","event","currentTarget","Menu","open","onClose","MenuListProps","MenuItem","state","newOverheads","quotation","obj","rate","exRate","qty","toFixed","reduce","sum","parseFloat","_objectSpread","inquiry","form","numberOfPackages","cutoffDate","clientAddress","clientEmail","clientGSTNumber","clientContactNumber","handleViewQuotation","handleExportToPDF","_ref4","_callee4","quotationElement","canvas","pdf","contentHeight","_context4","document","getElementById","html2canvas","scrollY","window","JsPDF","addImage","save","Container","maxWidth","themeStretch","Typography","style","marginTop","DataTable","pagination","progressPending","Modal","Box","sx","Grid","container","overflowX","maxHeight","border","item","xs","backgroundColor","display","justifyContent","gutterBottom","fontSize","src","alt","className","objectFit","flexDirection","pl","pr","fontWeight","Divider","amountInWords","List","React","ListItem","ListItemText","primary","alignItems","padding","gap","spacing","component","TextField","label","placeholder","onChange","e","target","fullWidth","disabled","size","trim","includes","_toConsumableArray","overflow","IconButton","updatedTerms","splice","removeTerm","DeleteForeverIcon","marginBottom","addExistingTerm","Page","Helmet","TwoView","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}